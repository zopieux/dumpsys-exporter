//
// Copyright (C) 2017 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.25.4
// source: frameworks/base/core/proto/android/service/procstats.proto

package service

import (
	_ "github.com/zopieux/dumpsys-exporter/proto/android/frameworks/base/core/proto/android"
	util "github.com/zopieux/dumpsys-exporter/proto/android/frameworks/base/core/proto/android/util"
	service "github.com/zopieux/dumpsys-exporter/proto/android/frameworks/proto_logging/stats/enums/service"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Data completeness. e.g. "complete", "partial", shutdown", or "sysprops".
type ProcessStatsSectionProto_Status int32

const (
	ProcessStatsSectionProto_STATUS_UNKNOWN  ProcessStatsSectionProto_Status = 0
	ProcessStatsSectionProto_STATUS_COMPLETE ProcessStatsSectionProto_Status = 1
	ProcessStatsSectionProto_STATUS_PARTIAL  ProcessStatsSectionProto_Status = 2
	ProcessStatsSectionProto_STATUS_SHUTDOWN ProcessStatsSectionProto_Status = 3
	ProcessStatsSectionProto_STATUS_SYSPROPS ProcessStatsSectionProto_Status = 4
)

// Enum value maps for ProcessStatsSectionProto_Status.
var (
	ProcessStatsSectionProto_Status_name = map[int32]string{
		0: "STATUS_UNKNOWN",
		1: "STATUS_COMPLETE",
		2: "STATUS_PARTIAL",
		3: "STATUS_SHUTDOWN",
		4: "STATUS_SYSPROPS",
	}
	ProcessStatsSectionProto_Status_value = map[string]int32{
		"STATUS_UNKNOWN":  0,
		"STATUS_COMPLETE": 1,
		"STATUS_PARTIAL":  2,
		"STATUS_SHUTDOWN": 3,
		"STATUS_SYSPROPS": 4,
	}
)

func (x ProcessStatsSectionProto_Status) Enum() *ProcessStatsSectionProto_Status {
	p := new(ProcessStatsSectionProto_Status)
	*p = x
	return p
}

func (x ProcessStatsSectionProto_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProcessStatsSectionProto_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_frameworks_base_core_proto_android_service_procstats_proto_enumTypes[0].Descriptor()
}

func (ProcessStatsSectionProto_Status) Type() protoreflect.EnumType {
	return &file_frameworks_base_core_proto_android_service_procstats_proto_enumTypes[0]
}

func (x ProcessStatsSectionProto_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ProcessStatsSectionProto_Status) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ProcessStatsSectionProto_Status(num)
	return nil
}

// Deprecated: Use ProcessStatsSectionProto_Status.Descriptor instead.
func (ProcessStatsSectionProto_Status) EnumDescriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_service_procstats_proto_rawDescGZIP(), []int{1, 0}
}

// *
// Data from ProcStatsService Dumpsys
//
// Next Tag: 4
type ProcessStatsServiceDumpProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcstatsNow        *ProcessStatsSectionProto `protobuf:"bytes,1,opt,name=procstats_now,json=procstatsNow" json:"procstats_now,omitempty"`
	ProcstatsOver_3Hrs  *ProcessStatsSectionProto `protobuf:"bytes,2,opt,name=procstats_over_3hrs,json=procstatsOver3hrs" json:"procstats_over_3hrs,omitempty"`
	ProcstatsOver_24Hrs *ProcessStatsSectionProto `protobuf:"bytes,3,opt,name=procstats_over_24hrs,json=procstatsOver24hrs" json:"procstats_over_24hrs,omitempty"`
}

func (x *ProcessStatsServiceDumpProto) Reset() {
	*x = ProcessStatsServiceDumpProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_service_procstats_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessStatsServiceDumpProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessStatsServiceDumpProto) ProtoMessage() {}

func (x *ProcessStatsServiceDumpProto) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_service_procstats_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessStatsServiceDumpProto.ProtoReflect.Descriptor instead.
func (*ProcessStatsServiceDumpProto) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_service_procstats_proto_rawDescGZIP(), []int{0}
}

func (x *ProcessStatsServiceDumpProto) GetProcstatsNow() *ProcessStatsSectionProto {
	if x != nil {
		return x.ProcstatsNow
	}
	return nil
}

func (x *ProcessStatsServiceDumpProto) GetProcstatsOver_3Hrs() *ProcessStatsSectionProto {
	if x != nil {
		return x.ProcstatsOver_3Hrs
	}
	return nil
}

func (x *ProcessStatsServiceDumpProto) GetProcstatsOver_24Hrs() *ProcessStatsSectionProto {
	if x != nil {
		return x.ProcstatsOver_24Hrs
	}
	return nil
}

// *
// Data model from /frameworks/base/core/java/com/android/internal/app/procstats/ProcessStats.java
// This proto is defined based on the writeToParcel method.
//
// Next Tag: 11
type ProcessStatsSectionProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Elapsed realtime at start of report.
	StartRealtimeMs *int64 `protobuf:"varint,1,opt,name=start_realtime_ms,json=startRealtimeMs" json:"start_realtime_ms,omitempty"`
	// Elapsed realtime at end of report.
	EndRealtimeMs *int64 `protobuf:"varint,2,opt,name=end_realtime_ms,json=endRealtimeMs" json:"end_realtime_ms,omitempty"`
	// CPU uptime at start of report.
	StartUptimeMs *int64 `protobuf:"varint,3,opt,name=start_uptime_ms,json=startUptimeMs" json:"start_uptime_ms,omitempty"`
	// CPU uptime at end of report.
	EndUptimeMs *int64 `protobuf:"varint,4,opt,name=end_uptime_ms,json=endUptimeMs" json:"end_uptime_ms,omitempty"`
	// System runtime library. e.g. "libdvm.so", "libart.so".
	Runtime *string `protobuf:"bytes,5,opt,name=runtime" json:"runtime,omitempty"`
	// whether kernel reports swapped pss.
	HasSwappedPss *bool                             `protobuf:"varint,6,opt,name=has_swapped_pss,json=hasSwappedPss" json:"has_swapped_pss,omitempty"`
	Status        []ProcessStatsSectionProto_Status `protobuf:"varint,7,rep,name=status,enum=android.service.procstats.ProcessStatsSectionProto_Status" json:"status,omitempty"`
	// Number of pages available of various types and sizes, representation fragmentation.
	AvailablePages []*ProcessStatsAvailablePagesProto `protobuf:"bytes,10,rep,name=available_pages,json=availablePages" json:"available_pages,omitempty"`
	// Stats for each process.
	ProcessStats []*ProcessStatsProto `protobuf:"bytes,8,rep,name=process_stats,json=processStats" json:"process_stats,omitempty"`
	// Stats for each package.
	PackageStats []*ProcessStatsPackageProto `protobuf:"bytes,9,rep,name=package_stats,json=packageStats" json:"package_stats,omitempty"`
}

func (x *ProcessStatsSectionProto) Reset() {
	*x = ProcessStatsSectionProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_service_procstats_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessStatsSectionProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessStatsSectionProto) ProtoMessage() {}

func (x *ProcessStatsSectionProto) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_service_procstats_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessStatsSectionProto.ProtoReflect.Descriptor instead.
func (*ProcessStatsSectionProto) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_service_procstats_proto_rawDescGZIP(), []int{1}
}

func (x *ProcessStatsSectionProto) GetStartRealtimeMs() int64 {
	if x != nil && x.StartRealtimeMs != nil {
		return *x.StartRealtimeMs
	}
	return 0
}

func (x *ProcessStatsSectionProto) GetEndRealtimeMs() int64 {
	if x != nil && x.EndRealtimeMs != nil {
		return *x.EndRealtimeMs
	}
	return 0
}

func (x *ProcessStatsSectionProto) GetStartUptimeMs() int64 {
	if x != nil && x.StartUptimeMs != nil {
		return *x.StartUptimeMs
	}
	return 0
}

func (x *ProcessStatsSectionProto) GetEndUptimeMs() int64 {
	if x != nil && x.EndUptimeMs != nil {
		return *x.EndUptimeMs
	}
	return 0
}

func (x *ProcessStatsSectionProto) GetRuntime() string {
	if x != nil && x.Runtime != nil {
		return *x.Runtime
	}
	return ""
}

func (x *ProcessStatsSectionProto) GetHasSwappedPss() bool {
	if x != nil && x.HasSwappedPss != nil {
		return *x.HasSwappedPss
	}
	return false
}

func (x *ProcessStatsSectionProto) GetStatus() []ProcessStatsSectionProto_Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ProcessStatsSectionProto) GetAvailablePages() []*ProcessStatsAvailablePagesProto {
	if x != nil {
		return x.AvailablePages
	}
	return nil
}

func (x *ProcessStatsSectionProto) GetProcessStats() []*ProcessStatsProto {
	if x != nil {
		return x.ProcessStats
	}
	return nil
}

func (x *ProcessStatsSectionProto) GetPackageStats() []*ProcessStatsPackageProto {
	if x != nil {
		return x.PackageStats
	}
	return nil
}

// Next Tag: 5
type ProcessStatsAvailablePagesProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Node these pages are in (as per /proc/pagetypeinfo)
	Node *int32 `protobuf:"varint,1,opt,name=node" json:"node,omitempty"`
	// Zone these pages are in (as per /proc/pagetypeinfo)
	Zone *string `protobuf:"bytes,2,opt,name=zone" json:"zone,omitempty"`
	// Label for the type of these pages (as per /proc/pagetypeinfo)
	Label *string `protobuf:"bytes,3,opt,name=label" json:"label,omitempty"`
	// Distribution of number of pages available by order size.  First entry in array is
	// order 0, second is order 1, etc.  Each order increase is a doubling of page size.
	PagesPerOrder []int32 `protobuf:"varint,4,rep,name=pages_per_order,json=pagesPerOrder" json:"pages_per_order,omitempty"`
}

func (x *ProcessStatsAvailablePagesProto) Reset() {
	*x = ProcessStatsAvailablePagesProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_service_procstats_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessStatsAvailablePagesProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessStatsAvailablePagesProto) ProtoMessage() {}

func (x *ProcessStatsAvailablePagesProto) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_service_procstats_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessStatsAvailablePagesProto.ProtoReflect.Descriptor instead.
func (*ProcessStatsAvailablePagesProto) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_service_procstats_proto_rawDescGZIP(), []int{2}
}

func (x *ProcessStatsAvailablePagesProto) GetNode() int32 {
	if x != nil && x.Node != nil {
		return *x.Node
	}
	return 0
}

func (x *ProcessStatsAvailablePagesProto) GetZone() string {
	if x != nil && x.Zone != nil {
		return *x.Zone
	}
	return ""
}

func (x *ProcessStatsAvailablePagesProto) GetLabel() string {
	if x != nil && x.Label != nil {
		return *x.Label
	}
	return ""
}

func (x *ProcessStatsAvailablePagesProto) GetPagesPerOrder() []int32 {
	if x != nil {
		return x.PagesPerOrder
	}
	return nil
}

// Next Tag: 13
type ProcessStatsStateProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScreenState *service.ScreenState `protobuf:"varint,1,opt,name=screen_state,json=screenState,enum=android.service.procstats.ScreenState" json:"screen_state,omitempty"`
	MemoryState *service.MemoryState `protobuf:"varint,2,opt,name=memory_state,json=memoryState,enum=android.service.procstats.MemoryState" json:"memory_state,omitempty"`
	// this enum list is from frameworks/base/core/java/com/android/internal/app/procstats/ProcessStats.java
	// and not frameworks/base/core/java/android/app/ActivityManager.java
	//
	// Deprecated: Marked as deprecated in frameworks/base/core/proto/android/service/procstats.proto.
	ProcessState *service.ProcessState `protobuf:"varint,3,opt,name=process_state,json=processState,enum=android.service.procstats.ProcessState" json:"process_state,omitempty"`
	// the AggregatedProcessState needs to keep sync with ProcessStateAggregated
	ProcessStateAggregated *service.AggregatedProcessState `protobuf:"varint,10,opt,name=process_state_aggregated,json=processStateAggregated,enum=android.service.procstats.AggregatedProcessState" json:"process_state_aggregated,omitempty"`
	// Millisecond uptime duration spent in this state
	//
	// Deprecated: Marked as deprecated in frameworks/base/core/proto/android/service/procstats.proto.
	DurationMs *int64 `protobuf:"varint,4,opt,name=duration_ms,json=durationMs" json:"duration_ms,omitempty"`
	// Same as above, but with minute resolution so it fits into an int32.
	DurationMinutes *int32 `protobuf:"varint,11,opt,name=duration_minutes,json=durationMinutes" json:"duration_minutes,omitempty"`
	// Millisecond elapsed realtime duration spent in this state
	//
	// Deprecated: Marked as deprecated in frameworks/base/core/proto/android/service/procstats.proto.
	RealtimeDurationMs *int64 `protobuf:"varint,9,opt,name=realtime_duration_ms,json=realtimeDurationMs" json:"realtime_duration_ms,omitempty"`
	// Same as above, but with minute resolution so it fits into an int32.
	RealtimeDurationMinutes *int32 `protobuf:"varint,12,opt,name=realtime_duration_minutes,json=realtimeDurationMinutes" json:"realtime_duration_minutes,omitempty"`
	// # of samples taken
	SampleSize *int32 `protobuf:"varint,5,opt,name=sample_size,json=sampleSize" json:"sample_size,omitempty"`
	// PSS is memory reserved for this process
	Pss *util.AggStats `protobuf:"bytes,6,opt,name=pss" json:"pss,omitempty"`
	// USS is memory shared between processes, divided evenly for accounting
	Uss *util.AggStats `protobuf:"bytes,7,opt,name=uss" json:"uss,omitempty"`
	// RSS is memory resident for this process
	Rss *util.AggStats `protobuf:"bytes,8,opt,name=rss" json:"rss,omitempty"`
}

func (x *ProcessStatsStateProto) Reset() {
	*x = ProcessStatsStateProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_service_procstats_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessStatsStateProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessStatsStateProto) ProtoMessage() {}

func (x *ProcessStatsStateProto) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_service_procstats_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessStatsStateProto.ProtoReflect.Descriptor instead.
func (*ProcessStatsStateProto) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_service_procstats_proto_rawDescGZIP(), []int{3}
}

func (x *ProcessStatsStateProto) GetScreenState() service.ScreenState {
	if x != nil && x.ScreenState != nil {
		return *x.ScreenState
	}
	return service.ScreenState(0)
}

func (x *ProcessStatsStateProto) GetMemoryState() service.MemoryState {
	if x != nil && x.MemoryState != nil {
		return *x.MemoryState
	}
	return service.MemoryState(0)
}

// Deprecated: Marked as deprecated in frameworks/base/core/proto/android/service/procstats.proto.
func (x *ProcessStatsStateProto) GetProcessState() service.ProcessState {
	if x != nil && x.ProcessState != nil {
		return *x.ProcessState
	}
	return service.ProcessState(0)
}

func (x *ProcessStatsStateProto) GetProcessStateAggregated() service.AggregatedProcessState {
	if x != nil && x.ProcessStateAggregated != nil {
		return *x.ProcessStateAggregated
	}
	return service.AggregatedProcessState(0)
}

// Deprecated: Marked as deprecated in frameworks/base/core/proto/android/service/procstats.proto.
func (x *ProcessStatsStateProto) GetDurationMs() int64 {
	if x != nil && x.DurationMs != nil {
		return *x.DurationMs
	}
	return 0
}

func (x *ProcessStatsStateProto) GetDurationMinutes() int32 {
	if x != nil && x.DurationMinutes != nil {
		return *x.DurationMinutes
	}
	return 0
}

// Deprecated: Marked as deprecated in frameworks/base/core/proto/android/service/procstats.proto.
func (x *ProcessStatsStateProto) GetRealtimeDurationMs() int64 {
	if x != nil && x.RealtimeDurationMs != nil {
		return *x.RealtimeDurationMs
	}
	return 0
}

func (x *ProcessStatsStateProto) GetRealtimeDurationMinutes() int32 {
	if x != nil && x.RealtimeDurationMinutes != nil {
		return *x.RealtimeDurationMinutes
	}
	return 0
}

func (x *ProcessStatsStateProto) GetSampleSize() int32 {
	if x != nil && x.SampleSize != nil {
		return *x.SampleSize
	}
	return 0
}

func (x *ProcessStatsStateProto) GetPss() *util.AggStats {
	if x != nil {
		return x.Pss
	}
	return nil
}

func (x *ProcessStatsStateProto) GetUss() *util.AggStats {
	if x != nil {
		return x.Uss
	}
	return nil
}

func (x *ProcessStatsStateProto) GetRss() *util.AggStats {
	if x != nil {
		return x.Rss
	}
	return nil
}

// Next Tag: 8
type ProcessStatsProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of process.
	Process *string `protobuf:"bytes,1,opt,name=process" json:"process,omitempty"`
	// Uid of the process.
	Uid  *int32                  `protobuf:"varint,2,opt,name=uid" json:"uid,omitempty"`
	Kill *ProcessStatsProto_Kill `protobuf:"bytes,3,opt,name=kill" json:"kill,omitempty"`
	// Time and memory spent in various states.
	States []*ProcessStatsStateProto `protobuf:"bytes,5,rep,name=states" json:"states,omitempty"`
	// Total time process has been running...  screen_state, memory_state, and process_state
	// will not be set.
	TotalRunningState *ProcessStatsStateProto `protobuf:"bytes,6,opt,name=total_running_state,json=totalRunningState" json:"total_running_state,omitempty"`
	// Association data for this process in this state;
	// each entry here is one association.
	Assocs []*ProcessStatsAssociationProto `protobuf:"bytes,7,rep,name=assocs" json:"assocs,omitempty"`
}

func (x *ProcessStatsProto) Reset() {
	*x = ProcessStatsProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_service_procstats_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessStatsProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessStatsProto) ProtoMessage() {}

func (x *ProcessStatsProto) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_service_procstats_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessStatsProto.ProtoReflect.Descriptor instead.
func (*ProcessStatsProto) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_service_procstats_proto_rawDescGZIP(), []int{4}
}

func (x *ProcessStatsProto) GetProcess() string {
	if x != nil && x.Process != nil {
		return *x.Process
	}
	return ""
}

func (x *ProcessStatsProto) GetUid() int32 {
	if x != nil && x.Uid != nil {
		return *x.Uid
	}
	return 0
}

func (x *ProcessStatsProto) GetKill() *ProcessStatsProto_Kill {
	if x != nil {
		return x.Kill
	}
	return nil
}

func (x *ProcessStatsProto) GetStates() []*ProcessStatsStateProto {
	if x != nil {
		return x.States
	}
	return nil
}

func (x *ProcessStatsProto) GetTotalRunningState() *ProcessStatsStateProto {
	if x != nil {
		return x.TotalRunningState
	}
	return nil
}

func (x *ProcessStatsProto) GetAssocs() []*ProcessStatsAssociationProto {
	if x != nil {
		return x.Assocs
	}
	return nil
}

// Next Tag: 6
type ProcessStatsAssociationProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Procss Name of the associated process/package
	AssocProcessName *string `protobuf:"bytes,1,opt,name=assoc_process_name,json=assocProcessName" json:"assoc_process_name,omitempty"`
	// Package Name of the associated process/package
	//
	// Deprecated: Marked as deprecated in frameworks/base/core/proto/android/service/procstats.proto.
	AssocPackageName *string `protobuf:"bytes,2,opt,name=assoc_package_name,json=assocPackageName" json:"assoc_package_name,omitempty"`
	// UID of the associated process/package
	AssocUid *int32 `protobuf:"varint,5,opt,name=assoc_uid,json=assocUid" json:"assoc_uid,omitempty"`
	// Total count of the times this association appeared.
	TotalCount *int32 `protobuf:"varint,3,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	// Uptime total duration in seconds this association was around.
	TotalDurationSecs *int32 `protobuf:"varint,4,opt,name=total_duration_secs,json=totalDurationSecs" json:"total_duration_secs,omitempty"`
}

func (x *ProcessStatsAssociationProto) Reset() {
	*x = ProcessStatsAssociationProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_service_procstats_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessStatsAssociationProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessStatsAssociationProto) ProtoMessage() {}

func (x *ProcessStatsAssociationProto) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_service_procstats_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessStatsAssociationProto.ProtoReflect.Descriptor instead.
func (*ProcessStatsAssociationProto) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_service_procstats_proto_rawDescGZIP(), []int{5}
}

func (x *ProcessStatsAssociationProto) GetAssocProcessName() string {
	if x != nil && x.AssocProcessName != nil {
		return *x.AssocProcessName
	}
	return ""
}

// Deprecated: Marked as deprecated in frameworks/base/core/proto/android/service/procstats.proto.
func (x *ProcessStatsAssociationProto) GetAssocPackageName() string {
	if x != nil && x.AssocPackageName != nil {
		return *x.AssocPackageName
	}
	return ""
}

func (x *ProcessStatsAssociationProto) GetAssocUid() int32 {
	if x != nil && x.AssocUid != nil {
		return *x.AssocUid
	}
	return 0
}

func (x *ProcessStatsAssociationProto) GetTotalCount() int32 {
	if x != nil && x.TotalCount != nil {
		return *x.TotalCount
	}
	return 0
}

func (x *ProcessStatsAssociationProto) GetTotalDurationSecs() int32 {
	if x != nil && x.TotalDurationSecs != nil {
		return *x.TotalDurationSecs
	}
	return 0
}

// Next Tag: 4
type PackageServiceOperationStatsProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Operate enum: Started, Foreground, Bound, Executing
	Operation *service.ServiceOperationState `protobuf:"varint,1,opt,name=operation,enum=android.service.procstats.ServiceOperationState" json:"operation,omitempty"`
	// Number of times the service was in this operation.
	Count      *int32                                          `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	StateStats []*PackageServiceOperationStatsProto_StateStats `protobuf:"bytes,3,rep,name=state_stats,json=stateStats" json:"state_stats,omitempty"`
}

func (x *PackageServiceOperationStatsProto) Reset() {
	*x = PackageServiceOperationStatsProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_service_procstats_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackageServiceOperationStatsProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageServiceOperationStatsProto) ProtoMessage() {}

func (x *PackageServiceOperationStatsProto) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_service_procstats_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageServiceOperationStatsProto.ProtoReflect.Descriptor instead.
func (*PackageServiceOperationStatsProto) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_service_procstats_proto_rawDescGZIP(), []int{6}
}

func (x *PackageServiceOperationStatsProto) GetOperation() service.ServiceOperationState {
	if x != nil && x.Operation != nil {
		return *x.Operation
	}
	return service.ServiceOperationState(0)
}

func (x *PackageServiceOperationStatsProto) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *PackageServiceOperationStatsProto) GetStateStats() []*PackageServiceOperationStatsProto_StateStats {
	if x != nil {
		return x.StateStats
	}
	return nil
}

// Next Tag: 3
type PackageServiceStatsProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of service component.
	ServiceName *string `protobuf:"bytes,1,opt,name=service_name,json=serviceName" json:"service_name,omitempty"`
	// The operation stats.
	// The package_name, package_uid, package_version, service_name will not be set to save space.
	OperationStats []*PackageServiceOperationStatsProto `protobuf:"bytes,2,rep,name=operation_stats,json=operationStats" json:"operation_stats,omitempty"`
}

func (x *PackageServiceStatsProto) Reset() {
	*x = PackageServiceStatsProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_service_procstats_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackageServiceStatsProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageServiceStatsProto) ProtoMessage() {}

func (x *PackageServiceStatsProto) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_service_procstats_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageServiceStatsProto.ProtoReflect.Descriptor instead.
func (*PackageServiceStatsProto) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_service_procstats_proto_rawDescGZIP(), []int{7}
}

func (x *PackageServiceStatsProto) GetServiceName() string {
	if x != nil && x.ServiceName != nil {
		return *x.ServiceName
	}
	return ""
}

func (x *PackageServiceStatsProto) GetOperationStats() []*PackageServiceOperationStatsProto {
	if x != nil {
		return x.OperationStats
	}
	return nil
}

// Next Tag: 8
type PackageAssociationSourceProcessStatsProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Uid of the process.
	ProcessUid *int32 `protobuf:"varint,1,opt,name=process_uid,json=processUid" json:"process_uid,omitempty"`
	// Process name.
	ProcessName *string `protobuf:"bytes,2,opt,name=process_name,json=processName" json:"process_name,omitempty"`
	// Package name.
	PackageName *string `protobuf:"bytes,7,opt,name=package_name,json=packageName" json:"package_name,omitempty"`
	// Total count of the times this association appeared.
	TotalCount *int32 `protobuf:"varint,3,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	// Millisecond uptime total duration this association was around.
	TotalDurationMs *int64 `protobuf:"varint,4,opt,name=total_duration_ms,json=totalDurationMs" json:"total_duration_ms,omitempty"`
	// Total count of the times this association became actively impacting its target process.
	ActiveCount      *int32                                                  `protobuf:"varint,5,opt,name=active_count,json=activeCount" json:"active_count,omitempty"`
	ActiveStateStats []*PackageAssociationSourceProcessStatsProto_StateStats `protobuf:"bytes,6,rep,name=active_state_stats,json=activeStateStats" json:"active_state_stats,omitempty"`
}

func (x *PackageAssociationSourceProcessStatsProto) Reset() {
	*x = PackageAssociationSourceProcessStatsProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_service_procstats_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackageAssociationSourceProcessStatsProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageAssociationSourceProcessStatsProto) ProtoMessage() {}

func (x *PackageAssociationSourceProcessStatsProto) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_service_procstats_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageAssociationSourceProcessStatsProto.ProtoReflect.Descriptor instead.
func (*PackageAssociationSourceProcessStatsProto) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_service_procstats_proto_rawDescGZIP(), []int{8}
}

func (x *PackageAssociationSourceProcessStatsProto) GetProcessUid() int32 {
	if x != nil && x.ProcessUid != nil {
		return *x.ProcessUid
	}
	return 0
}

func (x *PackageAssociationSourceProcessStatsProto) GetProcessName() string {
	if x != nil && x.ProcessName != nil {
		return *x.ProcessName
	}
	return ""
}

func (x *PackageAssociationSourceProcessStatsProto) GetPackageName() string {
	if x != nil && x.PackageName != nil {
		return *x.PackageName
	}
	return ""
}

func (x *PackageAssociationSourceProcessStatsProto) GetTotalCount() int32 {
	if x != nil && x.TotalCount != nil {
		return *x.TotalCount
	}
	return 0
}

func (x *PackageAssociationSourceProcessStatsProto) GetTotalDurationMs() int64 {
	if x != nil && x.TotalDurationMs != nil {
		return *x.TotalDurationMs
	}
	return 0
}

func (x *PackageAssociationSourceProcessStatsProto) GetActiveCount() int32 {
	if x != nil && x.ActiveCount != nil {
		return *x.ActiveCount
	}
	return 0
}

func (x *PackageAssociationSourceProcessStatsProto) GetActiveStateStats() []*PackageAssociationSourceProcessStatsProto_StateStats {
	if x != nil {
		return x.ActiveStateStats
	}
	return nil
}

// Next Tag: 7
type PackageAssociationProcessStatsProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the target component.
	ComponentName *string `protobuf:"bytes,1,opt,name=component_name,json=componentName" json:"component_name,omitempty"`
	// Total count of the times this association appeared.
	TotalCount *int32 `protobuf:"varint,3,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	// Millisecond uptime total duration this association was around.
	TotalDurationMs *int64 `protobuf:"varint,4,opt,name=total_duration_ms,json=totalDurationMs" json:"total_duration_ms,omitempty"`
	// Total count of the times this association became actively impacting its target process.
	ActiveCount *int32 `protobuf:"varint,5,opt,name=active_count,json=activeCount" json:"active_count,omitempty"`
	// Millisecond uptime total duration this association was around.
	ActiveDurationMs *int64 `protobuf:"varint,6,opt,name=active_duration_ms,json=activeDurationMs" json:"active_duration_ms,omitempty"`
	// Information on one source in this association.
	Sources []*PackageAssociationSourceProcessStatsProto `protobuf:"bytes,2,rep,name=sources" json:"sources,omitempty"`
}

func (x *PackageAssociationProcessStatsProto) Reset() {
	*x = PackageAssociationProcessStatsProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_service_procstats_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackageAssociationProcessStatsProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageAssociationProcessStatsProto) ProtoMessage() {}

func (x *PackageAssociationProcessStatsProto) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_service_procstats_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageAssociationProcessStatsProto.ProtoReflect.Descriptor instead.
func (*PackageAssociationProcessStatsProto) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_service_procstats_proto_rawDescGZIP(), []int{9}
}

func (x *PackageAssociationProcessStatsProto) GetComponentName() string {
	if x != nil && x.ComponentName != nil {
		return *x.ComponentName
	}
	return ""
}

func (x *PackageAssociationProcessStatsProto) GetTotalCount() int32 {
	if x != nil && x.TotalCount != nil {
		return *x.TotalCount
	}
	return 0
}

func (x *PackageAssociationProcessStatsProto) GetTotalDurationMs() int64 {
	if x != nil && x.TotalDurationMs != nil {
		return *x.TotalDurationMs
	}
	return 0
}

func (x *PackageAssociationProcessStatsProto) GetActiveCount() int32 {
	if x != nil && x.ActiveCount != nil {
		return *x.ActiveCount
	}
	return 0
}

func (x *PackageAssociationProcessStatsProto) GetActiveDurationMs() int64 {
	if x != nil && x.ActiveDurationMs != nil {
		return *x.ActiveDurationMs
	}
	return 0
}

func (x *PackageAssociationProcessStatsProto) GetSources() []*PackageAssociationSourceProcessStatsProto {
	if x != nil {
		return x.Sources
	}
	return nil
}

// Next Tag: 7
type ProcessStatsPackageProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of package.
	Package *string `protobuf:"bytes,1,opt,name=package" json:"package,omitempty"`
	// Uid of the package.
	Uid *int32 `protobuf:"varint,2,opt,name=uid" json:"uid,omitempty"`
	// Version of the package.
	Version *int64 `protobuf:"varint,3,opt,name=version" json:"version,omitempty"`
	// Stats for each process running with the package loaded in to it.
	ProcessStats []*ProcessStatsProto `protobuf:"bytes,4,rep,name=process_stats,json=processStats" json:"process_stats,omitempty"`
	// Stats for each of the package's services.
	ServiceStats []*PackageServiceStatsProto `protobuf:"bytes,5,rep,name=service_stats,json=serviceStats" json:"service_stats,omitempty"`
	// Stats for each association with the package.
	AssociationStats []*PackageAssociationProcessStatsProto `protobuf:"bytes,6,rep,name=association_stats,json=associationStats" json:"association_stats,omitempty"`
}

func (x *ProcessStatsPackageProto) Reset() {
	*x = ProcessStatsPackageProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_service_procstats_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessStatsPackageProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessStatsPackageProto) ProtoMessage() {}

func (x *ProcessStatsPackageProto) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_service_procstats_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessStatsPackageProto.ProtoReflect.Descriptor instead.
func (*ProcessStatsPackageProto) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_service_procstats_proto_rawDescGZIP(), []int{10}
}

func (x *ProcessStatsPackageProto) GetPackage() string {
	if x != nil && x.Package != nil {
		return *x.Package
	}
	return ""
}

func (x *ProcessStatsPackageProto) GetUid() int32 {
	if x != nil && x.Uid != nil {
		return *x.Uid
	}
	return 0
}

func (x *ProcessStatsPackageProto) GetVersion() int64 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *ProcessStatsPackageProto) GetProcessStats() []*ProcessStatsProto {
	if x != nil {
		return x.ProcessStats
	}
	return nil
}

func (x *ProcessStatsPackageProto) GetServiceStats() []*PackageServiceStatsProto {
	if x != nil {
		return x.ServiceStats
	}
	return nil
}

func (x *ProcessStatsPackageProto) GetAssociationStats() []*PackageAssociationProcessStatsProto {
	if x != nil {
		return x.AssociationStats
	}
	return nil
}

// Information about how often kills occurred
type ProcessStatsProto_Kill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Count of excessive CPU kills
	Cpu *int32 `protobuf:"varint,1,opt,name=cpu" json:"cpu,omitempty"`
	// Count of kills when cached
	Cached *int32 `protobuf:"varint,2,opt,name=cached" json:"cached,omitempty"`
	// PSS stats during cached kill
	CachedPss *util.AggStats `protobuf:"bytes,3,opt,name=cached_pss,json=cachedPss" json:"cached_pss,omitempty"`
}

func (x *ProcessStatsProto_Kill) Reset() {
	*x = ProcessStatsProto_Kill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_service_procstats_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessStatsProto_Kill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessStatsProto_Kill) ProtoMessage() {}

func (x *ProcessStatsProto_Kill) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_service_procstats_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessStatsProto_Kill.ProtoReflect.Descriptor instead.
func (*ProcessStatsProto_Kill) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_service_procstats_proto_rawDescGZIP(), []int{4, 0}
}

func (x *ProcessStatsProto_Kill) GetCpu() int32 {
	if x != nil && x.Cpu != nil {
		return *x.Cpu
	}
	return 0
}

func (x *ProcessStatsProto_Kill) GetCached() int32 {
	if x != nil && x.Cached != nil {
		return *x.Cached
	}
	return 0
}

func (x *ProcessStatsProto_Kill) GetCachedPss() *util.AggStats {
	if x != nil {
		return x.CachedPss
	}
	return nil
}

// Information about a state the service can be in.
type PackageServiceOperationStatsProto_StateStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Screen state enum.
	ScreenState *service.ScreenState `protobuf:"varint,1,opt,name=screen_state,json=screenState,enum=android.service.procstats.ScreenState" json:"screen_state,omitempty"`
	// Memory state enum.
	MemoryState *service.MemoryState `protobuf:"varint,2,opt,name=memory_state,json=memoryState,enum=android.service.procstats.MemoryState" json:"memory_state,omitempty"`
	// duration in milliseconds.
	DurationMs *int64 `protobuf:"varint,3,opt,name=duration_ms,json=durationMs" json:"duration_ms,omitempty"`
	// Millisecond elapsed realtime duration spent in this state
	RealtimeDurationMs *int64 `protobuf:"varint,4,opt,name=realtime_duration_ms,json=realtimeDurationMs" json:"realtime_duration_ms,omitempty"`
}

func (x *PackageServiceOperationStatsProto_StateStats) Reset() {
	*x = PackageServiceOperationStatsProto_StateStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_service_procstats_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackageServiceOperationStatsProto_StateStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageServiceOperationStatsProto_StateStats) ProtoMessage() {}

func (x *PackageServiceOperationStatsProto_StateStats) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_service_procstats_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageServiceOperationStatsProto_StateStats.ProtoReflect.Descriptor instead.
func (*PackageServiceOperationStatsProto_StateStats) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_service_procstats_proto_rawDescGZIP(), []int{6, 0}
}

func (x *PackageServiceOperationStatsProto_StateStats) GetScreenState() service.ScreenState {
	if x != nil && x.ScreenState != nil {
		return *x.ScreenState
	}
	return service.ScreenState(0)
}

func (x *PackageServiceOperationStatsProto_StateStats) GetMemoryState() service.MemoryState {
	if x != nil && x.MemoryState != nil {
		return *x.MemoryState
	}
	return service.MemoryState(0)
}

func (x *PackageServiceOperationStatsProto_StateStats) GetDurationMs() int64 {
	if x != nil && x.DurationMs != nil {
		return *x.DurationMs
	}
	return 0
}

func (x *PackageServiceOperationStatsProto_StateStats) GetRealtimeDurationMs() int64 {
	if x != nil && x.RealtimeDurationMs != nil {
		return *x.RealtimeDurationMs
	}
	return 0
}

// Information on one source in this association.
type PackageAssociationSourceProcessStatsProto_StateStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Process state enum.
	ProcessState *service.ProcessState `protobuf:"varint,1,opt,name=process_state,json=processState,enum=android.service.procstats.ProcessState" json:"process_state,omitempty"`
	// Millisecond uptime duration spent in this state
	DurationMs *int64 `protobuf:"varint,2,opt,name=duration_ms,json=durationMs" json:"duration_ms,omitempty"`
	// Millisecond elapsed realtime duration spent in this state
	RealtimeDurationMs *int64 `protobuf:"varint,3,opt,name=realtime_duration_ms,json=realtimeDurationMs" json:"realtime_duration_ms,omitempty"`
}

func (x *PackageAssociationSourceProcessStatsProto_StateStats) Reset() {
	*x = PackageAssociationSourceProcessStatsProto_StateStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_service_procstats_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackageAssociationSourceProcessStatsProto_StateStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageAssociationSourceProcessStatsProto_StateStats) ProtoMessage() {}

func (x *PackageAssociationSourceProcessStatsProto_StateStats) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_service_procstats_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageAssociationSourceProcessStatsProto_StateStats.ProtoReflect.Descriptor instead.
func (*PackageAssociationSourceProcessStatsProto_StateStats) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_service_procstats_proto_rawDescGZIP(), []int{8, 0}
}

func (x *PackageAssociationSourceProcessStatsProto_StateStats) GetProcessState() service.ProcessState {
	if x != nil && x.ProcessState != nil {
		return *x.ProcessState
	}
	return service.ProcessState(0)
}

func (x *PackageAssociationSourceProcessStatsProto_StateStats) GetDurationMs() int64 {
	if x != nil && x.DurationMs != nil {
		return *x.DurationMs
	}
	return 0
}

func (x *PackageAssociationSourceProcessStatsProto_StateStats) GetRealtimeDurationMs() int64 {
	if x != nil && x.RealtimeDurationMs != nil {
		return *x.RealtimeDurationMs
	}
	return 0
}

var File_frameworks_base_core_proto_android_service_procstats_proto protoreflect.FileDescriptor

var file_frameworks_base_core_proto_android_service_procstats_proto_rawDesc = []byte{
	0x0a, 0x3a, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x2f, 0x62, 0x61, 0x73,
	0x65, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x63, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x61, 0x6e,
	0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x63, 0x73, 0x74, 0x61, 0x74, 0x73, 0x1a, 0x34, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2f, 0x75, 0x74, 0x69, 0x6c,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x30, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x41, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2f,
	0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x63, 0x73, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xcf, 0x02, 0x0a, 0x1c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x75, 0x6d, 0x70, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x58, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x63, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x5f, 0x6e, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x63, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x0c, 0x70, 0x72, 0x6f, 0x63, 0x73, 0x74, 0x61, 0x74, 0x73, 0x4e, 0x6f, 0x77, 0x12, 0x63, 0x0a,
	0x13, 0x70, 0x72, 0x6f, 0x63, 0x73, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x5f,
	0x33, 0x68, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x63, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x11, 0x70, 0x72, 0x6f, 0x63, 0x73, 0x74, 0x61, 0x74, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x33, 0x68,
	0x72, 0x73, 0x12, 0x65, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x63, 0x73, 0x74, 0x61, 0x74, 0x73, 0x5f,
	0x6f, 0x76, 0x65, 0x72, 0x5f, 0x32, 0x34, 0x68, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x33, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x63, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x4f, 0x76, 0x65, 0x72, 0x32, 0x34, 0x68, 0x72, 0x73, 0x3a, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03,
	0x03, 0x08, 0xc8, 0x01, 0x22, 0xde, 0x05, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x52, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x73, 0x12, 0x26, 0x0a,
	0x0f, 0x65, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6d, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x6c, 0x74,
	0x69, 0x6d, 0x65, 0x4d, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x75,
	0x70, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x55, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x73, 0x12, 0x22, 0x0a,
	0x0d, 0x65, 0x6e, 0x64, 0x5f, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6d, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x65, 0x6e, 0x64, 0x55, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x4d,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x68,
	0x61, 0x73, 0x5f, 0x73, 0x77, 0x61, 0x70, 0x70, 0x65, 0x64, 0x5f, 0x70, 0x73, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x68, 0x61, 0x73, 0x53, 0x77, 0x61, 0x70, 0x70, 0x65, 0x64,
	0x50, 0x73, 0x73, 0x12, 0x52, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0e, 0x32, 0x3a, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x53, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x63, 0x0a, 0x0f, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x3a, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x50, 0x61, 0x67, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0e, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x67, 0x65, 0x73, 0x12, 0x51, 0x0a, 0x0d,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12,
	0x58, 0x0a, 0x0d, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0c, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x22, 0x6f, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x41, 0x4c, 0x10, 0x02,
	0x12, 0x13, 0x0a, 0x0f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x48, 0x55, 0x54, 0x44,
	0x4f, 0x57, 0x4e, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x53, 0x59, 0x53, 0x50, 0x52, 0x4f, 0x50, 0x53, 0x10, 0x04, 0x3a, 0x09, 0x9a, 0x9f, 0xd5, 0x87,
	0x03, 0x03, 0x08, 0xc8, 0x01, 0x22, 0x92, 0x01, 0x0a, 0x1f, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50,
	0x61, 0x67, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x61, 0x67, 0x65, 0x73,
	0x5f, 0x70, 0x65, 0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x0d, 0x70, 0x61, 0x67, 0x65, 0x73, 0x50, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x3a,
	0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x22, 0xd9, 0x05, 0x0a, 0x16, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x49, 0x0a, 0x0c, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x61, 0x6e,
	0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x63, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x0b, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x49, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0b,
	0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x50, 0x0a, 0x0d, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x27, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x02, 0x18, 0x01, 0x52,
	0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x6b, 0x0a,
	0x18, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x61,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x31, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x41, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x16, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0b, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x02, 0x18, 0x01, 0x52, 0x0a, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x12,
	0x29, 0x0a, 0x10, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x6e, 0x75,
	0x74, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x14, 0x72, 0x65,
	0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6d, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x18, 0x01, 0x52, 0x12, 0x72, 0x65,
	0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x73,
	0x12, 0x3a, 0x0a, 0x19, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x17, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x28, 0x0a,
	0x03, 0x70, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x41, 0x67, 0x67, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x03, 0x70, 0x73, 0x73, 0x12, 0x28, 0x0a, 0x03, 0x75, 0x73, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x75,
	0x74, 0x69, 0x6c, 0x2e, 0x41, 0x67, 0x67, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x03, 0x75, 0x73,
	0x73, 0x12, 0x28, 0x0a, 0x03, 0x72, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x41, 0x67,
	0x67, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x03, 0x72, 0x73, 0x73, 0x3a, 0x09, 0x9a, 0x9f, 0xd5,
	0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x22, 0x84, 0x04, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x45, 0x0a, 0x04, 0x6b, 0x69, 0x6c, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4b, 0x69, 0x6c, 0x6c, 0x52, 0x04, 0x6b, 0x69, 0x6c, 0x6c, 0x12,
	0x49, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x31, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x12, 0x61, 0x0a, 0x13, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x73, 0x74,
	0x61, 0x74, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x11, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x4f, 0x0a,
	0x06, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x63, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x73, 0x1a, 0x72,
	0x0a, 0x04, 0x4b, 0x69, 0x6c, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x61, 0x63, 0x68, 0x65, 0x64,
	0x12, 0x35, 0x0a, 0x0a, 0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x70, 0x73, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x75,
	0x74, 0x69, 0x6c, 0x2e, 0x41, 0x67, 0x67, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x09, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x64, 0x50, 0x73, 0x73, 0x3a, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08,
	0xc8, 0x01, 0x3a, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x22, 0xec, 0x01,
	0x0a, 0x1c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x41, 0x73,
	0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2c,
	0x0a, 0x12, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x73, 0x73, 0x6f,
	0x63, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x12,
	0x61, 0x73, 0x73, 0x6f, 0x63, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x10, 0x61, 0x73,
	0x73, 0x6f, 0x63, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x55, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x13,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x65, 0x63, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x73, 0x22, 0x81, 0x04, 0x0a,
	0x21, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x4e, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x73, 0x74, 0x61, 0x74,
	0x73, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x68, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x47, 0x2e,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x63, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x1a, 0x80, 0x02, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x12, 0x49, 0x0a, 0x0c, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x73, 0x74,
	0x61, 0x74, 0x73, 0x2e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x0b, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x49, 0x0a, 0x0c,
	0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x26, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x4d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x65, 0x61, 0x6c,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x3a, 0x09, 0x9a, 0x9f, 0xd5, 0x87,
	0x03, 0x03, 0x08, 0xc8, 0x01, 0x3a, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01,
	0x22, 0xaf, 0x01, 0x0a, 0x18, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x65, 0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x61, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x63,
	0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x3a, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08,
	0xc8, 0x01, 0x22, 0xc7, 0x04, 0x0a, 0x29, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x41, 0x73,
	0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x55, 0x69,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x7d, 0x0a, 0x12, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x1a, 0xb8, 0x01, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x4c, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x63, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x12, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x3a, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8,
	0x01, 0x3a, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x22, 0xd5, 0x02, 0x0a,
	0x23, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x12, 0x5e, 0x0a, 0x07, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x63, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x41, 0x73,
	0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x3a, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03,
	0x03, 0x08, 0xc8, 0x01, 0x22, 0x85, 0x03, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x51, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x63, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0c, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x58, 0x0a, 0x0d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x33, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x12, 0x6b, 0x0a, 0x11, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x3e, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x10, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x3a, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x42, 0x1c, 0x42, 0x18,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
}

var (
	file_frameworks_base_core_proto_android_service_procstats_proto_rawDescOnce sync.Once
	file_frameworks_base_core_proto_android_service_procstats_proto_rawDescData = file_frameworks_base_core_proto_android_service_procstats_proto_rawDesc
)

func file_frameworks_base_core_proto_android_service_procstats_proto_rawDescGZIP() []byte {
	file_frameworks_base_core_proto_android_service_procstats_proto_rawDescOnce.Do(func() {
		file_frameworks_base_core_proto_android_service_procstats_proto_rawDescData = protoimpl.X.CompressGZIP(file_frameworks_base_core_proto_android_service_procstats_proto_rawDescData)
	})
	return file_frameworks_base_core_proto_android_service_procstats_proto_rawDescData
}

var file_frameworks_base_core_proto_android_service_procstats_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_frameworks_base_core_proto_android_service_procstats_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_frameworks_base_core_proto_android_service_procstats_proto_goTypes = []any{
	(ProcessStatsSectionProto_Status)(0),                         // 0: android.service.procstats.ProcessStatsSectionProto.Status
	(*ProcessStatsServiceDumpProto)(nil),                         // 1: android.service.procstats.ProcessStatsServiceDumpProto
	(*ProcessStatsSectionProto)(nil),                             // 2: android.service.procstats.ProcessStatsSectionProto
	(*ProcessStatsAvailablePagesProto)(nil),                      // 3: android.service.procstats.ProcessStatsAvailablePagesProto
	(*ProcessStatsStateProto)(nil),                               // 4: android.service.procstats.ProcessStatsStateProto
	(*ProcessStatsProto)(nil),                                    // 5: android.service.procstats.ProcessStatsProto
	(*ProcessStatsAssociationProto)(nil),                         // 6: android.service.procstats.ProcessStatsAssociationProto
	(*PackageServiceOperationStatsProto)(nil),                    // 7: android.service.procstats.PackageServiceOperationStatsProto
	(*PackageServiceStatsProto)(nil),                             // 8: android.service.procstats.PackageServiceStatsProto
	(*PackageAssociationSourceProcessStatsProto)(nil),            // 9: android.service.procstats.PackageAssociationSourceProcessStatsProto
	(*PackageAssociationProcessStatsProto)(nil),                  // 10: android.service.procstats.PackageAssociationProcessStatsProto
	(*ProcessStatsPackageProto)(nil),                             // 11: android.service.procstats.ProcessStatsPackageProto
	(*ProcessStatsProto_Kill)(nil),                               // 12: android.service.procstats.ProcessStatsProto.Kill
	(*PackageServiceOperationStatsProto_StateStats)(nil),         // 13: android.service.procstats.PackageServiceOperationStatsProto.StateStats
	(*PackageAssociationSourceProcessStatsProto_StateStats)(nil), // 14: android.service.procstats.PackageAssociationSourceProcessStatsProto.StateStats
	(service.ScreenState)(0),                                     // 15: android.service.procstats.ScreenState
	(service.MemoryState)(0),                                     // 16: android.service.procstats.MemoryState
	(service.ProcessState)(0),                                    // 17: android.service.procstats.ProcessState
	(service.AggregatedProcessState)(0),                          // 18: android.service.procstats.AggregatedProcessState
	(*util.AggStats)(nil),                                        // 19: android.util.AggStats
	(service.ServiceOperationState)(0),                           // 20: android.service.procstats.ServiceOperationState
}
var file_frameworks_base_core_proto_android_service_procstats_proto_depIdxs = []int32{
	2,  // 0: android.service.procstats.ProcessStatsServiceDumpProto.procstats_now:type_name -> android.service.procstats.ProcessStatsSectionProto
	2,  // 1: android.service.procstats.ProcessStatsServiceDumpProto.procstats_over_3hrs:type_name -> android.service.procstats.ProcessStatsSectionProto
	2,  // 2: android.service.procstats.ProcessStatsServiceDumpProto.procstats_over_24hrs:type_name -> android.service.procstats.ProcessStatsSectionProto
	0,  // 3: android.service.procstats.ProcessStatsSectionProto.status:type_name -> android.service.procstats.ProcessStatsSectionProto.Status
	3,  // 4: android.service.procstats.ProcessStatsSectionProto.available_pages:type_name -> android.service.procstats.ProcessStatsAvailablePagesProto
	5,  // 5: android.service.procstats.ProcessStatsSectionProto.process_stats:type_name -> android.service.procstats.ProcessStatsProto
	11, // 6: android.service.procstats.ProcessStatsSectionProto.package_stats:type_name -> android.service.procstats.ProcessStatsPackageProto
	15, // 7: android.service.procstats.ProcessStatsStateProto.screen_state:type_name -> android.service.procstats.ScreenState
	16, // 8: android.service.procstats.ProcessStatsStateProto.memory_state:type_name -> android.service.procstats.MemoryState
	17, // 9: android.service.procstats.ProcessStatsStateProto.process_state:type_name -> android.service.procstats.ProcessState
	18, // 10: android.service.procstats.ProcessStatsStateProto.process_state_aggregated:type_name -> android.service.procstats.AggregatedProcessState
	19, // 11: android.service.procstats.ProcessStatsStateProto.pss:type_name -> android.util.AggStats
	19, // 12: android.service.procstats.ProcessStatsStateProto.uss:type_name -> android.util.AggStats
	19, // 13: android.service.procstats.ProcessStatsStateProto.rss:type_name -> android.util.AggStats
	12, // 14: android.service.procstats.ProcessStatsProto.kill:type_name -> android.service.procstats.ProcessStatsProto.Kill
	4,  // 15: android.service.procstats.ProcessStatsProto.states:type_name -> android.service.procstats.ProcessStatsStateProto
	4,  // 16: android.service.procstats.ProcessStatsProto.total_running_state:type_name -> android.service.procstats.ProcessStatsStateProto
	6,  // 17: android.service.procstats.ProcessStatsProto.assocs:type_name -> android.service.procstats.ProcessStatsAssociationProto
	20, // 18: android.service.procstats.PackageServiceOperationStatsProto.operation:type_name -> android.service.procstats.ServiceOperationState
	13, // 19: android.service.procstats.PackageServiceOperationStatsProto.state_stats:type_name -> android.service.procstats.PackageServiceOperationStatsProto.StateStats
	7,  // 20: android.service.procstats.PackageServiceStatsProto.operation_stats:type_name -> android.service.procstats.PackageServiceOperationStatsProto
	14, // 21: android.service.procstats.PackageAssociationSourceProcessStatsProto.active_state_stats:type_name -> android.service.procstats.PackageAssociationSourceProcessStatsProto.StateStats
	9,  // 22: android.service.procstats.PackageAssociationProcessStatsProto.sources:type_name -> android.service.procstats.PackageAssociationSourceProcessStatsProto
	5,  // 23: android.service.procstats.ProcessStatsPackageProto.process_stats:type_name -> android.service.procstats.ProcessStatsProto
	8,  // 24: android.service.procstats.ProcessStatsPackageProto.service_stats:type_name -> android.service.procstats.PackageServiceStatsProto
	10, // 25: android.service.procstats.ProcessStatsPackageProto.association_stats:type_name -> android.service.procstats.PackageAssociationProcessStatsProto
	19, // 26: android.service.procstats.ProcessStatsProto.Kill.cached_pss:type_name -> android.util.AggStats
	15, // 27: android.service.procstats.PackageServiceOperationStatsProto.StateStats.screen_state:type_name -> android.service.procstats.ScreenState
	16, // 28: android.service.procstats.PackageServiceOperationStatsProto.StateStats.memory_state:type_name -> android.service.procstats.MemoryState
	17, // 29: android.service.procstats.PackageAssociationSourceProcessStatsProto.StateStats.process_state:type_name -> android.service.procstats.ProcessState
	30, // [30:30] is the sub-list for method output_type
	30, // [30:30] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_frameworks_base_core_proto_android_service_procstats_proto_init() }
func file_frameworks_base_core_proto_android_service_procstats_proto_init() {
	if File_frameworks_base_core_proto_android_service_procstats_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_frameworks_base_core_proto_android_service_procstats_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ProcessStatsServiceDumpProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_service_procstats_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ProcessStatsSectionProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_service_procstats_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ProcessStatsAvailablePagesProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_service_procstats_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ProcessStatsStateProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_service_procstats_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ProcessStatsProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_service_procstats_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ProcessStatsAssociationProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_service_procstats_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*PackageServiceOperationStatsProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_service_procstats_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*PackageServiceStatsProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_service_procstats_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*PackageAssociationSourceProcessStatsProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_service_procstats_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*PackageAssociationProcessStatsProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_service_procstats_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*ProcessStatsPackageProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_service_procstats_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ProcessStatsProto_Kill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_service_procstats_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*PackageServiceOperationStatsProto_StateStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_service_procstats_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*PackageAssociationSourceProcessStatsProto_StateStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_frameworks_base_core_proto_android_service_procstats_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_frameworks_base_core_proto_android_service_procstats_proto_goTypes,
		DependencyIndexes: file_frameworks_base_core_proto_android_service_procstats_proto_depIdxs,
		EnumInfos:         file_frameworks_base_core_proto_android_service_procstats_proto_enumTypes,
		MessageInfos:      file_frameworks_base_core_proto_android_service_procstats_proto_msgTypes,
	}.Build()
	File_frameworks_base_core_proto_android_service_procstats_proto = out.File
	file_frameworks_base_core_proto_android_service_procstats_proto_rawDesc = nil
	file_frameworks_base_core_proto_android_service_procstats_proto_goTypes = nil
	file_frameworks_base_core_proto_android_service_procstats_proto_depIdxs = nil
}
