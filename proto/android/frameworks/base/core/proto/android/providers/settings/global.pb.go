//
// Copyright (C) 2017 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.25.4
// source: frameworks/base/core/proto/android/providers/settings/global.proto

package settings

import (
	_ "github.com/zopieux/dumpsys-exporter/proto/android/frameworks/base/core/proto/android"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Note: it's a conscious decision to add each setting as a separate field. This
// allows annotating each setting with its own privacy tag.
type GlobalSettingsProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HistoricalOperations []*SettingsOperationProto `protobuf:"bytes,1,rep,name=historical_operations,json=historicalOperations" json:"historical_operations,omitempty"`
	// These are key=value lists, separated by commas.
	ActivityManagerConstants               *SettingProto                     `protobuf:"bytes,2,opt,name=activity_manager_constants,json=activityManagerConstants" json:"activity_manager_constants,omitempty"`
	AdbEnabled                             *SettingProto                     `protobuf:"bytes,3,opt,name=adb_enabled,json=adbEnabled" json:"adb_enabled,omitempty"`
	AddUsersWhenLocked                     *SettingProto                     `protobuf:"bytes,4,opt,name=add_users_when_locked,json=addUsersWhenLocked" json:"add_users_when_locked,omitempty"`
	AirplaneMode                           *GlobalSettingsProto_AirplaneMode `protobuf:"bytes,5,opt,name=airplane_mode,json=airplaneMode" json:"airplane_mode,omitempty"`
	AllowUserSwitchingWhenSystemUserLocked *SettingProto                     `protobuf:"bytes,7,opt,name=allow_user_switching_when_system_user_locked,json=allowUserSwitchingWhenSystemUserLocked" json:"allow_user_switching_when_system_user_locked,omitempty"`
	// This is a key=value list, separated by commas.
	AlwaysOnDisplayConstants         *SettingProto                            `protobuf:"bytes,8,opt,name=always_on_display_constants,json=alwaysOnDisplayConstants" json:"always_on_display_constants,omitempty"`
	AlwaysFinishActivities           *SettingProto                            `protobuf:"bytes,9,opt,name=always_finish_activities,json=alwaysFinishActivities" json:"always_finish_activities,omitempty"`
	AnimatorDurationScale            *SettingProto                            `protobuf:"bytes,10,opt,name=animator_duration_scale,json=animatorDurationScale" json:"animator_duration_scale,omitempty"`
	Anomaly                          *GlobalSettingsProto_Anomaly             `protobuf:"bytes,11,opt,name=anomaly" json:"anomaly,omitempty"`
	ApnDb                            *GlobalSettingsProto_ApnDb               `protobuf:"bytes,12,opt,name=apn_db,json=apnDb" json:"apn_db,omitempty"`
	App                              *GlobalSettingsProto_App                 `protobuf:"bytes,13,opt,name=app" json:"app,omitempty"`
	AssistedGpsEnabled               *SettingProto                            `protobuf:"bytes,14,opt,name=assisted_gps_enabled,json=assistedGpsEnabled" json:"assisted_gps_enabled,omitempty"`
	AudioSafeVolumeState             *SettingProto                            `protobuf:"bytes,15,opt,name=audio_safe_volume_state,json=audioSafeVolumeState" json:"audio_safe_volume_state,omitempty"`
	AudioSafeCsdCurrentValue         *SettingProto                            `protobuf:"bytes,157,opt,name=audio_safe_csd_current_value,json=audioSafeCsdCurrentValue" json:"audio_safe_csd_current_value,omitempty"`
	AudioSafeCsdNextWarning          *SettingProto                            `protobuf:"bytes,158,opt,name=audio_safe_csd_next_warning,json=audioSafeCsdNextWarning" json:"audio_safe_csd_next_warning,omitempty"`
	AudioSafeCsdDoseRecords          *SettingProto                            `protobuf:"bytes,159,opt,name=audio_safe_csd_dose_records,json=audioSafeCsdDoseRecords" json:"audio_safe_csd_dose_records,omitempty"`
	Autofill                         *GlobalSettingsProto_Autofill            `protobuf:"bytes,140,opt,name=autofill" json:"autofill,omitempty"`
	Backup                           *GlobalSettingsProto_Backup              `protobuf:"bytes,146,opt,name=backup" json:"backup,omitempty"`
	Battery                          *GlobalSettingsProto_Battery             `protobuf:"bytes,19,opt,name=battery" json:"battery,omitempty"`
	BleScan                          *GlobalSettingsProto_BleScan             `protobuf:"bytes,20,opt,name=ble_scan,json=bleScan" json:"ble_scan,omitempty"`
	Bluetooth                        *GlobalSettingsProto_Bluetooth           `protobuf:"bytes,21,opt,name=bluetooth" json:"bluetooth,omitempty"`
	BootCount                        *SettingProto                            `protobuf:"bytes,22,opt,name=boot_count,json=bootCount" json:"boot_count,omitempty"`
	CachedAppsFreezerEnabled         *SettingProto                            `protobuf:"bytes,152,opt,name=cached_apps_freezer_enabled,json=cachedAppsFreezerEnabled" json:"cached_apps_freezer_enabled,omitempty"`
	CallAutoRetry                    *SettingProto                            `protobuf:"bytes,24,opt,name=call_auto_retry,json=callAutoRetry" json:"call_auto_retry,omitempty"`
	CaptivePortal                    *GlobalSettingsProto_CaptivePortal       `protobuf:"bytes,25,opt,name=captive_portal,json=captivePortal" json:"captive_portal,omitempty"`
	Carrier                          *GlobalSettingsProto_Carrier             `protobuf:"bytes,26,opt,name=carrier" json:"carrier,omitempty"`
	Cdma                             *GlobalSettingsProto_Cdma                `protobuf:"bytes,27,opt,name=cdma" json:"cdma,omitempty"`
	CellOn                           *SettingProto                            `protobuf:"bytes,28,opt,name=cell_on,json=cellOn" json:"cell_on,omitempty"`
	CertPin                          *GlobalSettingsProto_CertPin             `protobuf:"bytes,29,opt,name=cert_pin,json=certPin" json:"cert_pin,omitempty"`
	ChainedBatteryAttributionEnabled *SettingProto                            `protobuf:"bytes,30,opt,name=chained_battery_attribution_enabled,json=chainedBatteryAttributionEnabled" json:"chained_battery_attribution_enabled,omitempty"`
	CompatibilityMode                *SettingProto                            `protobuf:"bytes,31,opt,name=compatibility_mode,json=compatibilityMode" json:"compatibility_mode,omitempty"`
	Connectivity                     *GlobalSettingsProto_Connectivity        `protobuf:"bytes,32,opt,name=connectivity" json:"connectivity,omitempty"`
	ContactMetadataSyncEnabled       *SettingProto                            `protobuf:"bytes,33,opt,name=contact_metadata_sync_enabled,json=contactMetadataSyncEnabled" json:"contact_metadata_sync_enabled,omitempty"`
	ContactsDatabaseWalEnabled       *SettingProto                            `protobuf:"bytes,34,opt,name=contacts_database_wal_enabled,json=contactsDatabaseWalEnabled" json:"contacts_database_wal_enabled,omitempty"`
	Data                             *GlobalSettingsProto_Data                `protobuf:"bytes,35,opt,name=data" json:"data,omitempty"`
	Database                         *GlobalSettingsProto_Database            `protobuf:"bytes,36,opt,name=database" json:"database,omitempty"`
	DateTime                         *GlobalSettingsProto_DateTime            `protobuf:"bytes,16,opt,name=date_time,json=dateTime" json:"date_time,omitempty"`
	Debug                            *GlobalSettingsProto_Debug               `protobuf:"bytes,37,opt,name=debug" json:"debug,omitempty"`
	Default                          *GlobalSettingsProto_Default             `protobuf:"bytes,38,opt,name=default" json:"default,omitempty"`
	Development                      *GlobalSettingsProto_Development         `protobuf:"bytes,39,opt,name=development" json:"development,omitempty"`
	Device                           *GlobalSettingsProto_Device              `protobuf:"bytes,40,opt,name=device" json:"device,omitempty"`
	DiskFreeChangeReportingThreshold *SettingProto                            `protobuf:"bytes,41,opt,name=disk_free_change_reporting_threshold,json=diskFreeChangeReportingThreshold" json:"disk_free_change_reporting_threshold,omitempty"`
	Display                          *GlobalSettingsProto_Display             `protobuf:"bytes,42,opt,name=display" json:"display,omitempty"`
	DnsResolver                      *GlobalSettingsProto_DnsResolver         `protobuf:"bytes,43,opt,name=dns_resolver,json=dnsResolver" json:"dns_resolver,omitempty"`
	DockAudioMediaEnabled            *SettingProto                            `protobuf:"bytes,44,opt,name=dock_audio_media_enabled,json=dockAudioMediaEnabled" json:"dock_audio_media_enabled,omitempty"`
	Download                         *GlobalSettingsProto_Download            `protobuf:"bytes,45,opt,name=download" json:"download,omitempty"`
	Dropbox                          *GlobalSettingsProto_Dropbox             `protobuf:"bytes,46,opt,name=dropbox" json:"dropbox,omitempty"`
	DynamicPowerSavings              *GlobalSettingsProto_DynamicPowerSavings `protobuf:"bytes,143,opt,name=dynamic_power_savings,json=dynamicPowerSavings" json:"dynamic_power_savings,omitempty"`
	Emergency                        *GlobalSettingsProto_Emergency           `protobuf:"bytes,47,opt,name=emergency" json:"emergency,omitempty"`
	Enable                           *GlobalSettingsProto_Enable              `protobuf:"bytes,48,opt,name=enable" json:"enable,omitempty"`
	EncodedSurroundOutput            *SettingProto                            `protobuf:"bytes,49,opt,name=encoded_surround_output,json=encodedSurroundOutput" json:"encoded_surround_output,omitempty"`
	Enhanced_4GModeEnabled           *SettingProto                            `protobuf:"bytes,50,opt,name=enhanced_4g_mode_enabled,json=enhanced4gModeEnabled" json:"enhanced_4g_mode_enabled,omitempty"`
	ErrorLogcatLines                 []*SettingProto                          `protobuf:"bytes,51,rep,name=error_logcat_lines,json=errorLogcatLines" json:"error_logcat_lines,omitempty"`
	Euicc                            *GlobalSettingsProto_Euicc               `protobuf:"bytes,52,opt,name=euicc" json:"euicc,omitempty"`
	FancyImeAnimations               *SettingProto                            `protobuf:"bytes,53,opt,name=fancy_ime_animations,json=fancyImeAnimations" json:"fancy_ime_animations,omitempty"`
	ForceAllowOnExternal             *SettingProto                            `protobuf:"bytes,54,opt,name=force_allow_on_external,json=forceAllowOnExternal" json:"force_allow_on_external,omitempty"`
	// An integer to reduce the FPS by this factor. Only for experiments.
	FpsDivisor                   *SettingProto                                  `protobuf:"bytes,55,opt,name=fps_divisor,json=fpsDivisor" json:"fps_divisor,omitempty"`
	FstrimMandatoryInterval      *SettingProto                                  `protobuf:"bytes,56,opt,name=fstrim_mandatory_interval,json=fstrimMandatoryInterval" json:"fstrim_mandatory_interval,omitempty"`
	GlobalHttpProxy              *GlobalSettingsProto_GlobalHttpProxy           `protobuf:"bytes,57,opt,name=global_http_proxy,json=globalHttpProxy" json:"global_http_proxy,omitempty"`
	GprsRegisterCheckPeriodMs    *SettingProto                                  `protobuf:"bytes,58,opt,name=gprs_register_check_period_ms,json=gprsRegisterCheckPeriodMs" json:"gprs_register_check_period_ms,omitempty"`
	Gpu                          *GlobalSettingsProto_Gpu                       `protobuf:"bytes,59,opt,name=gpu" json:"gpu,omitempty"`
	Hdmi                         *GlobalSettingsProto_Hdmi                      `protobuf:"bytes,60,opt,name=hdmi" json:"hdmi,omitempty"`
	HeadsUpNotificationsEnabled  *SettingProto                                  `protobuf:"bytes,61,opt,name=heads_up_notifications_enabled,json=headsUpNotificationsEnabled" json:"heads_up_notifications_enabled,omitempty"`
	HiddenApiBlacklistExemptions *SettingProto                                  `protobuf:"bytes,62,opt,name=hidden_api_blacklist_exemptions,json=hiddenApiBlacklistExemptions" json:"hidden_api_blacklist_exemptions,omitempty"`
	InetCondition                *GlobalSettingsProto_InetCondition             `protobuf:"bytes,63,opt,name=inet_condition,json=inetCondition" json:"inet_condition,omitempty"`
	InstantApp                   *GlobalSettingsProto_InstantApp                `protobuf:"bytes,64,opt,name=instant_app,json=instantApp" json:"instant_app,omitempty"`
	IntentFirewall               *GlobalSettingsProto_IntentFirewall            `protobuf:"bytes,65,opt,name=intent_firewall,json=intentFirewall" json:"intent_firewall,omitempty"`
	KeepProfileInBackground      *SettingProto                                  `protobuf:"bytes,67,opt,name=keep_profile_in_background,json=keepProfileInBackground" json:"keep_profile_in_background,omitempty"`
	LangId                       *GlobalSettingsProto_LangId                    `protobuf:"bytes,68,opt,name=lang_id,json=langId" json:"lang_id,omitempty"`
	Location                     *GlobalSettingsProto_Location                  `protobuf:"bytes,69,opt,name=location" json:"location,omitempty"`
	LowPowerMode                 *GlobalSettingsProto_LowPowerMode              `protobuf:"bytes,70,opt,name=low_power_mode,json=lowPowerMode" json:"low_power_mode,omitempty"`
	LteServiceForced             *SettingProto                                  `protobuf:"bytes,71,opt,name=lte_service_forced,json=lteServiceForced" json:"lte_service_forced,omitempty"`
	MaxErrorBytes                []*SettingProto                                `protobuf:"bytes,151,rep,name=max_error_bytes,json=maxErrorBytes" json:"max_error_bytes,omitempty"`
	ManagedDeviceProvisioning    *GlobalSettingsProto_ManagedDeviceProvisioning `protobuf:"bytes,156,opt,name=managed_device_provisioning,json=managedDeviceProvisioning" json:"managed_device_provisioning,omitempty"`
	MdcInitialMaxRetry           *SettingProto                                  `protobuf:"bytes,72,opt,name=mdc_initial_max_retry,json=mdcInitialMaxRetry" json:"mdc_initial_max_retry,omitempty"`
	Mhl                          *GlobalSettingsProto_Mhl                       `protobuf:"bytes,73,opt,name=mhl" json:"mhl,omitempty"`
	MobileData                   *GlobalSettingsProto_MobileData                `protobuf:"bytes,74,opt,name=mobile_data,json=mobileData" json:"mobile_data,omitempty"`
	// Ringer mode. A change in this value will not reflect as a change in the
	// ringer mode.
	ModeRinger *SettingProto `protobuf:"bytes,75,opt,name=mode_ringer,json=modeRinger" json:"mode_ringer,omitempty"`
	// This is an optional feature where ringer mode affects alarm stream as well
	MuteAlarmStreamWithRingerMode *SettingProto                 `protobuf:"bytes,160,opt,name=mute_alarm_stream_with_ringer_mode,json=muteAlarmStreamWithRingerMode" json:"mute_alarm_stream_with_ringer_mode,omitempty"`
	MultiSim                      *GlobalSettingsProto_MultiSim `protobuf:"bytes,76,opt,name=multi_sim,json=multiSim" json:"multi_sim,omitempty"`
	// Whether we've enabled native flags health check on this device. Takes effect on
	// reboot. The value "1" enables native flags health check; otherwise it's disabled.
	NativeFlagsHealthCheckEnabled *SettingProto                 `protobuf:"bytes,144,opt,name=native_flags_health_check_enabled,json=nativeFlagsHealthCheckEnabled" json:"native_flags_health_check_enabled,omitempty"`
	Netstats                      *GlobalSettingsProto_Netstats `protobuf:"bytes,77,opt,name=netstats" json:"netstats,omitempty"`
	Network                       *GlobalSettingsProto_Network  `protobuf:"bytes,78,opt,name=network" json:"network,omitempty"`
	// Whether to enable new contacts aggregator or not.
	// 1 = enable, 0 = disable.
	NewContactAggregator                *SettingProto                               `protobuf:"bytes,79,opt,name=new_contact_aggregator,json=newContactAggregator" json:"new_contact_aggregator,omitempty"`
	NightDisplayForcedAutoModeAvailable *SettingProto                               `protobuf:"bytes,80,opt,name=night_display_forced_auto_mode_available,json=nightDisplayForcedAutoModeAvailable" json:"night_display_forced_auto_mode_available,omitempty"`
	Nitz                                *GlobalSettingsProto_Nitz                   `protobuf:"bytes,81,opt,name=nitz" json:"nitz,omitempty"`
	Notification                        *GlobalSettingsProto_Notification           `protobuf:"bytes,82,opt,name=notification" json:"notification,omitempty"`
	NrNsaTrackingScreenOffMode          *SettingProto                               `protobuf:"bytes,153,opt,name=nr_nsa_tracking_screen_off_mode,json=nrNsaTrackingScreenOffMode" json:"nr_nsa_tracking_screen_off_mode,omitempty"`
	Ntp                                 *GlobalSettingsProto_Ntp                    `protobuf:"bytes,84,opt,name=ntp" json:"ntp,omitempty"`
	UserAbsentSmallBattery              *GlobalSettingsProto_UserAbsentSmallBattery `protobuf:"bytes,85,opt,name=user_absent_small_battery,json=userAbsentSmallBattery" json:"user_absent_small_battery,omitempty"`
	// Whether to disable the automatic scheduling of system updates.
	OtaDisableAutomaticUpdate *SettingProto `protobuf:"bytes,86,opt,name=ota_disable_automatic_update,json=otaDisableAutomaticUpdate" json:"ota_disable_automatic_update,omitempty"`
	// Overlay display devices setting.
	// The value is a specially formatted string that describes the size and
	// density of simulated secondary devices.
	// Format: {width}x{height}/dpi;...
	OverlayDisplayDevices *SettingProto `protobuf:"bytes,87,opt,name=overlay_display_devices,json=overlayDisplayDevices" json:"overlay_display_devices,omitempty"`
	// If set to 1, SettingsProvider's restoreAnyVersion="true" attribute will
	// be ignored and restoring to lower version of platform API will be
	// skipped.
	OverrideSettingsProviderRestoreAnyVersion *SettingProto `protobuf:"bytes,88,opt,name=override_settings_provider_restore_any_version,json=overrideSettingsProviderRestoreAnyVersion" json:"override_settings_provider_restore_any_version,omitempty"`
	// The series of successively longer delays used in retrying to download PAC file.
	PacChangeDelay  *SettingProto                        `protobuf:"bytes,89,opt,name=pac_change_delay,json=pacChangeDelay" json:"pac_change_delay,omitempty"`
	PackageVerifier *GlobalSettingsProto_PackageVerifier `protobuf:"bytes,90,opt,name=package_verifier,json=packageVerifier" json:"package_verifier,omitempty"`
	PdpWatchdog     *GlobalSettingsProto_PdpWatchdog     `protobuf:"bytes,91,opt,name=pdp_watchdog,json=pdpWatchdog" json:"pdp_watchdog,omitempty"`
	// Defines global runtime overrides to window policy.
	PolicyControl                  *SettingProto                     `protobuf:"bytes,92,opt,name=policy_control,json=policyControl" json:"policy_control,omitempty"`
	PowerManagerConstants          *SettingProto                     `protobuf:"bytes,93,opt,name=power_manager_constants,json=powerManagerConstants" json:"power_manager_constants,omitempty"`
	PowerButtonLongPressDurationMs *SettingProto                     `protobuf:"bytes,154,opt,name=power_button_long_press_duration_ms,json=powerButtonLongPressDurationMs" json:"power_button_long_press_duration_ms,omitempty"`
	PrepaidSetup                   *GlobalSettingsProto_PrepaidSetup `protobuf:"bytes,95,opt,name=prepaid_setup,json=prepaidSetup" json:"prepaid_setup,omitempty"`
	Private                        *GlobalSettingsProto_Private      `protobuf:"bytes,96,opt,name=private" json:"private,omitempty"`
	// The number of milliseconds to allow the provisioning apn to remain active.
	ProvisioningApnAlarmDelayInMs      *SettingProto                `protobuf:"bytes,97,opt,name=provisioning_apn_alarm_delay_in_ms,json=provisioningApnAlarmDelayInMs" json:"provisioning_apn_alarm_delay_in_ms,omitempty"`
	ReadExternalStorageEnforcedDefault *SettingProto                `protobuf:"bytes,98,opt,name=read_external_storage_enforced_default,json=readExternalStorageEnforcedDefault" json:"read_external_storage_enforced_default,omitempty"`
	RequirePasswordToDecrypt           *SettingProto                `protobuf:"bytes,99,opt,name=require_password_to_decrypt,json=requirePasswordToDecrypt" json:"require_password_to_decrypt,omitempty"`
	SafeBootDisallowed                 *SettingProto                `protobuf:"bytes,100,opt,name=safe_boot_disallowed,json=safeBootDisallowed" json:"safe_boot_disallowed,omitempty"`
	Selinux                            *GlobalSettingsProto_Selinux `protobuf:"bytes,101,opt,name=selinux" json:"selinux,omitempty"`
	// Flag for allowing ActivityManagerService to send ACTION_APP_ERROR intents
	// on application crashes and ANRs. If this is disabled, the crash/ANR
	// dialog will never display the "Report" button.
	SendActionAppError *SettingProto `protobuf:"bytes,102,opt,name=send_action_app_error,json=sendActionAppError" json:"send_action_app_error,omitempty"`
	// Let user pick default install location.
	SetInstallLocation                     *SettingProto                       `protobuf:"bytes,103,opt,name=set_install_location,json=setInstallLocation" json:"set_install_location,omitempty"`
	ShortcutManagerConstants               *SettingProto                       `protobuf:"bytes,104,opt,name=shortcut_manager_constants,json=shortcutManagerConstants" json:"shortcut_manager_constants,omitempty"`
	ShowFirstCrashDialog                   *SettingProto                       `protobuf:"bytes,105,opt,name=show_first_crash_dialog,json=showFirstCrashDialog" json:"show_first_crash_dialog,omitempty"`
	ShowHiddenLauncherIconAppsEnabled      *SettingProto                       `protobuf:"bytes,141,opt,name=show_hidden_launcher_icon_apps_enabled,json=showHiddenLauncherIconAppsEnabled" json:"show_hidden_launcher_icon_apps_enabled,omitempty"`
	ShowRestartInCrashDialog               *SettingProto                       `protobuf:"bytes,106,opt,name=show_restart_in_crash_dialog,json=showRestartInCrashDialog" json:"show_restart_in_crash_dialog,omitempty"`
	ShowMuteInCrashDialog                  *SettingProto                       `protobuf:"bytes,107,opt,name=show_mute_in_crash_dialog,json=showMuteInCrashDialog" json:"show_mute_in_crash_dialog,omitempty"`
	ShowNewAppInstalledNotificationEnabled *SettingProto                       `protobuf:"bytes,142,opt,name=show_new_app_installed_notification_enabled,json=showNewAppInstalledNotificationEnabled" json:"show_new_app_installed_notification_enabled,omitempty"`
	SmartSelection                         *GlobalSettingsProto_SmartSelection `protobuf:"bytes,108,opt,name=smart_selection,json=smartSelection" json:"smart_selection,omitempty"`
	Sms                                    *GlobalSettingsProto_Sms            `protobuf:"bytes,109,opt,name=sms" json:"sms,omitempty"`
	Sounds                                 *GlobalSettingsProto_Sounds         `protobuf:"bytes,110,opt,name=sounds" json:"sounds,omitempty"`
	SoundTrigger                           *GlobalSettingsProto_SoundTrigger   `protobuf:"bytes,111,opt,name=sound_trigger,json=soundTrigger" json:"sound_trigger,omitempty"`
	// Value to specify how long in milliseconds to retain seen score cache
	// curves to be used when generating SSID only bases score curves.
	SpeedLabelCacheEvictionAgeMs *SettingProto `protobuf:"bytes,112,opt,name=speed_label_cache_eviction_age_ms,json=speedLabelCacheEvictionAgeMs" json:"speed_label_cache_eviction_age_ms,omitempty"`
	// Configuration flags for SQLite Compatibility WAL. Encoded as a key-value
	// list, separated by commas.
	// E.g.: compatibility_wal_supported=true, wal_syncmode=OFF
	SqliteCompatibilityWalFlags *SettingProto                           `protobuf:"bytes,113,opt,name=sqlite_compatibility_wal_flags,json=sqliteCompatibilityWalFlags" json:"sqlite_compatibility_wal_flags,omitempty"`
	StayOnWhilePluggedIn        *SettingProto                           `protobuf:"bytes,114,opt,name=stay_on_while_plugged_in,json=stayOnWhilePluggedIn" json:"stay_on_while_plugged_in,omitempty"`
	Storage                     *GlobalSettingsProto_Storage            `protobuf:"bytes,115,opt,name=storage" json:"storage,omitempty"`
	Sync                        *GlobalSettingsProto_Sync               `protobuf:"bytes,116,opt,name=sync" json:"sync,omitempty"`
	Sys                         *GlobalSettingsProto_Sys                `protobuf:"bytes,117,opt,name=sys" json:"sys,omitempty"`
	TcpDefaultInitRwnd          *SettingProto                           `protobuf:"bytes,118,opt,name=tcp_default_init_rwnd,json=tcpDefaultInitRwnd" json:"tcp_default_init_rwnd,omitempty"`
	TemperatureWarning          *GlobalSettingsProto_TemperatureWarning `protobuf:"bytes,119,opt,name=temperature_warning,json=temperatureWarning" json:"temperature_warning,omitempty"`
	Tether                      *GlobalSettingsProto_Tether             `protobuf:"bytes,120,opt,name=tether" json:"tether,omitempty"`
	TextClassifierConstants     *SettingProto                           `protobuf:"bytes,121,opt,name=text_classifier_constants,json=textClassifierConstants" json:"text_classifier_constants,omitempty"`
	TheaterModeOn               *SettingProto                           `protobuf:"bytes,122,opt,name=theater_mode_on,json=theaterModeOn" json:"theater_mode_on,omitempty"`
	TimeOnlyModeConstants       *SettingProto                           `protobuf:"bytes,123,opt,name=time_only_mode_constants,json=timeOnlyModeConstants" json:"time_only_mode_constants,omitempty"`
	TransitionAnimationScale    *SettingProto                           `protobuf:"bytes,124,opt,name=transition_animation_scale,json=transitionAnimationScale" json:"transition_animation_scale,omitempty"`
	Tzinfo                      *GlobalSettingsProto_Tzinfo             `protobuf:"bytes,125,opt,name=tzinfo" json:"tzinfo,omitempty"`
	// The min period for caching unused static shared libs in milliseconds.
	UnusedStaticSharedLibMinCachePeriodMs *SettingProto                `protobuf:"bytes,126,opt,name=unused_static_shared_lib_min_cache_period_ms,json=unusedStaticSharedLibMinCachePeriodMs" json:"unused_static_shared_lib_min_cache_period_ms,omitempty"`
	UsbMassStorageEnabled                 *SettingProto                `protobuf:"bytes,127,opt,name=usb_mass_storage_enabled,json=usbMassStorageEnabled" json:"usb_mass_storage_enabled,omitempty"`
	UseGoogleMail                         *SettingProto                `protobuf:"bytes,128,opt,name=use_google_mail,json=useGoogleMail" json:"use_google_mail,omitempty"`
	UseOpenWifiPackage                    *SettingProto                `protobuf:"bytes,129,opt,name=use_open_wifi_package,json=useOpenWifiPackage" json:"use_open_wifi_package,omitempty"`
	UwbEnabled                            *SettingProto                `protobuf:"bytes,155,opt,name=uwb_enabled,json=uwbEnabled" json:"uwb_enabled,omitempty"`
	VtImsEnabled                          *SettingProto                `protobuf:"bytes,130,opt,name=vt_ims_enabled,json=vtImsEnabled" json:"vt_ims_enabled,omitempty"`
	WaitForDebugger                       *SettingProto                `protobuf:"bytes,131,opt,name=wait_for_debugger,json=waitForDebugger" json:"wait_for_debugger,omitempty"`
	Webview                               *GlobalSettingsProto_Webview `protobuf:"bytes,132,opt,name=webview" json:"webview,omitempty"`
	Wfc                                   *GlobalSettingsProto_Wfc     `protobuf:"bytes,133,opt,name=wfc" json:"wfc,omitempty"`
	Wifi                                  *GlobalSettingsProto_Wifi    `protobuf:"bytes,134,opt,name=wifi" json:"wifi,omitempty"`
	WimaxNetworksAvailableNotificationOn  *SettingProto                `protobuf:"bytes,135,opt,name=wimax_networks_available_notification_on,json=wimaxNetworksAvailableNotificationOn" json:"wimax_networks_available_notification_on,omitempty"`
	WindowAnimationScale                  *SettingProto                `protobuf:"bytes,136,opt,name=window_animation_scale,json=windowAnimationScale" json:"window_animation_scale,omitempty"`
	WtfIsFatal                            *SettingProto                `protobuf:"bytes,137,opt,name=wtf_is_fatal,json=wtfIsFatal" json:"wtf_is_fatal,omitempty"`
	Zen                                   *GlobalSettingsProto_Zen     `protobuf:"bytes,138,opt,name=zen" json:"zen,omitempty"`
	ZramEnabled                           *SettingProto                `protobuf:"bytes,139,opt,name=zram_enabled,json=zramEnabled" json:"zram_enabled,omitempty"`
	AppOpsConstants                       *SettingProto                `protobuf:"bytes,148,opt,name=app_ops_constants,json=appOpsConstants" json:"app_ops_constants,omitempty"`
	TextClassifierActionModelParams       *SettingProto                `protobuf:"bytes,145,opt,name=text_classifier_action_model_params,json=textClassifierActionModelParams" json:"text_classifier_action_model_params,omitempty"`
}

func (x *GlobalSettingsProto) Reset() {
	*x = GlobalSettingsProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto) ProtoMessage() {}

func (x *GlobalSettingsProto) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0}
}

func (x *GlobalSettingsProto) GetHistoricalOperations() []*SettingsOperationProto {
	if x != nil {
		return x.HistoricalOperations
	}
	return nil
}

func (x *GlobalSettingsProto) GetActivityManagerConstants() *SettingProto {
	if x != nil {
		return x.ActivityManagerConstants
	}
	return nil
}

func (x *GlobalSettingsProto) GetAdbEnabled() *SettingProto {
	if x != nil {
		return x.AdbEnabled
	}
	return nil
}

func (x *GlobalSettingsProto) GetAddUsersWhenLocked() *SettingProto {
	if x != nil {
		return x.AddUsersWhenLocked
	}
	return nil
}

func (x *GlobalSettingsProto) GetAirplaneMode() *GlobalSettingsProto_AirplaneMode {
	if x != nil {
		return x.AirplaneMode
	}
	return nil
}

func (x *GlobalSettingsProto) GetAllowUserSwitchingWhenSystemUserLocked() *SettingProto {
	if x != nil {
		return x.AllowUserSwitchingWhenSystemUserLocked
	}
	return nil
}

func (x *GlobalSettingsProto) GetAlwaysOnDisplayConstants() *SettingProto {
	if x != nil {
		return x.AlwaysOnDisplayConstants
	}
	return nil
}

func (x *GlobalSettingsProto) GetAlwaysFinishActivities() *SettingProto {
	if x != nil {
		return x.AlwaysFinishActivities
	}
	return nil
}

func (x *GlobalSettingsProto) GetAnimatorDurationScale() *SettingProto {
	if x != nil {
		return x.AnimatorDurationScale
	}
	return nil
}

func (x *GlobalSettingsProto) GetAnomaly() *GlobalSettingsProto_Anomaly {
	if x != nil {
		return x.Anomaly
	}
	return nil
}

func (x *GlobalSettingsProto) GetApnDb() *GlobalSettingsProto_ApnDb {
	if x != nil {
		return x.ApnDb
	}
	return nil
}

func (x *GlobalSettingsProto) GetApp() *GlobalSettingsProto_App {
	if x != nil {
		return x.App
	}
	return nil
}

func (x *GlobalSettingsProto) GetAssistedGpsEnabled() *SettingProto {
	if x != nil {
		return x.AssistedGpsEnabled
	}
	return nil
}

func (x *GlobalSettingsProto) GetAudioSafeVolumeState() *SettingProto {
	if x != nil {
		return x.AudioSafeVolumeState
	}
	return nil
}

func (x *GlobalSettingsProto) GetAudioSafeCsdCurrentValue() *SettingProto {
	if x != nil {
		return x.AudioSafeCsdCurrentValue
	}
	return nil
}

func (x *GlobalSettingsProto) GetAudioSafeCsdNextWarning() *SettingProto {
	if x != nil {
		return x.AudioSafeCsdNextWarning
	}
	return nil
}

func (x *GlobalSettingsProto) GetAudioSafeCsdDoseRecords() *SettingProto {
	if x != nil {
		return x.AudioSafeCsdDoseRecords
	}
	return nil
}

func (x *GlobalSettingsProto) GetAutofill() *GlobalSettingsProto_Autofill {
	if x != nil {
		return x.Autofill
	}
	return nil
}

func (x *GlobalSettingsProto) GetBackup() *GlobalSettingsProto_Backup {
	if x != nil {
		return x.Backup
	}
	return nil
}

func (x *GlobalSettingsProto) GetBattery() *GlobalSettingsProto_Battery {
	if x != nil {
		return x.Battery
	}
	return nil
}

func (x *GlobalSettingsProto) GetBleScan() *GlobalSettingsProto_BleScan {
	if x != nil {
		return x.BleScan
	}
	return nil
}

func (x *GlobalSettingsProto) GetBluetooth() *GlobalSettingsProto_Bluetooth {
	if x != nil {
		return x.Bluetooth
	}
	return nil
}

func (x *GlobalSettingsProto) GetBootCount() *SettingProto {
	if x != nil {
		return x.BootCount
	}
	return nil
}

func (x *GlobalSettingsProto) GetCachedAppsFreezerEnabled() *SettingProto {
	if x != nil {
		return x.CachedAppsFreezerEnabled
	}
	return nil
}

func (x *GlobalSettingsProto) GetCallAutoRetry() *SettingProto {
	if x != nil {
		return x.CallAutoRetry
	}
	return nil
}

func (x *GlobalSettingsProto) GetCaptivePortal() *GlobalSettingsProto_CaptivePortal {
	if x != nil {
		return x.CaptivePortal
	}
	return nil
}

func (x *GlobalSettingsProto) GetCarrier() *GlobalSettingsProto_Carrier {
	if x != nil {
		return x.Carrier
	}
	return nil
}

func (x *GlobalSettingsProto) GetCdma() *GlobalSettingsProto_Cdma {
	if x != nil {
		return x.Cdma
	}
	return nil
}

func (x *GlobalSettingsProto) GetCellOn() *SettingProto {
	if x != nil {
		return x.CellOn
	}
	return nil
}

func (x *GlobalSettingsProto) GetCertPin() *GlobalSettingsProto_CertPin {
	if x != nil {
		return x.CertPin
	}
	return nil
}

func (x *GlobalSettingsProto) GetChainedBatteryAttributionEnabled() *SettingProto {
	if x != nil {
		return x.ChainedBatteryAttributionEnabled
	}
	return nil
}

func (x *GlobalSettingsProto) GetCompatibilityMode() *SettingProto {
	if x != nil {
		return x.CompatibilityMode
	}
	return nil
}

func (x *GlobalSettingsProto) GetConnectivity() *GlobalSettingsProto_Connectivity {
	if x != nil {
		return x.Connectivity
	}
	return nil
}

func (x *GlobalSettingsProto) GetContactMetadataSyncEnabled() *SettingProto {
	if x != nil {
		return x.ContactMetadataSyncEnabled
	}
	return nil
}

func (x *GlobalSettingsProto) GetContactsDatabaseWalEnabled() *SettingProto {
	if x != nil {
		return x.ContactsDatabaseWalEnabled
	}
	return nil
}

func (x *GlobalSettingsProto) GetData() *GlobalSettingsProto_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GlobalSettingsProto) GetDatabase() *GlobalSettingsProto_Database {
	if x != nil {
		return x.Database
	}
	return nil
}

func (x *GlobalSettingsProto) GetDateTime() *GlobalSettingsProto_DateTime {
	if x != nil {
		return x.DateTime
	}
	return nil
}

func (x *GlobalSettingsProto) GetDebug() *GlobalSettingsProto_Debug {
	if x != nil {
		return x.Debug
	}
	return nil
}

func (x *GlobalSettingsProto) GetDefault() *GlobalSettingsProto_Default {
	if x != nil {
		return x.Default
	}
	return nil
}

func (x *GlobalSettingsProto) GetDevelopment() *GlobalSettingsProto_Development {
	if x != nil {
		return x.Development
	}
	return nil
}

func (x *GlobalSettingsProto) GetDevice() *GlobalSettingsProto_Device {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *GlobalSettingsProto) GetDiskFreeChangeReportingThreshold() *SettingProto {
	if x != nil {
		return x.DiskFreeChangeReportingThreshold
	}
	return nil
}

func (x *GlobalSettingsProto) GetDisplay() *GlobalSettingsProto_Display {
	if x != nil {
		return x.Display
	}
	return nil
}

func (x *GlobalSettingsProto) GetDnsResolver() *GlobalSettingsProto_DnsResolver {
	if x != nil {
		return x.DnsResolver
	}
	return nil
}

func (x *GlobalSettingsProto) GetDockAudioMediaEnabled() *SettingProto {
	if x != nil {
		return x.DockAudioMediaEnabled
	}
	return nil
}

func (x *GlobalSettingsProto) GetDownload() *GlobalSettingsProto_Download {
	if x != nil {
		return x.Download
	}
	return nil
}

func (x *GlobalSettingsProto) GetDropbox() *GlobalSettingsProto_Dropbox {
	if x != nil {
		return x.Dropbox
	}
	return nil
}

func (x *GlobalSettingsProto) GetDynamicPowerSavings() *GlobalSettingsProto_DynamicPowerSavings {
	if x != nil {
		return x.DynamicPowerSavings
	}
	return nil
}

func (x *GlobalSettingsProto) GetEmergency() *GlobalSettingsProto_Emergency {
	if x != nil {
		return x.Emergency
	}
	return nil
}

func (x *GlobalSettingsProto) GetEnable() *GlobalSettingsProto_Enable {
	if x != nil {
		return x.Enable
	}
	return nil
}

func (x *GlobalSettingsProto) GetEncodedSurroundOutput() *SettingProto {
	if x != nil {
		return x.EncodedSurroundOutput
	}
	return nil
}

func (x *GlobalSettingsProto) GetEnhanced_4GModeEnabled() *SettingProto {
	if x != nil {
		return x.Enhanced_4GModeEnabled
	}
	return nil
}

func (x *GlobalSettingsProto) GetErrorLogcatLines() []*SettingProto {
	if x != nil {
		return x.ErrorLogcatLines
	}
	return nil
}

func (x *GlobalSettingsProto) GetEuicc() *GlobalSettingsProto_Euicc {
	if x != nil {
		return x.Euicc
	}
	return nil
}

func (x *GlobalSettingsProto) GetFancyImeAnimations() *SettingProto {
	if x != nil {
		return x.FancyImeAnimations
	}
	return nil
}

func (x *GlobalSettingsProto) GetForceAllowOnExternal() *SettingProto {
	if x != nil {
		return x.ForceAllowOnExternal
	}
	return nil
}

func (x *GlobalSettingsProto) GetFpsDivisor() *SettingProto {
	if x != nil {
		return x.FpsDivisor
	}
	return nil
}

func (x *GlobalSettingsProto) GetFstrimMandatoryInterval() *SettingProto {
	if x != nil {
		return x.FstrimMandatoryInterval
	}
	return nil
}

func (x *GlobalSettingsProto) GetGlobalHttpProxy() *GlobalSettingsProto_GlobalHttpProxy {
	if x != nil {
		return x.GlobalHttpProxy
	}
	return nil
}

func (x *GlobalSettingsProto) GetGprsRegisterCheckPeriodMs() *SettingProto {
	if x != nil {
		return x.GprsRegisterCheckPeriodMs
	}
	return nil
}

func (x *GlobalSettingsProto) GetGpu() *GlobalSettingsProto_Gpu {
	if x != nil {
		return x.Gpu
	}
	return nil
}

func (x *GlobalSettingsProto) GetHdmi() *GlobalSettingsProto_Hdmi {
	if x != nil {
		return x.Hdmi
	}
	return nil
}

func (x *GlobalSettingsProto) GetHeadsUpNotificationsEnabled() *SettingProto {
	if x != nil {
		return x.HeadsUpNotificationsEnabled
	}
	return nil
}

func (x *GlobalSettingsProto) GetHiddenApiBlacklistExemptions() *SettingProto {
	if x != nil {
		return x.HiddenApiBlacklistExemptions
	}
	return nil
}

func (x *GlobalSettingsProto) GetInetCondition() *GlobalSettingsProto_InetCondition {
	if x != nil {
		return x.InetCondition
	}
	return nil
}

func (x *GlobalSettingsProto) GetInstantApp() *GlobalSettingsProto_InstantApp {
	if x != nil {
		return x.InstantApp
	}
	return nil
}

func (x *GlobalSettingsProto) GetIntentFirewall() *GlobalSettingsProto_IntentFirewall {
	if x != nil {
		return x.IntentFirewall
	}
	return nil
}

func (x *GlobalSettingsProto) GetKeepProfileInBackground() *SettingProto {
	if x != nil {
		return x.KeepProfileInBackground
	}
	return nil
}

func (x *GlobalSettingsProto) GetLangId() *GlobalSettingsProto_LangId {
	if x != nil {
		return x.LangId
	}
	return nil
}

func (x *GlobalSettingsProto) GetLocation() *GlobalSettingsProto_Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *GlobalSettingsProto) GetLowPowerMode() *GlobalSettingsProto_LowPowerMode {
	if x != nil {
		return x.LowPowerMode
	}
	return nil
}

func (x *GlobalSettingsProto) GetLteServiceForced() *SettingProto {
	if x != nil {
		return x.LteServiceForced
	}
	return nil
}

func (x *GlobalSettingsProto) GetMaxErrorBytes() []*SettingProto {
	if x != nil {
		return x.MaxErrorBytes
	}
	return nil
}

func (x *GlobalSettingsProto) GetManagedDeviceProvisioning() *GlobalSettingsProto_ManagedDeviceProvisioning {
	if x != nil {
		return x.ManagedDeviceProvisioning
	}
	return nil
}

func (x *GlobalSettingsProto) GetMdcInitialMaxRetry() *SettingProto {
	if x != nil {
		return x.MdcInitialMaxRetry
	}
	return nil
}

func (x *GlobalSettingsProto) GetMhl() *GlobalSettingsProto_Mhl {
	if x != nil {
		return x.Mhl
	}
	return nil
}

func (x *GlobalSettingsProto) GetMobileData() *GlobalSettingsProto_MobileData {
	if x != nil {
		return x.MobileData
	}
	return nil
}

func (x *GlobalSettingsProto) GetModeRinger() *SettingProto {
	if x != nil {
		return x.ModeRinger
	}
	return nil
}

func (x *GlobalSettingsProto) GetMuteAlarmStreamWithRingerMode() *SettingProto {
	if x != nil {
		return x.MuteAlarmStreamWithRingerMode
	}
	return nil
}

func (x *GlobalSettingsProto) GetMultiSim() *GlobalSettingsProto_MultiSim {
	if x != nil {
		return x.MultiSim
	}
	return nil
}

func (x *GlobalSettingsProto) GetNativeFlagsHealthCheckEnabled() *SettingProto {
	if x != nil {
		return x.NativeFlagsHealthCheckEnabled
	}
	return nil
}

func (x *GlobalSettingsProto) GetNetstats() *GlobalSettingsProto_Netstats {
	if x != nil {
		return x.Netstats
	}
	return nil
}

func (x *GlobalSettingsProto) GetNetwork() *GlobalSettingsProto_Network {
	if x != nil {
		return x.Network
	}
	return nil
}

func (x *GlobalSettingsProto) GetNewContactAggregator() *SettingProto {
	if x != nil {
		return x.NewContactAggregator
	}
	return nil
}

func (x *GlobalSettingsProto) GetNightDisplayForcedAutoModeAvailable() *SettingProto {
	if x != nil {
		return x.NightDisplayForcedAutoModeAvailable
	}
	return nil
}

func (x *GlobalSettingsProto) GetNitz() *GlobalSettingsProto_Nitz {
	if x != nil {
		return x.Nitz
	}
	return nil
}

func (x *GlobalSettingsProto) GetNotification() *GlobalSettingsProto_Notification {
	if x != nil {
		return x.Notification
	}
	return nil
}

func (x *GlobalSettingsProto) GetNrNsaTrackingScreenOffMode() *SettingProto {
	if x != nil {
		return x.NrNsaTrackingScreenOffMode
	}
	return nil
}

func (x *GlobalSettingsProto) GetNtp() *GlobalSettingsProto_Ntp {
	if x != nil {
		return x.Ntp
	}
	return nil
}

func (x *GlobalSettingsProto) GetUserAbsentSmallBattery() *GlobalSettingsProto_UserAbsentSmallBattery {
	if x != nil {
		return x.UserAbsentSmallBattery
	}
	return nil
}

func (x *GlobalSettingsProto) GetOtaDisableAutomaticUpdate() *SettingProto {
	if x != nil {
		return x.OtaDisableAutomaticUpdate
	}
	return nil
}

func (x *GlobalSettingsProto) GetOverlayDisplayDevices() *SettingProto {
	if x != nil {
		return x.OverlayDisplayDevices
	}
	return nil
}

func (x *GlobalSettingsProto) GetOverrideSettingsProviderRestoreAnyVersion() *SettingProto {
	if x != nil {
		return x.OverrideSettingsProviderRestoreAnyVersion
	}
	return nil
}

func (x *GlobalSettingsProto) GetPacChangeDelay() *SettingProto {
	if x != nil {
		return x.PacChangeDelay
	}
	return nil
}

func (x *GlobalSettingsProto) GetPackageVerifier() *GlobalSettingsProto_PackageVerifier {
	if x != nil {
		return x.PackageVerifier
	}
	return nil
}

func (x *GlobalSettingsProto) GetPdpWatchdog() *GlobalSettingsProto_PdpWatchdog {
	if x != nil {
		return x.PdpWatchdog
	}
	return nil
}

func (x *GlobalSettingsProto) GetPolicyControl() *SettingProto {
	if x != nil {
		return x.PolicyControl
	}
	return nil
}

func (x *GlobalSettingsProto) GetPowerManagerConstants() *SettingProto {
	if x != nil {
		return x.PowerManagerConstants
	}
	return nil
}

func (x *GlobalSettingsProto) GetPowerButtonLongPressDurationMs() *SettingProto {
	if x != nil {
		return x.PowerButtonLongPressDurationMs
	}
	return nil
}

func (x *GlobalSettingsProto) GetPrepaidSetup() *GlobalSettingsProto_PrepaidSetup {
	if x != nil {
		return x.PrepaidSetup
	}
	return nil
}

func (x *GlobalSettingsProto) GetPrivate() *GlobalSettingsProto_Private {
	if x != nil {
		return x.Private
	}
	return nil
}

func (x *GlobalSettingsProto) GetProvisioningApnAlarmDelayInMs() *SettingProto {
	if x != nil {
		return x.ProvisioningApnAlarmDelayInMs
	}
	return nil
}

func (x *GlobalSettingsProto) GetReadExternalStorageEnforcedDefault() *SettingProto {
	if x != nil {
		return x.ReadExternalStorageEnforcedDefault
	}
	return nil
}

func (x *GlobalSettingsProto) GetRequirePasswordToDecrypt() *SettingProto {
	if x != nil {
		return x.RequirePasswordToDecrypt
	}
	return nil
}

func (x *GlobalSettingsProto) GetSafeBootDisallowed() *SettingProto {
	if x != nil {
		return x.SafeBootDisallowed
	}
	return nil
}

func (x *GlobalSettingsProto) GetSelinux() *GlobalSettingsProto_Selinux {
	if x != nil {
		return x.Selinux
	}
	return nil
}

func (x *GlobalSettingsProto) GetSendActionAppError() *SettingProto {
	if x != nil {
		return x.SendActionAppError
	}
	return nil
}

func (x *GlobalSettingsProto) GetSetInstallLocation() *SettingProto {
	if x != nil {
		return x.SetInstallLocation
	}
	return nil
}

func (x *GlobalSettingsProto) GetShortcutManagerConstants() *SettingProto {
	if x != nil {
		return x.ShortcutManagerConstants
	}
	return nil
}

func (x *GlobalSettingsProto) GetShowFirstCrashDialog() *SettingProto {
	if x != nil {
		return x.ShowFirstCrashDialog
	}
	return nil
}

func (x *GlobalSettingsProto) GetShowHiddenLauncherIconAppsEnabled() *SettingProto {
	if x != nil {
		return x.ShowHiddenLauncherIconAppsEnabled
	}
	return nil
}

func (x *GlobalSettingsProto) GetShowRestartInCrashDialog() *SettingProto {
	if x != nil {
		return x.ShowRestartInCrashDialog
	}
	return nil
}

func (x *GlobalSettingsProto) GetShowMuteInCrashDialog() *SettingProto {
	if x != nil {
		return x.ShowMuteInCrashDialog
	}
	return nil
}

func (x *GlobalSettingsProto) GetShowNewAppInstalledNotificationEnabled() *SettingProto {
	if x != nil {
		return x.ShowNewAppInstalledNotificationEnabled
	}
	return nil
}

func (x *GlobalSettingsProto) GetSmartSelection() *GlobalSettingsProto_SmartSelection {
	if x != nil {
		return x.SmartSelection
	}
	return nil
}

func (x *GlobalSettingsProto) GetSms() *GlobalSettingsProto_Sms {
	if x != nil {
		return x.Sms
	}
	return nil
}

func (x *GlobalSettingsProto) GetSounds() *GlobalSettingsProto_Sounds {
	if x != nil {
		return x.Sounds
	}
	return nil
}

func (x *GlobalSettingsProto) GetSoundTrigger() *GlobalSettingsProto_SoundTrigger {
	if x != nil {
		return x.SoundTrigger
	}
	return nil
}

func (x *GlobalSettingsProto) GetSpeedLabelCacheEvictionAgeMs() *SettingProto {
	if x != nil {
		return x.SpeedLabelCacheEvictionAgeMs
	}
	return nil
}

func (x *GlobalSettingsProto) GetSqliteCompatibilityWalFlags() *SettingProto {
	if x != nil {
		return x.SqliteCompatibilityWalFlags
	}
	return nil
}

func (x *GlobalSettingsProto) GetStayOnWhilePluggedIn() *SettingProto {
	if x != nil {
		return x.StayOnWhilePluggedIn
	}
	return nil
}

func (x *GlobalSettingsProto) GetStorage() *GlobalSettingsProto_Storage {
	if x != nil {
		return x.Storage
	}
	return nil
}

func (x *GlobalSettingsProto) GetSync() *GlobalSettingsProto_Sync {
	if x != nil {
		return x.Sync
	}
	return nil
}

func (x *GlobalSettingsProto) GetSys() *GlobalSettingsProto_Sys {
	if x != nil {
		return x.Sys
	}
	return nil
}

func (x *GlobalSettingsProto) GetTcpDefaultInitRwnd() *SettingProto {
	if x != nil {
		return x.TcpDefaultInitRwnd
	}
	return nil
}

func (x *GlobalSettingsProto) GetTemperatureWarning() *GlobalSettingsProto_TemperatureWarning {
	if x != nil {
		return x.TemperatureWarning
	}
	return nil
}

func (x *GlobalSettingsProto) GetTether() *GlobalSettingsProto_Tether {
	if x != nil {
		return x.Tether
	}
	return nil
}

func (x *GlobalSettingsProto) GetTextClassifierConstants() *SettingProto {
	if x != nil {
		return x.TextClassifierConstants
	}
	return nil
}

func (x *GlobalSettingsProto) GetTheaterModeOn() *SettingProto {
	if x != nil {
		return x.TheaterModeOn
	}
	return nil
}

func (x *GlobalSettingsProto) GetTimeOnlyModeConstants() *SettingProto {
	if x != nil {
		return x.TimeOnlyModeConstants
	}
	return nil
}

func (x *GlobalSettingsProto) GetTransitionAnimationScale() *SettingProto {
	if x != nil {
		return x.TransitionAnimationScale
	}
	return nil
}

func (x *GlobalSettingsProto) GetTzinfo() *GlobalSettingsProto_Tzinfo {
	if x != nil {
		return x.Tzinfo
	}
	return nil
}

func (x *GlobalSettingsProto) GetUnusedStaticSharedLibMinCachePeriodMs() *SettingProto {
	if x != nil {
		return x.UnusedStaticSharedLibMinCachePeriodMs
	}
	return nil
}

func (x *GlobalSettingsProto) GetUsbMassStorageEnabled() *SettingProto {
	if x != nil {
		return x.UsbMassStorageEnabled
	}
	return nil
}

func (x *GlobalSettingsProto) GetUseGoogleMail() *SettingProto {
	if x != nil {
		return x.UseGoogleMail
	}
	return nil
}

func (x *GlobalSettingsProto) GetUseOpenWifiPackage() *SettingProto {
	if x != nil {
		return x.UseOpenWifiPackage
	}
	return nil
}

func (x *GlobalSettingsProto) GetUwbEnabled() *SettingProto {
	if x != nil {
		return x.UwbEnabled
	}
	return nil
}

func (x *GlobalSettingsProto) GetVtImsEnabled() *SettingProto {
	if x != nil {
		return x.VtImsEnabled
	}
	return nil
}

func (x *GlobalSettingsProto) GetWaitForDebugger() *SettingProto {
	if x != nil {
		return x.WaitForDebugger
	}
	return nil
}

func (x *GlobalSettingsProto) GetWebview() *GlobalSettingsProto_Webview {
	if x != nil {
		return x.Webview
	}
	return nil
}

func (x *GlobalSettingsProto) GetWfc() *GlobalSettingsProto_Wfc {
	if x != nil {
		return x.Wfc
	}
	return nil
}

func (x *GlobalSettingsProto) GetWifi() *GlobalSettingsProto_Wifi {
	if x != nil {
		return x.Wifi
	}
	return nil
}

func (x *GlobalSettingsProto) GetWimaxNetworksAvailableNotificationOn() *SettingProto {
	if x != nil {
		return x.WimaxNetworksAvailableNotificationOn
	}
	return nil
}

func (x *GlobalSettingsProto) GetWindowAnimationScale() *SettingProto {
	if x != nil {
		return x.WindowAnimationScale
	}
	return nil
}

func (x *GlobalSettingsProto) GetWtfIsFatal() *SettingProto {
	if x != nil {
		return x.WtfIsFatal
	}
	return nil
}

func (x *GlobalSettingsProto) GetZen() *GlobalSettingsProto_Zen {
	if x != nil {
		return x.Zen
	}
	return nil
}

func (x *GlobalSettingsProto) GetZramEnabled() *SettingProto {
	if x != nil {
		return x.ZramEnabled
	}
	return nil
}

func (x *GlobalSettingsProto) GetAppOpsConstants() *SettingProto {
	if x != nil {
		return x.AppOpsConstants
	}
	return nil
}

func (x *GlobalSettingsProto) GetTextClassifierActionModelParams() *SettingProto {
	if x != nil {
		return x.TextClassifierActionModelParams
	}
	return nil
}

type GlobalSettingsProto_AirplaneMode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// "airplane_mode_on" in code.
	On *SettingProto `protobuf:"bytes,1,opt,name=on" json:"on,omitempty"`
	// A comma-separated list of radios that need to be disabled when airplane
	// mode is on. This overrides wifi_on and bluetooth_on if wifi and bluetooth
	// are included in the comma-separated list.
	Radios           *SettingProto `protobuf:"bytes,2,opt,name=radios" json:"radios,omitempty"`
	ToggleableRadios *SettingProto `protobuf:"bytes,3,opt,name=toggleable_radios,json=toggleableRadios" json:"toggleable_radios,omitempty"`
}

func (x *GlobalSettingsProto_AirplaneMode) Reset() {
	*x = GlobalSettingsProto_AirplaneMode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_AirplaneMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_AirplaneMode) ProtoMessage() {}

func (x *GlobalSettingsProto_AirplaneMode) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_AirplaneMode.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_AirplaneMode) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 0}
}

func (x *GlobalSettingsProto_AirplaneMode) GetOn() *SettingProto {
	if x != nil {
		return x.On
	}
	return nil
}

func (x *GlobalSettingsProto_AirplaneMode) GetRadios() *SettingProto {
	if x != nil {
		return x.Radios
	}
	return nil
}

func (x *GlobalSettingsProto_AirplaneMode) GetToggleableRadios() *SettingProto {
	if x != nil {
		return x.ToggleableRadios
	}
	return nil
}

type GlobalSettingsProto_Anomaly struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// "anomaly_detection_constants" in code.
	DetectionConstants *SettingProto `protobuf:"bytes,1,opt,name=detection_constants,json=detectionConstants" json:"detection_constants,omitempty"`
	// Version of the anomaly config.
	ConfigVersion *SettingProto `protobuf:"bytes,2,opt,name=config_version,json=configVersion" json:"config_version,omitempty"`
	// A base64-encoded string represents anomaly stats config.
	Config *SettingProto `protobuf:"bytes,3,opt,name=config" json:"config,omitempty"`
}

func (x *GlobalSettingsProto_Anomaly) Reset() {
	*x = GlobalSettingsProto_Anomaly{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_Anomaly) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_Anomaly) ProtoMessage() {}

func (x *GlobalSettingsProto_Anomaly) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_Anomaly.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_Anomaly) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 1}
}

func (x *GlobalSettingsProto_Anomaly) GetDetectionConstants() *SettingProto {
	if x != nil {
		return x.DetectionConstants
	}
	return nil
}

func (x *GlobalSettingsProto_Anomaly) GetConfigVersion() *SettingProto {
	if x != nil {
		return x.ConfigVersion
	}
	return nil
}

func (x *GlobalSettingsProto_Anomaly) GetConfig() *SettingProto {
	if x != nil {
		return x.Config
	}
	return nil
}

type GlobalSettingsProto_ApnDb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateContentUrl  *SettingProto `protobuf:"bytes,1,opt,name=update_content_url,json=updateContentUrl" json:"update_content_url,omitempty"`
	UpdateMetadataUrl *SettingProto `protobuf:"bytes,2,opt,name=update_metadata_url,json=updateMetadataUrl" json:"update_metadata_url,omitempty"`
}

func (x *GlobalSettingsProto_ApnDb) Reset() {
	*x = GlobalSettingsProto_ApnDb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_ApnDb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_ApnDb) ProtoMessage() {}

func (x *GlobalSettingsProto_ApnDb) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_ApnDb.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_ApnDb) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 2}
}

func (x *GlobalSettingsProto_ApnDb) GetUpdateContentUrl() *SettingProto {
	if x != nil {
		return x.UpdateContentUrl
	}
	return nil
}

func (x *GlobalSettingsProto_ApnDb) GetUpdateMetadataUrl() *SettingProto {
	if x != nil {
		return x.UpdateMetadataUrl
	}
	return nil
}

type GlobalSettingsProto_App struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StandbyEnabled                         *SettingProto `protobuf:"bytes,2,opt,name=standby_enabled,json=standbyEnabled" json:"standby_enabled,omitempty"`
	AutoRestrictionEnabled                 *SettingProto `protobuf:"bytes,3,opt,name=auto_restriction_enabled,json=autoRestrictionEnabled" json:"auto_restriction_enabled,omitempty"`
	ForcedAppStandbyEnabled                *SettingProto `protobuf:"bytes,4,opt,name=forced_app_standby_enabled,json=forcedAppStandbyEnabled" json:"forced_app_standby_enabled,omitempty"`
	ForcedAppStandbyForSmallBatteryEnabled *SettingProto `protobuf:"bytes,5,opt,name=forced_app_standby_for_small_battery_enabled,json=forcedAppStandbyForSmallBatteryEnabled" json:"forced_app_standby_for_small_battery_enabled,omitempty"`
}

func (x *GlobalSettingsProto_App) Reset() {
	*x = GlobalSettingsProto_App{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_App) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_App) ProtoMessage() {}

func (x *GlobalSettingsProto_App) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_App.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_App) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 3}
}

func (x *GlobalSettingsProto_App) GetStandbyEnabled() *SettingProto {
	if x != nil {
		return x.StandbyEnabled
	}
	return nil
}

func (x *GlobalSettingsProto_App) GetAutoRestrictionEnabled() *SettingProto {
	if x != nil {
		return x.AutoRestrictionEnabled
	}
	return nil
}

func (x *GlobalSettingsProto_App) GetForcedAppStandbyEnabled() *SettingProto {
	if x != nil {
		return x.ForcedAppStandbyEnabled
	}
	return nil
}

func (x *GlobalSettingsProto_App) GetForcedAppStandbyForSmallBatteryEnabled() *SettingProto {
	if x != nil {
		return x.ForcedAppStandbyForSmallBatteryEnabled
	}
	return nil
}

type GlobalSettingsProto_Autofill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompatModeAllowedPackages *SettingProto `protobuf:"bytes,1,opt,name=compat_mode_allowed_packages,json=compatModeAllowedPackages" json:"compat_mode_allowed_packages,omitempty"`
	LoggingLevel              *SettingProto `protobuf:"bytes,2,opt,name=logging_level,json=loggingLevel" json:"logging_level,omitempty"`
	MaxPartitionsSize         *SettingProto `protobuf:"bytes,3,opt,name=max_partitions_size,json=maxPartitionsSize" json:"max_partitions_size,omitempty"`
	MaxVisibleDatasets        *SettingProto `protobuf:"bytes,4,opt,name=max_visible_datasets,json=maxVisibleDatasets" json:"max_visible_datasets,omitempty"`
}

func (x *GlobalSettingsProto_Autofill) Reset() {
	*x = GlobalSettingsProto_Autofill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_Autofill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_Autofill) ProtoMessage() {}

func (x *GlobalSettingsProto_Autofill) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_Autofill.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_Autofill) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 4}
}

func (x *GlobalSettingsProto_Autofill) GetCompatModeAllowedPackages() *SettingProto {
	if x != nil {
		return x.CompatModeAllowedPackages
	}
	return nil
}

func (x *GlobalSettingsProto_Autofill) GetLoggingLevel() *SettingProto {
	if x != nil {
		return x.LoggingLevel
	}
	return nil
}

func (x *GlobalSettingsProto_Autofill) GetMaxPartitionsSize() *SettingProto {
	if x != nil {
		return x.MaxPartitionsSize
	}
	return nil
}

func (x *GlobalSettingsProto_Autofill) GetMaxVisibleDatasets() *SettingProto {
	if x != nil {
		return x.MaxVisibleDatasets
	}
	return nil
}

type GlobalSettingsProto_Backup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BackupAgentTimeoutParameters *SettingProto `protobuf:"bytes,1,opt,name=backup_agent_timeout_parameters,json=backupAgentTimeoutParameters" json:"backup_agent_timeout_parameters,omitempty"`
}

func (x *GlobalSettingsProto_Backup) Reset() {
	*x = GlobalSettingsProto_Backup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_Backup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_Backup) ProtoMessage() {}

func (x *GlobalSettingsProto_Backup) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_Backup.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_Backup) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 5}
}

func (x *GlobalSettingsProto_Backup) GetBackupAgentTimeoutParameters() *SettingProto {
	if x != nil {
		return x.BackupAgentTimeoutParameters
	}
	return nil
}

type GlobalSettingsProto_Battery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DischargeDurationThreshold   *SettingProto `protobuf:"bytes,1,opt,name=discharge_duration_threshold,json=dischargeDurationThreshold" json:"discharge_duration_threshold,omitempty"`
	DischargeThreshold           *SettingProto `protobuf:"bytes,2,opt,name=discharge_threshold,json=dischargeThreshold" json:"discharge_threshold,omitempty"`
	SaverConstants               *SettingProto `protobuf:"bytes,3,opt,name=saver_constants,json=saverConstants" json:"saver_constants,omitempty"`
	SaverDeviceSpecificConstants *SettingProto `protobuf:"bytes,4,opt,name=saver_device_specific_constants,json=saverDeviceSpecificConstants" json:"saver_device_specific_constants,omitempty"`
	StatsConstants               *SettingProto `protobuf:"bytes,5,opt,name=stats_constants,json=statsConstants" json:"stats_constants,omitempty"`
	TipConstants                 *SettingProto `protobuf:"bytes,6,opt,name=tip_constants,json=tipConstants" json:"tip_constants,omitempty"`
}

func (x *GlobalSettingsProto_Battery) Reset() {
	*x = GlobalSettingsProto_Battery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_Battery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_Battery) ProtoMessage() {}

func (x *GlobalSettingsProto_Battery) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_Battery.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_Battery) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 6}
}

func (x *GlobalSettingsProto_Battery) GetDischargeDurationThreshold() *SettingProto {
	if x != nil {
		return x.DischargeDurationThreshold
	}
	return nil
}

func (x *GlobalSettingsProto_Battery) GetDischargeThreshold() *SettingProto {
	if x != nil {
		return x.DischargeThreshold
	}
	return nil
}

func (x *GlobalSettingsProto_Battery) GetSaverConstants() *SettingProto {
	if x != nil {
		return x.SaverConstants
	}
	return nil
}

func (x *GlobalSettingsProto_Battery) GetSaverDeviceSpecificConstants() *SettingProto {
	if x != nil {
		return x.SaverDeviceSpecificConstants
	}
	return nil
}

func (x *GlobalSettingsProto_Battery) GetStatsConstants() *SettingProto {
	if x != nil {
		return x.StatsConstants
	}
	return nil
}

func (x *GlobalSettingsProto_Battery) GetTipConstants() *SettingProto {
	if x != nil {
		return x.TipConstants
	}
	return nil
}

type GlobalSettingsProto_BleScan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlwaysAvailable      *SettingProto `protobuf:"bytes,1,opt,name=always_available,json=alwaysAvailable" json:"always_available,omitempty"`
	LowPowerWindowMs     *SettingProto `protobuf:"bytes,2,opt,name=low_power_window_ms,json=lowPowerWindowMs" json:"low_power_window_ms,omitempty"`
	BalancedWindowMs     *SettingProto `protobuf:"bytes,3,opt,name=balanced_window_ms,json=balancedWindowMs" json:"balanced_window_ms,omitempty"`
	LowLatencyWindowMs   *SettingProto `protobuf:"bytes,4,opt,name=low_latency_window_ms,json=lowLatencyWindowMs" json:"low_latency_window_ms,omitempty"`
	LowPowerIntervalMs   *SettingProto `protobuf:"bytes,5,opt,name=low_power_interval_ms,json=lowPowerIntervalMs" json:"low_power_interval_ms,omitempty"`
	BalancedIntervalMs   *SettingProto `protobuf:"bytes,6,opt,name=balanced_interval_ms,json=balancedIntervalMs" json:"balanced_interval_ms,omitempty"`
	LowLatencyIntervalMs *SettingProto `protobuf:"bytes,7,opt,name=low_latency_interval_ms,json=lowLatencyIntervalMs" json:"low_latency_interval_ms,omitempty"`
	BackgroundMode       *SettingProto `protobuf:"bytes,8,opt,name=background_mode,json=backgroundMode" json:"background_mode,omitempty"`
}

func (x *GlobalSettingsProto_BleScan) Reset() {
	*x = GlobalSettingsProto_BleScan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_BleScan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_BleScan) ProtoMessage() {}

func (x *GlobalSettingsProto_BleScan) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_BleScan.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_BleScan) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 7}
}

func (x *GlobalSettingsProto_BleScan) GetAlwaysAvailable() *SettingProto {
	if x != nil {
		return x.AlwaysAvailable
	}
	return nil
}

func (x *GlobalSettingsProto_BleScan) GetLowPowerWindowMs() *SettingProto {
	if x != nil {
		return x.LowPowerWindowMs
	}
	return nil
}

func (x *GlobalSettingsProto_BleScan) GetBalancedWindowMs() *SettingProto {
	if x != nil {
		return x.BalancedWindowMs
	}
	return nil
}

func (x *GlobalSettingsProto_BleScan) GetLowLatencyWindowMs() *SettingProto {
	if x != nil {
		return x.LowLatencyWindowMs
	}
	return nil
}

func (x *GlobalSettingsProto_BleScan) GetLowPowerIntervalMs() *SettingProto {
	if x != nil {
		return x.LowPowerIntervalMs
	}
	return nil
}

func (x *GlobalSettingsProto_BleScan) GetBalancedIntervalMs() *SettingProto {
	if x != nil {
		return x.BalancedIntervalMs
	}
	return nil
}

func (x *GlobalSettingsProto_BleScan) GetLowLatencyIntervalMs() *SettingProto {
	if x != nil {
		return x.LowLatencyIntervalMs
	}
	return nil
}

func (x *GlobalSettingsProto_BleScan) GetBackgroundMode() *SettingProto {
	if x != nil {
		return x.BackgroundMode
	}
	return nil
}

type GlobalSettingsProto_Bluetooth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClassOfDevice              *SettingProto   `protobuf:"bytes,1,opt,name=class_of_device,json=classOfDevice" json:"class_of_device,omitempty"`
	DisabledProfiles           *SettingProto   `protobuf:"bytes,2,opt,name=disabled_profiles,json=disabledProfiles" json:"disabled_profiles,omitempty"`
	InteroperabilityList       *SettingProto   `protobuf:"bytes,3,opt,name=interoperability_list,json=interoperabilityList" json:"interoperability_list,omitempty"`
	On                         *SettingProto   `protobuf:"bytes,4,opt,name=on" json:"on,omitempty"`
	HeadsetPriorities          []*SettingProto `protobuf:"bytes,5,rep,name=headset_priorities,json=headsetPriorities" json:"headset_priorities,omitempty"`
	A2DpSinkPriorities         []*SettingProto `protobuf:"bytes,6,rep,name=a2dp_sink_priorities,json=a2dpSinkPriorities" json:"a2dp_sink_priorities,omitempty"`
	A2DpSrcPriorities          []*SettingProto `protobuf:"bytes,7,rep,name=a2dp_src_priorities,json=a2dpSrcPriorities" json:"a2dp_src_priorities,omitempty"`
	A2DpSupportsOptionalCodecs []*SettingProto `protobuf:"bytes,8,rep,name=a2dp_supports_optional_codecs,json=a2dpSupportsOptionalCodecs" json:"a2dp_supports_optional_codecs,omitempty"`
	A2DpOptionalCodecsEnabled  []*SettingProto `protobuf:"bytes,9,rep,name=a2dp_optional_codecs_enabled,json=a2dpOptionalCodecsEnabled" json:"a2dp_optional_codecs_enabled,omitempty"`
	InputDevicePriorities      []*SettingProto `protobuf:"bytes,10,rep,name=input_device_priorities,json=inputDevicePriorities" json:"input_device_priorities,omitempty"`
	MapPriorities              []*SettingProto `protobuf:"bytes,11,rep,name=map_priorities,json=mapPriorities" json:"map_priorities,omitempty"`
	MapClientPriorities        []*SettingProto `protobuf:"bytes,12,rep,name=map_client_priorities,json=mapClientPriorities" json:"map_client_priorities,omitempty"`
	PbapClientPriorities       []*SettingProto `protobuf:"bytes,13,rep,name=pbap_client_priorities,json=pbapClientPriorities" json:"pbap_client_priorities,omitempty"`
	SapPriorities              []*SettingProto `protobuf:"bytes,14,rep,name=sap_priorities,json=sapPriorities" json:"sap_priorities,omitempty"`
	PanPriorities              []*SettingProto `protobuf:"bytes,15,rep,name=pan_priorities,json=panPriorities" json:"pan_priorities,omitempty"`
	HearingAidPriorities       []*SettingProto `protobuf:"bytes,16,rep,name=hearing_aid_priorities,json=hearingAidPriorities" json:"hearing_aid_priorities,omitempty"`
}

func (x *GlobalSettingsProto_Bluetooth) Reset() {
	*x = GlobalSettingsProto_Bluetooth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_Bluetooth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_Bluetooth) ProtoMessage() {}

func (x *GlobalSettingsProto_Bluetooth) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_Bluetooth.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_Bluetooth) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 8}
}

func (x *GlobalSettingsProto_Bluetooth) GetClassOfDevice() *SettingProto {
	if x != nil {
		return x.ClassOfDevice
	}
	return nil
}

func (x *GlobalSettingsProto_Bluetooth) GetDisabledProfiles() *SettingProto {
	if x != nil {
		return x.DisabledProfiles
	}
	return nil
}

func (x *GlobalSettingsProto_Bluetooth) GetInteroperabilityList() *SettingProto {
	if x != nil {
		return x.InteroperabilityList
	}
	return nil
}

func (x *GlobalSettingsProto_Bluetooth) GetOn() *SettingProto {
	if x != nil {
		return x.On
	}
	return nil
}

func (x *GlobalSettingsProto_Bluetooth) GetHeadsetPriorities() []*SettingProto {
	if x != nil {
		return x.HeadsetPriorities
	}
	return nil
}

func (x *GlobalSettingsProto_Bluetooth) GetA2DpSinkPriorities() []*SettingProto {
	if x != nil {
		return x.A2DpSinkPriorities
	}
	return nil
}

func (x *GlobalSettingsProto_Bluetooth) GetA2DpSrcPriorities() []*SettingProto {
	if x != nil {
		return x.A2DpSrcPriorities
	}
	return nil
}

func (x *GlobalSettingsProto_Bluetooth) GetA2DpSupportsOptionalCodecs() []*SettingProto {
	if x != nil {
		return x.A2DpSupportsOptionalCodecs
	}
	return nil
}

func (x *GlobalSettingsProto_Bluetooth) GetA2DpOptionalCodecsEnabled() []*SettingProto {
	if x != nil {
		return x.A2DpOptionalCodecsEnabled
	}
	return nil
}

func (x *GlobalSettingsProto_Bluetooth) GetInputDevicePriorities() []*SettingProto {
	if x != nil {
		return x.InputDevicePriorities
	}
	return nil
}

func (x *GlobalSettingsProto_Bluetooth) GetMapPriorities() []*SettingProto {
	if x != nil {
		return x.MapPriorities
	}
	return nil
}

func (x *GlobalSettingsProto_Bluetooth) GetMapClientPriorities() []*SettingProto {
	if x != nil {
		return x.MapClientPriorities
	}
	return nil
}

func (x *GlobalSettingsProto_Bluetooth) GetPbapClientPriorities() []*SettingProto {
	if x != nil {
		return x.PbapClientPriorities
	}
	return nil
}

func (x *GlobalSettingsProto_Bluetooth) GetSapPriorities() []*SettingProto {
	if x != nil {
		return x.SapPriorities
	}
	return nil
}

func (x *GlobalSettingsProto_Bluetooth) GetPanPriorities() []*SettingProto {
	if x != nil {
		return x.PanPriorities
	}
	return nil
}

func (x *GlobalSettingsProto_Bluetooth) GetHearingAidPriorities() []*SettingProto {
	if x != nil {
		return x.HearingAidPriorities
	}
	return nil
}

type GlobalSettingsProto_CaptivePortal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode              *SettingProto `protobuf:"bytes,1,opt,name=mode" json:"mode,omitempty"`
	DetectionEnabled  *SettingProto `protobuf:"bytes,2,opt,name=detection_enabled,json=detectionEnabled" json:"detection_enabled,omitempty"`
	Server            *SettingProto `protobuf:"bytes,3,opt,name=server" json:"server,omitempty"`
	HttpsUrl          *SettingProto `protobuf:"bytes,4,opt,name=https_url,json=httpsUrl" json:"https_url,omitempty"`
	HttpUrl           *SettingProto `protobuf:"bytes,5,opt,name=http_url,json=httpUrl" json:"http_url,omitempty"`
	FallbackUrl       *SettingProto `protobuf:"bytes,6,opt,name=fallback_url,json=fallbackUrl" json:"fallback_url,omitempty"`
	OtherFallbackUrls *SettingProto `protobuf:"bytes,7,opt,name=other_fallback_urls,json=otherFallbackUrls" json:"other_fallback_urls,omitempty"`
	UseHttps          *SettingProto `protobuf:"bytes,8,opt,name=use_https,json=useHttps" json:"use_https,omitempty"`
	UserAgent         *SettingProto `protobuf:"bytes,9,opt,name=user_agent,json=userAgent" json:"user_agent,omitempty"`
}

func (x *GlobalSettingsProto_CaptivePortal) Reset() {
	*x = GlobalSettingsProto_CaptivePortal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_CaptivePortal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_CaptivePortal) ProtoMessage() {}

func (x *GlobalSettingsProto_CaptivePortal) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_CaptivePortal.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_CaptivePortal) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 9}
}

func (x *GlobalSettingsProto_CaptivePortal) GetMode() *SettingProto {
	if x != nil {
		return x.Mode
	}
	return nil
}

func (x *GlobalSettingsProto_CaptivePortal) GetDetectionEnabled() *SettingProto {
	if x != nil {
		return x.DetectionEnabled
	}
	return nil
}

func (x *GlobalSettingsProto_CaptivePortal) GetServer() *SettingProto {
	if x != nil {
		return x.Server
	}
	return nil
}

func (x *GlobalSettingsProto_CaptivePortal) GetHttpsUrl() *SettingProto {
	if x != nil {
		return x.HttpsUrl
	}
	return nil
}

func (x *GlobalSettingsProto_CaptivePortal) GetHttpUrl() *SettingProto {
	if x != nil {
		return x.HttpUrl
	}
	return nil
}

func (x *GlobalSettingsProto_CaptivePortal) GetFallbackUrl() *SettingProto {
	if x != nil {
		return x.FallbackUrl
	}
	return nil
}

func (x *GlobalSettingsProto_CaptivePortal) GetOtherFallbackUrls() *SettingProto {
	if x != nil {
		return x.OtherFallbackUrls
	}
	return nil
}

func (x *GlobalSettingsProto_CaptivePortal) GetUseHttps() *SettingProto {
	if x != nil {
		return x.UseHttps
	}
	return nil
}

func (x *GlobalSettingsProto_CaptivePortal) GetUserAgent() *SettingProto {
	if x != nil {
		return x.UserAgent
	}
	return nil
}

type GlobalSettingsProto_Carrier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of carrier app certificate mapped to carrier app package id which are whitelisted to
	// prompt the user for install when a SIM card with matching UICC carrier privilege rules is
	// inserted.
	AppWhitelist                             *SettingProto `protobuf:"bytes,1,opt,name=app_whitelist,json=appWhitelist" json:"app_whitelist,omitempty"`
	AppNames                                 *SettingProto `protobuf:"bytes,2,opt,name=app_names,json=appNames" json:"app_names,omitempty"`
	InstallCarrierAppNotificationPersistent  *SettingProto `protobuf:"bytes,3,opt,name=install_carrier_app_notification_persistent,json=installCarrierAppNotificationPersistent" json:"install_carrier_app_notification_persistent,omitempty"`
	InstallCarrierAppNotificationSleepMillis *SettingProto `protobuf:"bytes,4,opt,name=install_carrier_app_notification_sleep_millis,json=installCarrierAppNotificationSleepMillis" json:"install_carrier_app_notification_sleep_millis,omitempty"`
}

func (x *GlobalSettingsProto_Carrier) Reset() {
	*x = GlobalSettingsProto_Carrier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_Carrier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_Carrier) ProtoMessage() {}

func (x *GlobalSettingsProto_Carrier) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_Carrier.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_Carrier) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 10}
}

func (x *GlobalSettingsProto_Carrier) GetAppWhitelist() *SettingProto {
	if x != nil {
		return x.AppWhitelist
	}
	return nil
}

func (x *GlobalSettingsProto_Carrier) GetAppNames() *SettingProto {
	if x != nil {
		return x.AppNames
	}
	return nil
}

func (x *GlobalSettingsProto_Carrier) GetInstallCarrierAppNotificationPersistent() *SettingProto {
	if x != nil {
		return x.InstallCarrierAppNotificationPersistent
	}
	return nil
}

func (x *GlobalSettingsProto_Carrier) GetInstallCarrierAppNotificationSleepMillis() *SettingProto {
	if x != nil {
		return x.InstallCarrierAppNotificationSleepMillis
	}
	return nil
}

type GlobalSettingsProto_Cdma struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CellBroadcastSms *SettingProto `protobuf:"bytes,1,opt,name=cell_broadcast_sms,json=cellBroadcastSms" json:"cell_broadcast_sms,omitempty"`
	RoamingMode      *SettingProto `protobuf:"bytes,2,opt,name=roaming_mode,json=roamingMode" json:"roaming_mode,omitempty"`
	SubscriptionMode *SettingProto `protobuf:"bytes,3,opt,name=subscription_mode,json=subscriptionMode" json:"subscription_mode,omitempty"`
}

func (x *GlobalSettingsProto_Cdma) Reset() {
	*x = GlobalSettingsProto_Cdma{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_Cdma) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_Cdma) ProtoMessage() {}

func (x *GlobalSettingsProto_Cdma) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_Cdma.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_Cdma) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 11}
}

func (x *GlobalSettingsProto_Cdma) GetCellBroadcastSms() *SettingProto {
	if x != nil {
		return x.CellBroadcastSms
	}
	return nil
}

func (x *GlobalSettingsProto_Cdma) GetRoamingMode() *SettingProto {
	if x != nil {
		return x.RoamingMode
	}
	return nil
}

func (x *GlobalSettingsProto_Cdma) GetSubscriptionMode() *SettingProto {
	if x != nil {
		return x.SubscriptionMode
	}
	return nil
}

type GlobalSettingsProto_CertPin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateContentUrl  *SettingProto `protobuf:"bytes,1,opt,name=update_content_url,json=updateContentUrl" json:"update_content_url,omitempty"`
	UpdateMetadataUrl *SettingProto `protobuf:"bytes,2,opt,name=update_metadata_url,json=updateMetadataUrl" json:"update_metadata_url,omitempty"`
}

func (x *GlobalSettingsProto_CertPin) Reset() {
	*x = GlobalSettingsProto_CertPin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_CertPin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_CertPin) ProtoMessage() {}

func (x *GlobalSettingsProto_CertPin) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_CertPin.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_CertPin) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 12}
}

func (x *GlobalSettingsProto_CertPin) GetUpdateContentUrl() *SettingProto {
	if x != nil {
		return x.UpdateContentUrl
	}
	return nil
}

func (x *GlobalSettingsProto_CertPin) GetUpdateMetadataUrl() *SettingProto {
	if x != nil {
		return x.UpdateMetadataUrl
	}
	return nil
}

type GlobalSettingsProto_Connectivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetricsBufferSize         *SettingProto `protobuf:"bytes,1,opt,name=metrics_buffer_size,json=metricsBufferSize" json:"metrics_buffer_size,omitempty"`
	ChangeDelay               *SettingProto `protobuf:"bytes,2,opt,name=change_delay,json=changeDelay" json:"change_delay,omitempty"`
	SamplingIntervalInSeconds *SettingProto `protobuf:"bytes,3,opt,name=sampling_interval_in_seconds,json=samplingIntervalInSeconds" json:"sampling_interval_in_seconds,omitempty"`
}

func (x *GlobalSettingsProto_Connectivity) Reset() {
	*x = GlobalSettingsProto_Connectivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_Connectivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_Connectivity) ProtoMessage() {}

func (x *GlobalSettingsProto_Connectivity) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_Connectivity.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_Connectivity) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 13}
}

func (x *GlobalSettingsProto_Connectivity) GetMetricsBufferSize() *SettingProto {
	if x != nil {
		return x.MetricsBufferSize
	}
	return nil
}

func (x *GlobalSettingsProto_Connectivity) GetChangeDelay() *SettingProto {
	if x != nil {
		return x.ChangeDelay
	}
	return nil
}

func (x *GlobalSettingsProto_Connectivity) GetSamplingIntervalInSeconds() *SettingProto {
	if x != nil {
		return x.SamplingIntervalInSeconds
	}
	return nil
}

type GlobalSettingsProto_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityTimeoutMobile            *SettingProto `protobuf:"bytes,1,opt,name=activity_timeout_mobile,json=activityTimeoutMobile" json:"activity_timeout_mobile,omitempty"`
	ActivityTimeoutWifi              *SettingProto `protobuf:"bytes,2,opt,name=activity_timeout_wifi,json=activityTimeoutWifi" json:"activity_timeout_wifi,omitempty"`
	Roaming                          *SettingProto `protobuf:"bytes,3,opt,name=roaming" json:"roaming,omitempty"`
	StallAlarmNonAggressiveDelayInMs *SettingProto `protobuf:"bytes,4,opt,name=stall_alarm_non_aggressive_delay_in_ms,json=stallAlarmNonAggressiveDelayInMs" json:"stall_alarm_non_aggressive_delay_in_ms,omitempty"`
	StallAlarmAggressiveDelayInMs    *SettingProto `protobuf:"bytes,5,opt,name=stall_alarm_aggressive_delay_in_ms,json=stallAlarmAggressiveDelayInMs" json:"stall_alarm_aggressive_delay_in_ms,omitempty"`
}

func (x *GlobalSettingsProto_Data) Reset() {
	*x = GlobalSettingsProto_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_Data) ProtoMessage() {}

func (x *GlobalSettingsProto_Data) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_Data.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_Data) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 14}
}

func (x *GlobalSettingsProto_Data) GetActivityTimeoutMobile() *SettingProto {
	if x != nil {
		return x.ActivityTimeoutMobile
	}
	return nil
}

func (x *GlobalSettingsProto_Data) GetActivityTimeoutWifi() *SettingProto {
	if x != nil {
		return x.ActivityTimeoutWifi
	}
	return nil
}

func (x *GlobalSettingsProto_Data) GetRoaming() *SettingProto {
	if x != nil {
		return x.Roaming
	}
	return nil
}

func (x *GlobalSettingsProto_Data) GetStallAlarmNonAggressiveDelayInMs() *SettingProto {
	if x != nil {
		return x.StallAlarmNonAggressiveDelayInMs
	}
	return nil
}

func (x *GlobalSettingsProto_Data) GetStallAlarmAggressiveDelayInMs() *SettingProto {
	if x != nil {
		return x.StallAlarmAggressiveDelayInMs
	}
	return nil
}

type GlobalSettingsProto_Database struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DowngradeReason *SettingProto `protobuf:"bytes,1,opt,name=downgrade_reason,json=downgradeReason" json:"downgrade_reason,omitempty"`
	CreationBuildid *SettingProto `protobuf:"bytes,2,opt,name=creation_buildid,json=creationBuildid" json:"creation_buildid,omitempty"`
}

func (x *GlobalSettingsProto_Database) Reset() {
	*x = GlobalSettingsProto_Database{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_Database) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_Database) ProtoMessage() {}

func (x *GlobalSettingsProto_Database) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_Database.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_Database) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 15}
}

func (x *GlobalSettingsProto_Database) GetDowngradeReason() *SettingProto {
	if x != nil {
		return x.DowngradeReason
	}
	return nil
}

func (x *GlobalSettingsProto_Database) GetCreationBuildid() *SettingProto {
	if x != nil {
		return x.CreationBuildid
	}
	return nil
}

type GlobalSettingsProto_DateTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AutoTime     *SettingProto `protobuf:"bytes,1,opt,name=auto_time,json=autoTime" json:"auto_time,omitempty"`
	AutoTimeZone *SettingProto `protobuf:"bytes,2,opt,name=auto_time_zone,json=autoTimeZone" json:"auto_time_zone,omitempty"`
}

func (x *GlobalSettingsProto_DateTime) Reset() {
	*x = GlobalSettingsProto_DateTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_DateTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_DateTime) ProtoMessage() {}

func (x *GlobalSettingsProto_DateTime) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_DateTime.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_DateTime) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 16}
}

func (x *GlobalSettingsProto_DateTime) GetAutoTime() *SettingProto {
	if x != nil {
		return x.AutoTime
	}
	return nil
}

func (x *GlobalSettingsProto_DateTime) GetAutoTimeZone() *SettingProto {
	if x != nil {
		return x.AutoTimeZone
	}
	return nil
}

type GlobalSettingsProto_Debug struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of an application package to be debugged.
	App *SettingProto `protobuf:"bytes,1,opt,name=app" json:"app,omitempty"`
	// Whether views are allowed to save their attribute data.
	ViewAttributes *SettingProto `protobuf:"bytes,2,opt,name=view_attributes,json=viewAttributes" json:"view_attributes,omitempty"`
	// Which application package is allowed to save view attribute data.
	ViewAttributesApplicationPackage *SettingProto `protobuf:"bytes,3,opt,name=view_attributes_application_package,json=viewAttributesApplicationPackage" json:"view_attributes_application_package,omitempty"`
}

func (x *GlobalSettingsProto_Debug) Reset() {
	*x = GlobalSettingsProto_Debug{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_Debug) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_Debug) ProtoMessage() {}

func (x *GlobalSettingsProto_Debug) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_Debug.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_Debug) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 17}
}

func (x *GlobalSettingsProto_Debug) GetApp() *SettingProto {
	if x != nil {
		return x.App
	}
	return nil
}

func (x *GlobalSettingsProto_Debug) GetViewAttributes() *SettingProto {
	if x != nil {
		return x.ViewAttributes
	}
	return nil
}

func (x *GlobalSettingsProto_Debug) GetViewAttributesApplicationPackage() *SettingProto {
	if x != nil {
		return x.ViewAttributesApplicationPackage
	}
	return nil
}

type GlobalSettingsProto_Default struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstallLocation *SettingProto `protobuf:"bytes,1,opt,name=install_location,json=installLocation" json:"install_location,omitempty"`
	DnsServer       *SettingProto `protobuf:"bytes,2,opt,name=dns_server,json=dnsServer" json:"dns_server,omitempty"`
}

func (x *GlobalSettingsProto_Default) Reset() {
	*x = GlobalSettingsProto_Default{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_Default) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_Default) ProtoMessage() {}

func (x *GlobalSettingsProto_Default) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_Default.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_Default) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 18}
}

func (x *GlobalSettingsProto_Default) GetInstallLocation() *SettingProto {
	if x != nil {
		return x.InstallLocation
	}
	return nil
}

func (x *GlobalSettingsProto_Default) GetDnsServer() *SettingProto {
	if x != nil {
		return x.DnsServer
	}
	return nil
}

type GlobalSettingsProto_Development struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SettingsEnabled                    *SettingProto `protobuf:"bytes,1,opt,name=settings_enabled,json=settingsEnabled" json:"settings_enabled,omitempty"`
	ForceResizableActivities           *SettingProto `protobuf:"bytes,2,opt,name=force_resizable_activities,json=forceResizableActivities" json:"force_resizable_activities,omitempty"`
	EnableFreeformWindowsSupport       *SettingProto `protobuf:"bytes,3,opt,name=enable_freeform_windows_support,json=enableFreeformWindowsSupport" json:"enable_freeform_windows_support,omitempty"`
	ForceRtl                           *SettingProto `protobuf:"bytes,4,opt,name=force_rtl,json=forceRtl" json:"force_rtl,omitempty"`
	EmulateDisplayCutout               *SettingProto `protobuf:"bytes,5,opt,name=emulate_display_cutout,json=emulateDisplayCutout" json:"emulate_display_cutout,omitempty"`
	ForceDesktopModeOnExternalDisplays *SettingProto `protobuf:"bytes,6,opt,name=force_desktop_mode_on_external_displays,json=forceDesktopModeOnExternalDisplays" json:"force_desktop_mode_on_external_displays,omitempty"`
	// Deprecated, use enable_non_resizable_multi_window
	//
	// Deprecated: Marked as deprecated in frameworks/base/core/proto/android/providers/settings/global.proto.
	EnableSizecompatFreeform      *SettingProto `protobuf:"bytes,7,opt,name=enable_sizecompat_freeform,json=enableSizecompatFreeform" json:"enable_sizecompat_freeform,omitempty"`
	EnableNonResizableMultiWindow *SettingProto `protobuf:"bytes,8,opt,name=enable_non_resizable_multi_window,json=enableNonResizableMultiWindow" json:"enable_non_resizable_multi_window,omitempty"`
	DisableWindowBlurs            *SettingProto `protobuf:"bytes,9,opt,name=disable_window_blurs,json=disableWindowBlurs" json:"disable_window_blurs,omitempty"`
}

func (x *GlobalSettingsProto_Development) Reset() {
	*x = GlobalSettingsProto_Development{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_Development) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_Development) ProtoMessage() {}

func (x *GlobalSettingsProto_Development) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_Development.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_Development) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 19}
}

func (x *GlobalSettingsProto_Development) GetSettingsEnabled() *SettingProto {
	if x != nil {
		return x.SettingsEnabled
	}
	return nil
}

func (x *GlobalSettingsProto_Development) GetForceResizableActivities() *SettingProto {
	if x != nil {
		return x.ForceResizableActivities
	}
	return nil
}

func (x *GlobalSettingsProto_Development) GetEnableFreeformWindowsSupport() *SettingProto {
	if x != nil {
		return x.EnableFreeformWindowsSupport
	}
	return nil
}

func (x *GlobalSettingsProto_Development) GetForceRtl() *SettingProto {
	if x != nil {
		return x.ForceRtl
	}
	return nil
}

func (x *GlobalSettingsProto_Development) GetEmulateDisplayCutout() *SettingProto {
	if x != nil {
		return x.EmulateDisplayCutout
	}
	return nil
}

func (x *GlobalSettingsProto_Development) GetForceDesktopModeOnExternalDisplays() *SettingProto {
	if x != nil {
		return x.ForceDesktopModeOnExternalDisplays
	}
	return nil
}

// Deprecated: Marked as deprecated in frameworks/base/core/proto/android/providers/settings/global.proto.
func (x *GlobalSettingsProto_Development) GetEnableSizecompatFreeform() *SettingProto {
	if x != nil {
		return x.EnableSizecompatFreeform
	}
	return nil
}

func (x *GlobalSettingsProto_Development) GetEnableNonResizableMultiWindow() *SettingProto {
	if x != nil {
		return x.EnableNonResizableMultiWindow
	}
	return nil
}

func (x *GlobalSettingsProto_Development) GetDisableWindowBlurs() *SettingProto {
	if x != nil {
		return x.DisableWindowBlurs
	}
	return nil
}

type GlobalSettingsProto_Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                          *SettingProto `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Provisioned                   *SettingProto `protobuf:"bytes,2,opt,name=provisioned" json:"provisioned,omitempty"`
	ProvisioningMobileDataEnabled *SettingProto `protobuf:"bytes,3,opt,name=provisioning_mobile_data_enabled,json=provisioningMobileDataEnabled" json:"provisioning_mobile_data_enabled,omitempty"`
	PolicyConstants               *SettingProto `protobuf:"bytes,5,opt,name=policy_constants,json=policyConstants" json:"policy_constants,omitempty"`
	DemoMode                      *SettingProto `protobuf:"bytes,6,opt,name=demo_mode,json=demoMode" json:"demo_mode,omitempty"`
}

func (x *GlobalSettingsProto_Device) Reset() {
	*x = GlobalSettingsProto_Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_Device) ProtoMessage() {}

func (x *GlobalSettingsProto_Device) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_Device.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_Device) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 20}
}

func (x *GlobalSettingsProto_Device) GetName() *SettingProto {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *GlobalSettingsProto_Device) GetProvisioned() *SettingProto {
	if x != nil {
		return x.Provisioned
	}
	return nil
}

func (x *GlobalSettingsProto_Device) GetProvisioningMobileDataEnabled() *SettingProto {
	if x != nil {
		return x.ProvisioningMobileDataEnabled
	}
	return nil
}

func (x *GlobalSettingsProto_Device) GetPolicyConstants() *SettingProto {
	if x != nil {
		return x.PolicyConstants
	}
	return nil
}

func (x *GlobalSettingsProto_Device) GetDemoMode() *SettingProto {
	if x != nil {
		return x.DemoMode
	}
	return nil
}

type GlobalSettingsProto_Display struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SizeForced   *SettingProto `protobuf:"bytes,1,opt,name=size_forced,json=sizeForced" json:"size_forced,omitempty"`
	ScalingForce *SettingProto `protobuf:"bytes,2,opt,name=scaling_force,json=scalingForce" json:"scaling_force,omitempty"`
	// Flag to enable or disable display panel low power mode (lpm)
	// false -> Display panel power saving mode is disabled.
	// true  -> Display panel power saving mode is enabled.
	PanelLpm *SettingProto `protobuf:"bytes,3,opt,name=panel_lpm,json=panelLpm" json:"panel_lpm,omitempty"`
}

func (x *GlobalSettingsProto_Display) Reset() {
	*x = GlobalSettingsProto_Display{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_Display) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_Display) ProtoMessage() {}

func (x *GlobalSettingsProto_Display) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_Display.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_Display) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 21}
}

func (x *GlobalSettingsProto_Display) GetSizeForced() *SettingProto {
	if x != nil {
		return x.SizeForced
	}
	return nil
}

func (x *GlobalSettingsProto_Display) GetScalingForce() *SettingProto {
	if x != nil {
		return x.ScalingForce
	}
	return nil
}

func (x *GlobalSettingsProto_Display) GetPanelLpm() *SettingProto {
	if x != nil {
		return x.PanelLpm
	}
	return nil
}

type GlobalSettingsProto_DnsResolver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SampleValiditySeconds   *SettingProto `protobuf:"bytes,1,opt,name=sample_validity_seconds,json=sampleValiditySeconds" json:"sample_validity_seconds,omitempty"`
	SuccessThresholdPercent *SettingProto `protobuf:"bytes,2,opt,name=success_threshold_percent,json=successThresholdPercent" json:"success_threshold_percent,omitempty"`
	MinSamples              *SettingProto `protobuf:"bytes,3,opt,name=min_samples,json=minSamples" json:"min_samples,omitempty"`
	MaxSamples              *SettingProto `protobuf:"bytes,4,opt,name=max_samples,json=maxSamples" json:"max_samples,omitempty"`
}

func (x *GlobalSettingsProto_DnsResolver) Reset() {
	*x = GlobalSettingsProto_DnsResolver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_DnsResolver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_DnsResolver) ProtoMessage() {}

func (x *GlobalSettingsProto_DnsResolver) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_DnsResolver.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_DnsResolver) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 22}
}

func (x *GlobalSettingsProto_DnsResolver) GetSampleValiditySeconds() *SettingProto {
	if x != nil {
		return x.SampleValiditySeconds
	}
	return nil
}

func (x *GlobalSettingsProto_DnsResolver) GetSuccessThresholdPercent() *SettingProto {
	if x != nil {
		return x.SuccessThresholdPercent
	}
	return nil
}

func (x *GlobalSettingsProto_DnsResolver) GetMinSamples() *SettingProto {
	if x != nil {
		return x.MinSamples
	}
	return nil
}

func (x *GlobalSettingsProto_DnsResolver) GetMaxSamples() *SettingProto {
	if x != nil {
		return x.MaxSamples
	}
	return nil
}

type GlobalSettingsProto_Download struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxBytesOverMobile            *SettingProto `protobuf:"bytes,1,opt,name=max_bytes_over_mobile,json=maxBytesOverMobile" json:"max_bytes_over_mobile,omitempty"`
	RecommendedMaxBytesOverMobile *SettingProto `protobuf:"bytes,2,opt,name=recommended_max_bytes_over_mobile,json=recommendedMaxBytesOverMobile" json:"recommended_max_bytes_over_mobile,omitempty"`
}

func (x *GlobalSettingsProto_Download) Reset() {
	*x = GlobalSettingsProto_Download{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_Download) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_Download) ProtoMessage() {}

func (x *GlobalSettingsProto_Download) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_Download.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_Download) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 23}
}

func (x *GlobalSettingsProto_Download) GetMaxBytesOverMobile() *SettingProto {
	if x != nil {
		return x.MaxBytesOverMobile
	}
	return nil
}

func (x *GlobalSettingsProto_Download) GetRecommendedMaxBytesOverMobile() *SettingProto {
	if x != nil {
		return x.RecommendedMaxBytesOverMobile
	}
	return nil
}

type GlobalSettingsProto_Dropbox struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgeSeconds     *SettingProto   `protobuf:"bytes,1,opt,name=age_seconds,json=ageSeconds" json:"age_seconds,omitempty"`
	MaxFiles       *SettingProto   `protobuf:"bytes,2,opt,name=max_files,json=maxFiles" json:"max_files,omitempty"`
	QuotaKb        *SettingProto   `protobuf:"bytes,3,opt,name=quota_kb,json=quotaKb" json:"quota_kb,omitempty"`
	QuotaPercent   *SettingProto   `protobuf:"bytes,4,opt,name=quota_percent,json=quotaPercent" json:"quota_percent,omitempty"`
	ReservePercent *SettingProto   `protobuf:"bytes,5,opt,name=reserve_percent,json=reservePercent" json:"reserve_percent,omitempty"`
	Settings       []*SettingProto `protobuf:"bytes,6,rep,name=settings" json:"settings,omitempty"`
}

func (x *GlobalSettingsProto_Dropbox) Reset() {
	*x = GlobalSettingsProto_Dropbox{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_Dropbox) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_Dropbox) ProtoMessage() {}

func (x *GlobalSettingsProto_Dropbox) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_Dropbox.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_Dropbox) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 24}
}

func (x *GlobalSettingsProto_Dropbox) GetAgeSeconds() *SettingProto {
	if x != nil {
		return x.AgeSeconds
	}
	return nil
}

func (x *GlobalSettingsProto_Dropbox) GetMaxFiles() *SettingProto {
	if x != nil {
		return x.MaxFiles
	}
	return nil
}

func (x *GlobalSettingsProto_Dropbox) GetQuotaKb() *SettingProto {
	if x != nil {
		return x.QuotaKb
	}
	return nil
}

func (x *GlobalSettingsProto_Dropbox) GetQuotaPercent() *SettingProto {
	if x != nil {
		return x.QuotaPercent
	}
	return nil
}

func (x *GlobalSettingsProto_Dropbox) GetReservePercent() *SettingProto {
	if x != nil {
		return x.ReservePercent
	}
	return nil
}

func (x *GlobalSettingsProto_Dropbox) GetSettings() []*SettingProto {
	if x != nil {
		return x.Settings
	}
	return nil
}

type GlobalSettingsProto_DynamicPowerSavings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// When to auto disable interventions that were triggered due to
	// {@link #DYNAMIC_POWER_SAVINGS_ENABLED}. Value is a percentage indicating
	// a battery level.
	DisableThreshold *SettingProto `protobuf:"bytes,1,opt,name=disable_threshold,json=disableThreshold" json:"disable_threshold,omitempty"`
	// Whether dynamic power savings based behaviors should be running or not.
	Enabled *SettingProto `protobuf:"bytes,2,opt,name=enabled" json:"enabled,omitempty"`
}

func (x *GlobalSettingsProto_DynamicPowerSavings) Reset() {
	*x = GlobalSettingsProto_DynamicPowerSavings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_DynamicPowerSavings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_DynamicPowerSavings) ProtoMessage() {}

func (x *GlobalSettingsProto_DynamicPowerSavings) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_DynamicPowerSavings.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_DynamicPowerSavings) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 25}
}

func (x *GlobalSettingsProto_DynamicPowerSavings) GetDisableThreshold() *SettingProto {
	if x != nil {
		return x.DisableThreshold
	}
	return nil
}

func (x *GlobalSettingsProto_DynamicPowerSavings) GetEnabled() *SettingProto {
	if x != nil {
		return x.Enabled
	}
	return nil
}

type GlobalSettingsProto_Emergency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tone             *SettingProto `protobuf:"bytes,1,opt,name=tone" json:"tone,omitempty"`
	AffordanceNeeded *SettingProto `protobuf:"bytes,2,opt,name=affordance_needed,json=affordanceNeeded" json:"affordance_needed,omitempty"`
}

func (x *GlobalSettingsProto_Emergency) Reset() {
	*x = GlobalSettingsProto_Emergency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_Emergency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_Emergency) ProtoMessage() {}

func (x *GlobalSettingsProto_Emergency) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_Emergency.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_Emergency) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 26}
}

func (x *GlobalSettingsProto_Emergency) GetTone() *SettingProto {
	if x != nil {
		return x.Tone
	}
	return nil
}

func (x *GlobalSettingsProto_Emergency) GetAffordanceNeeded() *SettingProto {
	if x != nil {
		return x.AffordanceNeeded
	}
	return nil
}

type GlobalSettingsProto_Enable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessibilityGlobalGestureEnabled *SettingProto `protobuf:"bytes,1,opt,name=accessibility_global_gesture_enabled,json=accessibilityGlobalGestureEnabled" json:"accessibility_global_gesture_enabled,omitempty"`
	GpuDebugLayers                    *SettingProto `protobuf:"bytes,2,opt,name=gpu_debug_layers,json=gpuDebugLayers" json:"gpu_debug_layers,omitempty"`
	EphemeralFeature                  *SettingProto `protobuf:"bytes,3,opt,name=ephemeral_feature,json=ephemeralFeature" json:"ephemeral_feature,omitempty"`
	CellularOnBoot                    *SettingProto `protobuf:"bytes,4,opt,name=cellular_on_boot,json=cellularOnBoot" json:"cellular_on_boot,omitempty"`
	DiskstatsLogging                  *SettingProto `protobuf:"bytes,5,opt,name=diskstats_logging,json=diskstatsLogging" json:"diskstats_logging,omitempty"`
	CacheQuotaCalculation             *SettingProto `protobuf:"bytes,6,opt,name=cache_quota_calculation,json=cacheQuotaCalculation" json:"cache_quota_calculation,omitempty"`
	DeletionHelperNoThresholdToggle   *SettingProto `protobuf:"bytes,7,opt,name=deletion_helper_no_threshold_toggle,json=deletionHelperNoThresholdToggle" json:"deletion_helper_no_threshold_toggle,omitempty"`
	GnssRawMeasFullTracking           *SettingProto `protobuf:"bytes,8,opt,name=gnss_raw_meas_full_tracking,json=gnssRawMeasFullTracking" json:"gnss_raw_meas_full_tracking,omitempty"`
}

func (x *GlobalSettingsProto_Enable) Reset() {
	*x = GlobalSettingsProto_Enable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_Enable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_Enable) ProtoMessage() {}

func (x *GlobalSettingsProto_Enable) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_Enable.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_Enable) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 27}
}

func (x *GlobalSettingsProto_Enable) GetAccessibilityGlobalGestureEnabled() *SettingProto {
	if x != nil {
		return x.AccessibilityGlobalGestureEnabled
	}
	return nil
}

func (x *GlobalSettingsProto_Enable) GetGpuDebugLayers() *SettingProto {
	if x != nil {
		return x.GpuDebugLayers
	}
	return nil
}

func (x *GlobalSettingsProto_Enable) GetEphemeralFeature() *SettingProto {
	if x != nil {
		return x.EphemeralFeature
	}
	return nil
}

func (x *GlobalSettingsProto_Enable) GetCellularOnBoot() *SettingProto {
	if x != nil {
		return x.CellularOnBoot
	}
	return nil
}

func (x *GlobalSettingsProto_Enable) GetDiskstatsLogging() *SettingProto {
	if x != nil {
		return x.DiskstatsLogging
	}
	return nil
}

func (x *GlobalSettingsProto_Enable) GetCacheQuotaCalculation() *SettingProto {
	if x != nil {
		return x.CacheQuotaCalculation
	}
	return nil
}

func (x *GlobalSettingsProto_Enable) GetDeletionHelperNoThresholdToggle() *SettingProto {
	if x != nil {
		return x.DeletionHelperNoThresholdToggle
	}
	return nil
}

func (x *GlobalSettingsProto_Enable) GetGnssRawMeasFullTracking() *SettingProto {
	if x != nil {
		return x.GnssRawMeasFullTracking
	}
	return nil
}

type GlobalSettingsProto_Euicc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provisioned               *SettingProto `protobuf:"bytes,1,opt,name=provisioned" json:"provisioned,omitempty"`
	FactoryResetTimeoutMillis *SettingProto `protobuf:"bytes,2,opt,name=factory_reset_timeout_millis,json=factoryResetTimeoutMillis" json:"factory_reset_timeout_millis,omitempty"`
}

func (x *GlobalSettingsProto_Euicc) Reset() {
	*x = GlobalSettingsProto_Euicc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_Euicc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_Euicc) ProtoMessage() {}

func (x *GlobalSettingsProto_Euicc) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_Euicc.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_Euicc) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 28}
}

func (x *GlobalSettingsProto_Euicc) GetProvisioned() *SettingProto {
	if x != nil {
		return x.Provisioned
	}
	return nil
}

func (x *GlobalSettingsProto_Euicc) GetFactoryResetTimeoutMillis() *SettingProto {
	if x != nil {
		return x.FactoryResetTimeoutMillis
	}
	return nil
}

type GlobalSettingsProto_GlobalHttpProxy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host          *SettingProto `protobuf:"bytes,1,opt,name=host" json:"host,omitempty"`
	Port          *SettingProto `protobuf:"bytes,2,opt,name=port" json:"port,omitempty"`
	ExclusionList *SettingProto `protobuf:"bytes,3,opt,name=exclusion_list,json=exclusionList" json:"exclusion_list,omitempty"`
	Pac           *SettingProto `protobuf:"bytes,4,opt,name=pac" json:"pac,omitempty"`
	// Enables the UI setting to allow the user to specify the global HTTP proxy
	// and associated exclusion list. Simply "set_global_http_proxy".
	SettingUiEnabled *SettingProto `protobuf:"bytes,5,opt,name=setting_ui_enabled,json=settingUiEnabled" json:"setting_ui_enabled,omitempty"`
}

func (x *GlobalSettingsProto_GlobalHttpProxy) Reset() {
	*x = GlobalSettingsProto_GlobalHttpProxy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_GlobalHttpProxy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_GlobalHttpProxy) ProtoMessage() {}

func (x *GlobalSettingsProto_GlobalHttpProxy) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_GlobalHttpProxy.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_GlobalHttpProxy) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 29}
}

func (x *GlobalSettingsProto_GlobalHttpProxy) GetHost() *SettingProto {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *GlobalSettingsProto_GlobalHttpProxy) GetPort() *SettingProto {
	if x != nil {
		return x.Port
	}
	return nil
}

func (x *GlobalSettingsProto_GlobalHttpProxy) GetExclusionList() *SettingProto {
	if x != nil {
		return x.ExclusionList
	}
	return nil
}

func (x *GlobalSettingsProto_GlobalHttpProxy) GetPac() *SettingProto {
	if x != nil {
		return x.Pac
	}
	return nil
}

func (x *GlobalSettingsProto_GlobalHttpProxy) GetSettingUiEnabled() *SettingProto {
	if x != nil {
		return x.SettingUiEnabled
	}
	return nil
}

type GlobalSettingsProto_Gpu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// App allowed to load GPU debug layers.
	DebugApp *SettingProto `protobuf:"bytes,1,opt,name=debug_app,json=debugApp" json:"debug_app,omitempty"`
	// Ordered GPU debug layer list for Vulkan
	// i.e. <layer1>:<layer2>:...:<layerN>
	DebugLayers *SettingProto `protobuf:"bytes,2,opt,name=debug_layers,json=debugLayers" json:"debug_layers,omitempty"`
	// ANGLE - Force all PKGs to use ANGLE, regardless of any other settings
	AngleGlDriverAllAngle *SettingProto `protobuf:"bytes,3,opt,name=angle_gl_driver_all_angle,json=angleGlDriverAllAngle" json:"angle_gl_driver_all_angle,omitempty"`
	// ANGLE - List of PKGs that specify an OpenGL driver
	AngleGlDriverSelectionPkgs *SettingProto `protobuf:"bytes,4,opt,name=angle_gl_driver_selection_pkgs,json=angleGlDriverSelectionPkgs" json:"angle_gl_driver_selection_pkgs,omitempty"`
	// ANGLE - Corresponding OpenGL driver selection for the PKG
	AngleGlDriverSelectionValues *SettingProto `protobuf:"bytes,5,opt,name=angle_gl_driver_selection_values,json=angleGlDriverSelectionValues" json:"angle_gl_driver_selection_values,omitempty"`
	// App that can provide layer libraries.
	DebugLayerApp *SettingProto `protobuf:"bytes,6,opt,name=debug_layer_app,json=debugLayerApp" json:"debug_layer_app,omitempty"`
	// Ordered GPU debug layer list for GLES
	// i.e. <layer1>:<layer2>:...:<layerN>
	DebugLayersGles *SettingProto `protobuf:"bytes,7,opt,name=debug_layers_gles,json=debugLayersGles" json:"debug_layers_gles,omitempty"`
	// Updatable Driver - global preference for all Apps
	// 0 = Default
	// 1 = All Apps use updatable production driver
	// 2 = All apps use updatable prerelease driver
	// 3 = All Apps use system graphics driver
	UpdatableDriverAllApps *SettingProto `protobuf:"bytes,8,opt,name=updatable_driver_all_apps,json=updatableDriverAllApps" json:"updatable_driver_all_apps,omitempty"`
	// Updatable Driver - List of Apps selected to use updatable production driver
	// i.e. <pkg1>,<pkg2>,...,<pkgN>
	UpdatableDriverProductionOptInApps *SettingProto `protobuf:"bytes,9,opt,name=updatable_driver_production_opt_in_apps,json=updatableDriverProductionOptInApps" json:"updatable_driver_production_opt_in_apps,omitempty"`
	// Updatable Driver - List of Apps selected not to use updatable production driver
	// i.e. <pkg1>,<pkg2>,...,<pkgN>
	UpdatableDriverProductionOptOutApps *SettingProto `protobuf:"bytes,10,opt,name=updatable_driver_production_opt_out_apps,json=updatableDriverProductionOptOutApps" json:"updatable_driver_production_opt_out_apps,omitempty"`
	// Updatable Driver - List of Apps that are forbidden to use updatable production driver
	UpdatableDriverProductionDenylist *SettingProto `protobuf:"bytes,11,opt,name=updatable_driver_production_denylist,json=updatableDriverProductionDenylist" json:"updatable_driver_production_denylist,omitempty"`
	// Updatable Driver - List of Apps that are allowed to use updatable production driver
	UpdatableDriverProductionAllowlist *SettingProto `protobuf:"bytes,12,opt,name=updatable_driver_production_allowlist,json=updatableDriverProductionAllowlist" json:"updatable_driver_production_allowlist,omitempty"`
	// ANGLE - List of Apps that can check ANGLE rules
	AngleAllowlist *SettingProto `protobuf:"bytes,13,opt,name=angle_allowlist,json=angleAllowlist" json:"angle_allowlist,omitempty"`
	// Updatable Driver - List of denylists, each denylist is a denylist for
	// a specific updatable production driver version
	UpdatableDriverProductionDenylists *SettingProto `protobuf:"bytes,14,opt,name=updatable_driver_production_denylists,json=updatableDriverProductionDenylists" json:"updatable_driver_production_denylists,omitempty"`
	// ANGLE - Show a dialog box when ANGLE is selected for the currently running PKG
	ShowAngleInUseDialog *SettingProto `protobuf:"bytes,15,opt,name=show_angle_in_use_dialog,json=showAngleInUseDialog" json:"show_angle_in_use_dialog,omitempty"`
	// Updatable Driver - List of libraries in sphal accessible by updatable driver
	UpdatableDriverSphalLibraries *SettingProto `protobuf:"bytes,16,opt,name=updatable_driver_sphal_libraries,json=updatableDriverSphalLibraries" json:"updatable_driver_sphal_libraries,omitempty"`
	// ANGLE - External package containing ANGLE libraries
	AngleDebugPackage *SettingProto `protobuf:"bytes,17,opt,name=angle_debug_package,json=angleDebugPackage" json:"angle_debug_package,omitempty"`
	// Updatable Driver - List of Apps selected to use updatable prerelease driver
	// i.e. <pkg1>,<pkg2>,...,<pkgN>
	UpdatableDriverPrereleaseOptInApps *SettingProto `protobuf:"bytes,18,opt,name=updatable_driver_prerelease_opt_in_apps,json=updatableDriverPrereleaseOptInApps" json:"updatable_driver_prerelease_opt_in_apps,omitempty"`
	AngleEglFeatures                   *SettingProto `protobuf:"bytes,19,opt,name=angle_egl_features,json=angleEglFeatures" json:"angle_egl_features,omitempty"`
}

func (x *GlobalSettingsProto_Gpu) Reset() {
	*x = GlobalSettingsProto_Gpu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_Gpu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_Gpu) ProtoMessage() {}

func (x *GlobalSettingsProto_Gpu) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_Gpu.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_Gpu) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 30}
}

func (x *GlobalSettingsProto_Gpu) GetDebugApp() *SettingProto {
	if x != nil {
		return x.DebugApp
	}
	return nil
}

func (x *GlobalSettingsProto_Gpu) GetDebugLayers() *SettingProto {
	if x != nil {
		return x.DebugLayers
	}
	return nil
}

func (x *GlobalSettingsProto_Gpu) GetAngleGlDriverAllAngle() *SettingProto {
	if x != nil {
		return x.AngleGlDriverAllAngle
	}
	return nil
}

func (x *GlobalSettingsProto_Gpu) GetAngleGlDriverSelectionPkgs() *SettingProto {
	if x != nil {
		return x.AngleGlDriverSelectionPkgs
	}
	return nil
}

func (x *GlobalSettingsProto_Gpu) GetAngleGlDriverSelectionValues() *SettingProto {
	if x != nil {
		return x.AngleGlDriverSelectionValues
	}
	return nil
}

func (x *GlobalSettingsProto_Gpu) GetDebugLayerApp() *SettingProto {
	if x != nil {
		return x.DebugLayerApp
	}
	return nil
}

func (x *GlobalSettingsProto_Gpu) GetDebugLayersGles() *SettingProto {
	if x != nil {
		return x.DebugLayersGles
	}
	return nil
}

func (x *GlobalSettingsProto_Gpu) GetUpdatableDriverAllApps() *SettingProto {
	if x != nil {
		return x.UpdatableDriverAllApps
	}
	return nil
}

func (x *GlobalSettingsProto_Gpu) GetUpdatableDriverProductionOptInApps() *SettingProto {
	if x != nil {
		return x.UpdatableDriverProductionOptInApps
	}
	return nil
}

func (x *GlobalSettingsProto_Gpu) GetUpdatableDriverProductionOptOutApps() *SettingProto {
	if x != nil {
		return x.UpdatableDriverProductionOptOutApps
	}
	return nil
}

func (x *GlobalSettingsProto_Gpu) GetUpdatableDriverProductionDenylist() *SettingProto {
	if x != nil {
		return x.UpdatableDriverProductionDenylist
	}
	return nil
}

func (x *GlobalSettingsProto_Gpu) GetUpdatableDriverProductionAllowlist() *SettingProto {
	if x != nil {
		return x.UpdatableDriverProductionAllowlist
	}
	return nil
}

func (x *GlobalSettingsProto_Gpu) GetAngleAllowlist() *SettingProto {
	if x != nil {
		return x.AngleAllowlist
	}
	return nil
}

func (x *GlobalSettingsProto_Gpu) GetUpdatableDriverProductionDenylists() *SettingProto {
	if x != nil {
		return x.UpdatableDriverProductionDenylists
	}
	return nil
}

func (x *GlobalSettingsProto_Gpu) GetShowAngleInUseDialog() *SettingProto {
	if x != nil {
		return x.ShowAngleInUseDialog
	}
	return nil
}

func (x *GlobalSettingsProto_Gpu) GetUpdatableDriverSphalLibraries() *SettingProto {
	if x != nil {
		return x.UpdatableDriverSphalLibraries
	}
	return nil
}

func (x *GlobalSettingsProto_Gpu) GetAngleDebugPackage() *SettingProto {
	if x != nil {
		return x.AngleDebugPackage
	}
	return nil
}

func (x *GlobalSettingsProto_Gpu) GetUpdatableDriverPrereleaseOptInApps() *SettingProto {
	if x != nil {
		return x.UpdatableDriverPrereleaseOptInApps
	}
	return nil
}

func (x *GlobalSettingsProto_Gpu) GetAngleEglFeatures() *SettingProto {
	if x != nil {
		return x.AngleEglFeatures
	}
	return nil
}

type GlobalSettingsProto_Hdmi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ControlEnabled              *SettingProto `protobuf:"bytes,1,opt,name=control_enabled,json=controlEnabled" json:"control_enabled,omitempty"`
	SystemAudioControlEnabled   *SettingProto `protobuf:"bytes,2,opt,name=system_audio_control_enabled,json=systemAudioControlEnabled" json:"system_audio_control_enabled,omitempty"`
	ControlAutoWakeupEnabled    *SettingProto `protobuf:"bytes,3,opt,name=control_auto_wakeup_enabled,json=controlAutoWakeupEnabled" json:"control_auto_wakeup_enabled,omitempty"`
	ControlAutoDeviceOffEnabled *SettingProto `protobuf:"bytes,4,opt,name=control_auto_device_off_enabled,json=controlAutoDeviceOffEnabled" json:"control_auto_device_off_enabled,omitempty"`
}

func (x *GlobalSettingsProto_Hdmi) Reset() {
	*x = GlobalSettingsProto_Hdmi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_Hdmi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_Hdmi) ProtoMessage() {}

func (x *GlobalSettingsProto_Hdmi) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_Hdmi.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_Hdmi) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 31}
}

func (x *GlobalSettingsProto_Hdmi) GetControlEnabled() *SettingProto {
	if x != nil {
		return x.ControlEnabled
	}
	return nil
}

func (x *GlobalSettingsProto_Hdmi) GetSystemAudioControlEnabled() *SettingProto {
	if x != nil {
		return x.SystemAudioControlEnabled
	}
	return nil
}

func (x *GlobalSettingsProto_Hdmi) GetControlAutoWakeupEnabled() *SettingProto {
	if x != nil {
		return x.ControlAutoWakeupEnabled
	}
	return nil
}

func (x *GlobalSettingsProto_Hdmi) GetControlAutoDeviceOffEnabled() *SettingProto {
	if x != nil {
		return x.ControlAutoDeviceOffEnabled
	}
	return nil
}

type GlobalSettingsProto_InetCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DebounceUpDelay   *SettingProto `protobuf:"bytes,1,opt,name=debounce_up_delay,json=debounceUpDelay" json:"debounce_up_delay,omitempty"`
	DebounceDownDelay *SettingProto `protobuf:"bytes,2,opt,name=debounce_down_delay,json=debounceDownDelay" json:"debounce_down_delay,omitempty"`
}

func (x *GlobalSettingsProto_InetCondition) Reset() {
	*x = GlobalSettingsProto_InetCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_InetCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_InetCondition) ProtoMessage() {}

func (x *GlobalSettingsProto_InetCondition) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_InetCondition.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_InetCondition) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 32}
}

func (x *GlobalSettingsProto_InetCondition) GetDebounceUpDelay() *SettingProto {
	if x != nil {
		return x.DebounceUpDelay
	}
	return nil
}

func (x *GlobalSettingsProto_InetCondition) GetDebounceDownDelay() *SettingProto {
	if x != nil {
		return x.DebounceDownDelay
	}
	return nil
}

type GlobalSettingsProto_InstantApp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DexoptEnabled               *SettingProto `protobuf:"bytes,1,opt,name=dexopt_enabled,json=dexoptEnabled" json:"dexopt_enabled,omitempty"`
	EphemeralCookieMaxSizeBytes *SettingProto `protobuf:"bytes,2,opt,name=ephemeral_cookie_max_size_bytes,json=ephemeralCookieMaxSizeBytes" json:"ephemeral_cookie_max_size_bytes,omitempty"`
	InstalledMinCachePeriod     *SettingProto `protobuf:"bytes,3,opt,name=installed_min_cache_period,json=installedMinCachePeriod" json:"installed_min_cache_period,omitempty"`
	InstalledMaxCachePeriod     *SettingProto `protobuf:"bytes,4,opt,name=installed_max_cache_period,json=installedMaxCachePeriod" json:"installed_max_cache_period,omitempty"`
	UninstalledMinCachePeriod   *SettingProto `protobuf:"bytes,5,opt,name=uninstalled_min_cache_period,json=uninstalledMinCachePeriod" json:"uninstalled_min_cache_period,omitempty"`
	UninstalledMaxCachePeriod   *SettingProto `protobuf:"bytes,6,opt,name=uninstalled_max_cache_period,json=uninstalledMaxCachePeriod" json:"uninstalled_max_cache_period,omitempty"`
}

func (x *GlobalSettingsProto_InstantApp) Reset() {
	*x = GlobalSettingsProto_InstantApp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_InstantApp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_InstantApp) ProtoMessage() {}

func (x *GlobalSettingsProto_InstantApp) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_InstantApp.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_InstantApp) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 33}
}

func (x *GlobalSettingsProto_InstantApp) GetDexoptEnabled() *SettingProto {
	if x != nil {
		return x.DexoptEnabled
	}
	return nil
}

func (x *GlobalSettingsProto_InstantApp) GetEphemeralCookieMaxSizeBytes() *SettingProto {
	if x != nil {
		return x.EphemeralCookieMaxSizeBytes
	}
	return nil
}

func (x *GlobalSettingsProto_InstantApp) GetInstalledMinCachePeriod() *SettingProto {
	if x != nil {
		return x.InstalledMinCachePeriod
	}
	return nil
}

func (x *GlobalSettingsProto_InstantApp) GetInstalledMaxCachePeriod() *SettingProto {
	if x != nil {
		return x.InstalledMaxCachePeriod
	}
	return nil
}

func (x *GlobalSettingsProto_InstantApp) GetUninstalledMinCachePeriod() *SettingProto {
	if x != nil {
		return x.UninstalledMinCachePeriod
	}
	return nil
}

func (x *GlobalSettingsProto_InstantApp) GetUninstalledMaxCachePeriod() *SettingProto {
	if x != nil {
		return x.UninstalledMaxCachePeriod
	}
	return nil
}

type GlobalSettingsProto_IntentFirewall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateContentUrl  *SettingProto `protobuf:"bytes,1,opt,name=update_content_url,json=updateContentUrl" json:"update_content_url,omitempty"`
	UpdateMetadataUrl *SettingProto `protobuf:"bytes,2,opt,name=update_metadata_url,json=updateMetadataUrl" json:"update_metadata_url,omitempty"`
}

func (x *GlobalSettingsProto_IntentFirewall) Reset() {
	*x = GlobalSettingsProto_IntentFirewall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_IntentFirewall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_IntentFirewall) ProtoMessage() {}

func (x *GlobalSettingsProto_IntentFirewall) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_IntentFirewall.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_IntentFirewall) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 34}
}

func (x *GlobalSettingsProto_IntentFirewall) GetUpdateContentUrl() *SettingProto {
	if x != nil {
		return x.UpdateContentUrl
	}
	return nil
}

func (x *GlobalSettingsProto_IntentFirewall) GetUpdateMetadataUrl() *SettingProto {
	if x != nil {
		return x.UpdateMetadataUrl
	}
	return nil
}

type GlobalSettingsProto_LangId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateContentUrl  *SettingProto `protobuf:"bytes,1,opt,name=update_content_url,json=updateContentUrl" json:"update_content_url,omitempty"`
	UpdateMetadataUrl *SettingProto `protobuf:"bytes,2,opt,name=update_metadata_url,json=updateMetadataUrl" json:"update_metadata_url,omitempty"`
}

func (x *GlobalSettingsProto_LangId) Reset() {
	*x = GlobalSettingsProto_LangId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_LangId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_LangId) ProtoMessage() {}

func (x *GlobalSettingsProto_LangId) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_LangId.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_LangId) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 35}
}

func (x *GlobalSettingsProto_LangId) GetUpdateContentUrl() *SettingProto {
	if x != nil {
		return x.UpdateContentUrl
	}
	return nil
}

func (x *GlobalSettingsProto_LangId) GetUpdateMetadataUrl() *SettingProto {
	if x != nil {
		return x.UpdateMetadataUrl
	}
	return nil
}

type GlobalSettingsProto_Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BackgroundThrottleIntervalMs               *SettingProto `protobuf:"bytes,1,opt,name=background_throttle_interval_ms,json=backgroundThrottleIntervalMs" json:"background_throttle_interval_ms,omitempty"`
	BackgroundThrottleProximityAlertIntervalMs *SettingProto `protobuf:"bytes,2,opt,name=background_throttle_proximity_alert_interval_ms,json=backgroundThrottleProximityAlertIntervalMs" json:"background_throttle_proximity_alert_interval_ms,omitempty"`
	// Packages that are whitelisted for background throttling (throttling will
	// not be applied).
	BackgroundThrottlePackageWhitelist *SettingProto `protobuf:"bytes,3,opt,name=background_throttle_package_whitelist,json=backgroundThrottlePackageWhitelist" json:"background_throttle_package_whitelist,omitempty"`
	SettingsLinkToPermissionsEnabled   *SettingProto `protobuf:"bytes,4,opt,name=settings_link_to_permissions_enabled,json=settingsLinkToPermissionsEnabled" json:"settings_link_to_permissions_enabled,omitempty"`
	// If set to 1, {@link Secure#LOCATION_MODE} will be set to {@link
	// Secure#LOCATION_MODE_OFF} temporarily for all users.
	GlobalKillSwitch                     *SettingProto `protobuf:"bytes,5,opt,name=global_kill_switch,json=globalKillSwitch" json:"global_kill_switch,omitempty"`
	GnssSatelliteBlocklist               *SettingProto `protobuf:"bytes,6,opt,name=gnss_satellite_blocklist,json=gnssSatelliteBlocklist" json:"gnss_satellite_blocklist,omitempty"`
	GnssHalLocationRequestDurationMillis *SettingProto `protobuf:"bytes,7,opt,name=gnss_hal_location_request_duration_millis,json=gnssHalLocationRequestDurationMillis" json:"gnss_hal_location_request_duration_millis,omitempty"`
	// Packages that are whitelisted for ignoring location settings (during emergencies)
	IgnoreSettingsPackageWhitelist *SettingProto `protobuf:"bytes,8,opt,name=ignore_settings_package_whitelist,json=ignoreSettingsPackageWhitelist" json:"ignore_settings_package_whitelist,omitempty"`
}

func (x *GlobalSettingsProto_Location) Reset() {
	*x = GlobalSettingsProto_Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_Location) ProtoMessage() {}

func (x *GlobalSettingsProto_Location) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_Location.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_Location) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 36}
}

func (x *GlobalSettingsProto_Location) GetBackgroundThrottleIntervalMs() *SettingProto {
	if x != nil {
		return x.BackgroundThrottleIntervalMs
	}
	return nil
}

func (x *GlobalSettingsProto_Location) GetBackgroundThrottleProximityAlertIntervalMs() *SettingProto {
	if x != nil {
		return x.BackgroundThrottleProximityAlertIntervalMs
	}
	return nil
}

func (x *GlobalSettingsProto_Location) GetBackgroundThrottlePackageWhitelist() *SettingProto {
	if x != nil {
		return x.BackgroundThrottlePackageWhitelist
	}
	return nil
}

func (x *GlobalSettingsProto_Location) GetSettingsLinkToPermissionsEnabled() *SettingProto {
	if x != nil {
		return x.SettingsLinkToPermissionsEnabled
	}
	return nil
}

func (x *GlobalSettingsProto_Location) GetGlobalKillSwitch() *SettingProto {
	if x != nil {
		return x.GlobalKillSwitch
	}
	return nil
}

func (x *GlobalSettingsProto_Location) GetGnssSatelliteBlocklist() *SettingProto {
	if x != nil {
		return x.GnssSatelliteBlocklist
	}
	return nil
}

func (x *GlobalSettingsProto_Location) GetGnssHalLocationRequestDurationMillis() *SettingProto {
	if x != nil {
		return x.GnssHalLocationRequestDurationMillis
	}
	return nil
}

func (x *GlobalSettingsProto_Location) GetIgnoreSettingsPackageWhitelist() *SettingProto {
	if x != nil {
		return x.IgnoreSettingsPackageWhitelist
	}
	return nil
}

type GlobalSettingsProto_LowPowerMode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Simply "low_power_mode" in code.
	Enabled *SettingProto `protobuf:"bytes,1,opt,name=enabled" json:"enabled,omitempty"`
	// Battery level [1-100] at which low power mode automatically turns on. If
	// 0, it will not automatically turn on.
	TriggerLevel *SettingProto `protobuf:"bytes,2,opt,name=trigger_level,json=triggerLevel" json:"trigger_level,omitempty"`
	// The max value for {@link #LOW_POWER_MODE_TRIGGER_LEVEL}. If this setting
	// is not set or the value is 0, the default max will be used.
	TriggerLevelMax *SettingProto `protobuf:"bytes,3,opt,name=trigger_level_max,json=triggerLevelMax" json:"trigger_level_max,omitempty"`
	// Whether automatic battery saver mode is controlled via percentage,
	// {@link #DYNAMIC_POWER_SAVINGS_ENABLED} or disabled.
	AutomaticPowerSaverMode *SettingProto `protobuf:"bytes,4,opt,name=automatic_power_saver_mode,json=automaticPowerSaverMode" json:"automatic_power_saver_mode,omitempty"`
	// If 1, battery saver (low_power_mode) will be re-activated after the device is
	// unplugged from a charger or rebooted.
	StickyEnabled *SettingProto `protobuf:"bytes,5,opt,name=sticky_enabled,json=stickyEnabled" json:"sticky_enabled,omitempty"`
	// Whether sticky battery saver should be deactivated once the battery level has reached the
	// threshold specified by sticky_disable_level.
	StickyAutoDisableEnabled *SettingProto `protobuf:"bytes,6,opt,name=sticky_auto_disable_enabled,json=stickyAutoDisableEnabled" json:"sticky_auto_disable_enabled,omitempty"`
	// When a device is unplugged from a changer (or is rebooted), do not re-activate battery
	// saver even if {@link #LOW_POWER_MODE_STICKY} is 1, if the battery level is equal to or
	// above this threshold.
	StickyAutoDisableLevel *SettingProto `protobuf:"bytes,7,opt,name=sticky_auto_disable_level,json=stickyAutoDisableLevel" json:"sticky_auto_disable_level,omitempty"`
}

func (x *GlobalSettingsProto_LowPowerMode) Reset() {
	*x = GlobalSettingsProto_LowPowerMode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_LowPowerMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_LowPowerMode) ProtoMessage() {}

func (x *GlobalSettingsProto_LowPowerMode) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_LowPowerMode.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_LowPowerMode) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 37}
}

func (x *GlobalSettingsProto_LowPowerMode) GetEnabled() *SettingProto {
	if x != nil {
		return x.Enabled
	}
	return nil
}

func (x *GlobalSettingsProto_LowPowerMode) GetTriggerLevel() *SettingProto {
	if x != nil {
		return x.TriggerLevel
	}
	return nil
}

func (x *GlobalSettingsProto_LowPowerMode) GetTriggerLevelMax() *SettingProto {
	if x != nil {
		return x.TriggerLevelMax
	}
	return nil
}

func (x *GlobalSettingsProto_LowPowerMode) GetAutomaticPowerSaverMode() *SettingProto {
	if x != nil {
		return x.AutomaticPowerSaverMode
	}
	return nil
}

func (x *GlobalSettingsProto_LowPowerMode) GetStickyEnabled() *SettingProto {
	if x != nil {
		return x.StickyEnabled
	}
	return nil
}

func (x *GlobalSettingsProto_LowPowerMode) GetStickyAutoDisableEnabled() *SettingProto {
	if x != nil {
		return x.StickyAutoDisableEnabled
	}
	return nil
}

func (x *GlobalSettingsProto_LowPowerMode) GetStickyAutoDisableLevel() *SettingProto {
	if x != nil {
		return x.StickyAutoDisableLevel
	}
	return nil
}

type GlobalSettingsProto_ManagedDeviceProvisioning struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ManagedProvisioningDeferProvisioningToRoleHolder *SettingProto `protobuf:"bytes,1,opt,name=managed_provisioning_defer_provisioning_to_role_holder,json=managedProvisioningDeferProvisioningToRoleHolder" json:"managed_provisioning_defer_provisioning_to_role_holder,omitempty"`
}

func (x *GlobalSettingsProto_ManagedDeviceProvisioning) Reset() {
	*x = GlobalSettingsProto_ManagedDeviceProvisioning{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_ManagedDeviceProvisioning) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_ManagedDeviceProvisioning) ProtoMessage() {}

func (x *GlobalSettingsProto_ManagedDeviceProvisioning) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_ManagedDeviceProvisioning.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_ManagedDeviceProvisioning) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 38}
}

func (x *GlobalSettingsProto_ManagedDeviceProvisioning) GetManagedProvisioningDeferProvisioningToRoleHolder() *SettingProto {
	if x != nil {
		return x.ManagedProvisioningDeferProvisioningToRoleHolder
	}
	return nil
}

type GlobalSettingsProto_Mhl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InputSwitchingEnabled *SettingProto `protobuf:"bytes,1,opt,name=input_switching_enabled,json=inputSwitchingEnabled" json:"input_switching_enabled,omitempty"`
	PowerChargeEnabled    *SettingProto `protobuf:"bytes,2,opt,name=power_charge_enabled,json=powerChargeEnabled" json:"power_charge_enabled,omitempty"`
}

func (x *GlobalSettingsProto_Mhl) Reset() {
	*x = GlobalSettingsProto_Mhl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_Mhl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_Mhl) ProtoMessage() {}

func (x *GlobalSettingsProto_Mhl) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_Mhl.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_Mhl) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 39}
}

func (x *GlobalSettingsProto_Mhl) GetInputSwitchingEnabled() *SettingProto {
	if x != nil {
		return x.InputSwitchingEnabled
	}
	return nil
}

func (x *GlobalSettingsProto_Mhl) GetPowerChargeEnabled() *SettingProto {
	if x != nil {
		return x.PowerChargeEnabled
	}
	return nil
}

type GlobalSettingsProto_MobileData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Whether mobile data connections are allowed by the user. Simply
	// "mobile_data" in code.
	Allowed *SettingProto `protobuf:"bytes,1,opt,name=allowed" json:"allowed,omitempty"`
	// Whether the mobile data connection should remain active even when higher
	// priority networks like WiFi are active, to help make network switching
	// faster.
	AlwaysOn *SettingProto `protobuf:"bytes,2,opt,name=always_on,json=alwaysOn" json:"always_on,omitempty"`
}

func (x *GlobalSettingsProto_MobileData) Reset() {
	*x = GlobalSettingsProto_MobileData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_MobileData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_MobileData) ProtoMessage() {}

func (x *GlobalSettingsProto_MobileData) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_MobileData.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_MobileData) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 40}
}

func (x *GlobalSettingsProto_MobileData) GetAllowed() *SettingProto {
	if x != nil {
		return x.Allowed
	}
	return nil
}

func (x *GlobalSettingsProto_MobileData) GetAlwaysOn() *SettingProto {
	if x != nil {
		return x.AlwaysOn
	}
	return nil
}

type GlobalSettingsProto_MultiSim struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Subscription to be used for voice call on a multi sim device. The
	// supported values are 0 = SUB1, 1 = SUB2 and etc.
	VoiceCallSubscription *SettingProto `protobuf:"bytes,1,opt,name=voice_call_subscription,json=voiceCallSubscription" json:"voice_call_subscription,omitempty"`
	VoicePrompt           *SettingProto `protobuf:"bytes,2,opt,name=voice_prompt,json=voicePrompt" json:"voice_prompt,omitempty"`
	DataCallSubscription  *SettingProto `protobuf:"bytes,3,opt,name=data_call_subscription,json=dataCallSubscription" json:"data_call_subscription,omitempty"`
	SmsSubscription       *SettingProto `protobuf:"bytes,4,opt,name=sms_subscription,json=smsSubscription" json:"sms_subscription,omitempty"`
	SmsPrompt             *SettingProto `protobuf:"bytes,5,opt,name=sms_prompt,json=smsPrompt" json:"sms_prompt,omitempty"`
}

func (x *GlobalSettingsProto_MultiSim) Reset() {
	*x = GlobalSettingsProto_MultiSim{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_MultiSim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_MultiSim) ProtoMessage() {}

func (x *GlobalSettingsProto_MultiSim) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_MultiSim.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_MultiSim) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 41}
}

func (x *GlobalSettingsProto_MultiSim) GetVoiceCallSubscription() *SettingProto {
	if x != nil {
		return x.VoiceCallSubscription
	}
	return nil
}

func (x *GlobalSettingsProto_MultiSim) GetVoicePrompt() *SettingProto {
	if x != nil {
		return x.VoicePrompt
	}
	return nil
}

func (x *GlobalSettingsProto_MultiSim) GetDataCallSubscription() *SettingProto {
	if x != nil {
		return x.DataCallSubscription
	}
	return nil
}

func (x *GlobalSettingsProto_MultiSim) GetSmsSubscription() *SettingProto {
	if x != nil {
		return x.SmsSubscription
	}
	return nil
}

func (x *GlobalSettingsProto_MultiSim) GetSmsPrompt() *SettingProto {
	if x != nil {
		return x.SmsPrompt
	}
	return nil
}

type GlobalSettingsProto_Netstats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled              *SettingProto `protobuf:"bytes,1,opt,name=enabled" json:"enabled,omitempty"`
	PollInterval         *SettingProto `protobuf:"bytes,2,opt,name=poll_interval,json=pollInterval" json:"poll_interval,omitempty"`
	TimeCacheMaxAge      *SettingProto `protobuf:"bytes,3,opt,name=time_cache_max_age,json=timeCacheMaxAge" json:"time_cache_max_age,omitempty"`
	GlobalAlertBytes     *SettingProto `protobuf:"bytes,4,opt,name=global_alert_bytes,json=globalAlertBytes" json:"global_alert_bytes,omitempty"`
	SampleEnabled        *SettingProto `protobuf:"bytes,5,opt,name=sample_enabled,json=sampleEnabled" json:"sample_enabled,omitempty"`
	AugmentEnabled       *SettingProto `protobuf:"bytes,6,opt,name=augment_enabled,json=augmentEnabled" json:"augment_enabled,omitempty"`
	DevBucketDuration    *SettingProto `protobuf:"bytes,7,opt,name=dev_bucket_duration,json=devBucketDuration" json:"dev_bucket_duration,omitempty"`
	DevPersistBytes      *SettingProto `protobuf:"bytes,8,opt,name=dev_persist_bytes,json=devPersistBytes" json:"dev_persist_bytes,omitempty"`
	DevRotateAge         *SettingProto `protobuf:"bytes,9,opt,name=dev_rotate_age,json=devRotateAge" json:"dev_rotate_age,omitempty"`
	DevDeleteAge         *SettingProto `protobuf:"bytes,10,opt,name=dev_delete_age,json=devDeleteAge" json:"dev_delete_age,omitempty"`
	UidBucketDuration    *SettingProto `protobuf:"bytes,11,opt,name=uid_bucket_duration,json=uidBucketDuration" json:"uid_bucket_duration,omitempty"`
	UidPersistBytes      *SettingProto `protobuf:"bytes,12,opt,name=uid_persist_bytes,json=uidPersistBytes" json:"uid_persist_bytes,omitempty"`
	UidRotateAge         *SettingProto `protobuf:"bytes,13,opt,name=uid_rotate_age,json=uidRotateAge" json:"uid_rotate_age,omitempty"`
	UidDeleteAge         *SettingProto `protobuf:"bytes,14,opt,name=uid_delete_age,json=uidDeleteAge" json:"uid_delete_age,omitempty"`
	UidTagBucketDuration *SettingProto `protobuf:"bytes,15,opt,name=uid_tag_bucket_duration,json=uidTagBucketDuration" json:"uid_tag_bucket_duration,omitempty"`
	UidTagPersistBytes   *SettingProto `protobuf:"bytes,16,opt,name=uid_tag_persist_bytes,json=uidTagPersistBytes" json:"uid_tag_persist_bytes,omitempty"`
	UidTagRotateAge      *SettingProto `protobuf:"bytes,17,opt,name=uid_tag_rotate_age,json=uidTagRotateAge" json:"uid_tag_rotate_age,omitempty"`
	UidTagDeleteAge      *SettingProto `protobuf:"bytes,18,opt,name=uid_tag_delete_age,json=uidTagDeleteAge" json:"uid_tag_delete_age,omitempty"`
}

func (x *GlobalSettingsProto_Netstats) Reset() {
	*x = GlobalSettingsProto_Netstats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_Netstats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_Netstats) ProtoMessage() {}

func (x *GlobalSettingsProto_Netstats) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_Netstats.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_Netstats) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 42}
}

func (x *GlobalSettingsProto_Netstats) GetEnabled() *SettingProto {
	if x != nil {
		return x.Enabled
	}
	return nil
}

func (x *GlobalSettingsProto_Netstats) GetPollInterval() *SettingProto {
	if x != nil {
		return x.PollInterval
	}
	return nil
}

func (x *GlobalSettingsProto_Netstats) GetTimeCacheMaxAge() *SettingProto {
	if x != nil {
		return x.TimeCacheMaxAge
	}
	return nil
}

func (x *GlobalSettingsProto_Netstats) GetGlobalAlertBytes() *SettingProto {
	if x != nil {
		return x.GlobalAlertBytes
	}
	return nil
}

func (x *GlobalSettingsProto_Netstats) GetSampleEnabled() *SettingProto {
	if x != nil {
		return x.SampleEnabled
	}
	return nil
}

func (x *GlobalSettingsProto_Netstats) GetAugmentEnabled() *SettingProto {
	if x != nil {
		return x.AugmentEnabled
	}
	return nil
}

func (x *GlobalSettingsProto_Netstats) GetDevBucketDuration() *SettingProto {
	if x != nil {
		return x.DevBucketDuration
	}
	return nil
}

func (x *GlobalSettingsProto_Netstats) GetDevPersistBytes() *SettingProto {
	if x != nil {
		return x.DevPersistBytes
	}
	return nil
}

func (x *GlobalSettingsProto_Netstats) GetDevRotateAge() *SettingProto {
	if x != nil {
		return x.DevRotateAge
	}
	return nil
}

func (x *GlobalSettingsProto_Netstats) GetDevDeleteAge() *SettingProto {
	if x != nil {
		return x.DevDeleteAge
	}
	return nil
}

func (x *GlobalSettingsProto_Netstats) GetUidBucketDuration() *SettingProto {
	if x != nil {
		return x.UidBucketDuration
	}
	return nil
}

func (x *GlobalSettingsProto_Netstats) GetUidPersistBytes() *SettingProto {
	if x != nil {
		return x.UidPersistBytes
	}
	return nil
}

func (x *GlobalSettingsProto_Netstats) GetUidRotateAge() *SettingProto {
	if x != nil {
		return x.UidRotateAge
	}
	return nil
}

func (x *GlobalSettingsProto_Netstats) GetUidDeleteAge() *SettingProto {
	if x != nil {
		return x.UidDeleteAge
	}
	return nil
}

func (x *GlobalSettingsProto_Netstats) GetUidTagBucketDuration() *SettingProto {
	if x != nil {
		return x.UidTagBucketDuration
	}
	return nil
}

func (x *GlobalSettingsProto_Netstats) GetUidTagPersistBytes() *SettingProto {
	if x != nil {
		return x.UidTagPersistBytes
	}
	return nil
}

func (x *GlobalSettingsProto_Netstats) GetUidTagRotateAge() *SettingProto {
	if x != nil {
		return x.UidTagRotateAge
	}
	return nil
}

func (x *GlobalSettingsProto_Netstats) GetUidTagDeleteAge() *SettingProto {
	if x != nil {
		return x.UidTagDeleteAge
	}
	return nil
}

type GlobalSettingsProto_Network struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// User preference for which network(s) should be used.
	Preference                               *SettingProto `protobuf:"bytes,1,opt,name=preference" json:"preference,omitempty"`
	PreferredNetworkMode                     *SettingProto `protobuf:"bytes,2,opt,name=preferred_network_mode,json=preferredNetworkMode" json:"preferred_network_mode,omitempty"`
	ScorerApp                                *SettingProto `protobuf:"bytes,3,opt,name=scorer_app,json=scorerApp" json:"scorer_app,omitempty"`
	SwitchNotificationDailyLimit             *SettingProto `protobuf:"bytes,4,opt,name=switch_notification_daily_limit,json=switchNotificationDailyLimit" json:"switch_notification_daily_limit,omitempty"`
	SwitchNotificationRateLimitMillis        *SettingProto `protobuf:"bytes,5,opt,name=switch_notification_rate_limit_millis,json=switchNotificationRateLimitMillis" json:"switch_notification_rate_limit_millis,omitempty"`
	AvoidBadWifi                             *SettingProto `protobuf:"bytes,6,opt,name=avoid_bad_wifi,json=avoidBadWifi" json:"avoid_bad_wifi,omitempty"`
	MeteredMultipathPreference               *SettingProto `protobuf:"bytes,7,opt,name=metered_multipath_preference,json=meteredMultipathPreference" json:"metered_multipath_preference,omitempty"`
	WatchlistLastReportTime                  *SettingProto `protobuf:"bytes,8,opt,name=watchlist_last_report_time,json=watchlistLastReportTime" json:"watchlist_last_report_time,omitempty"`
	ScoringUiEnabled                         *SettingProto `protobuf:"bytes,9,opt,name=scoring_ui_enabled,json=scoringUiEnabled" json:"scoring_ui_enabled,omitempty"`
	RecommendationsEnabled                   *SettingProto `protobuf:"bytes,10,opt,name=recommendations_enabled,json=recommendationsEnabled" json:"recommendations_enabled,omitempty"`
	RecommendationsPackage                   *SettingProto `protobuf:"bytes,11,opt,name=recommendations_package,json=recommendationsPackage" json:"recommendations_package,omitempty"`
	RecommendationRequestTimeoutMs           *SettingProto `protobuf:"bytes,12,opt,name=recommendation_request_timeout_ms,json=recommendationRequestTimeoutMs" json:"recommendation_request_timeout_ms,omitempty"`
	WatchlistEnabled                         *SettingProto `protobuf:"bytes,13,opt,name=watchlist_enabled,json=watchlistEnabled" json:"watchlist_enabled,omitempty"`
	ScoringProvisioned                       *SettingProto `protobuf:"bytes,14,opt,name=scoring_provisioned,json=scoringProvisioned" json:"scoring_provisioned,omitempty"`
	AccessTimeoutMs                          *SettingProto `protobuf:"bytes,15,opt,name=access_timeout_ms,json=accessTimeoutMs" json:"access_timeout_ms,omitempty"`
	RecommendedNetworkEvaluatorCacheExpiryMs *SettingProto `protobuf:"bytes,16,opt,name=recommended_network_evaluator_cache_expiry_ms,json=recommendedNetworkEvaluatorCacheExpiryMs" json:"recommended_network_evaluator_cache_expiry_ms,omitempty"`
}

func (x *GlobalSettingsProto_Network) Reset() {
	*x = GlobalSettingsProto_Network{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_Network) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_Network) ProtoMessage() {}

func (x *GlobalSettingsProto_Network) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_Network.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_Network) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 43}
}

func (x *GlobalSettingsProto_Network) GetPreference() *SettingProto {
	if x != nil {
		return x.Preference
	}
	return nil
}

func (x *GlobalSettingsProto_Network) GetPreferredNetworkMode() *SettingProto {
	if x != nil {
		return x.PreferredNetworkMode
	}
	return nil
}

func (x *GlobalSettingsProto_Network) GetScorerApp() *SettingProto {
	if x != nil {
		return x.ScorerApp
	}
	return nil
}

func (x *GlobalSettingsProto_Network) GetSwitchNotificationDailyLimit() *SettingProto {
	if x != nil {
		return x.SwitchNotificationDailyLimit
	}
	return nil
}

func (x *GlobalSettingsProto_Network) GetSwitchNotificationRateLimitMillis() *SettingProto {
	if x != nil {
		return x.SwitchNotificationRateLimitMillis
	}
	return nil
}

func (x *GlobalSettingsProto_Network) GetAvoidBadWifi() *SettingProto {
	if x != nil {
		return x.AvoidBadWifi
	}
	return nil
}

func (x *GlobalSettingsProto_Network) GetMeteredMultipathPreference() *SettingProto {
	if x != nil {
		return x.MeteredMultipathPreference
	}
	return nil
}

func (x *GlobalSettingsProto_Network) GetWatchlistLastReportTime() *SettingProto {
	if x != nil {
		return x.WatchlistLastReportTime
	}
	return nil
}

func (x *GlobalSettingsProto_Network) GetScoringUiEnabled() *SettingProto {
	if x != nil {
		return x.ScoringUiEnabled
	}
	return nil
}

func (x *GlobalSettingsProto_Network) GetRecommendationsEnabled() *SettingProto {
	if x != nil {
		return x.RecommendationsEnabled
	}
	return nil
}

func (x *GlobalSettingsProto_Network) GetRecommendationsPackage() *SettingProto {
	if x != nil {
		return x.RecommendationsPackage
	}
	return nil
}

func (x *GlobalSettingsProto_Network) GetRecommendationRequestTimeoutMs() *SettingProto {
	if x != nil {
		return x.RecommendationRequestTimeoutMs
	}
	return nil
}

func (x *GlobalSettingsProto_Network) GetWatchlistEnabled() *SettingProto {
	if x != nil {
		return x.WatchlistEnabled
	}
	return nil
}

func (x *GlobalSettingsProto_Network) GetScoringProvisioned() *SettingProto {
	if x != nil {
		return x.ScoringProvisioned
	}
	return nil
}

func (x *GlobalSettingsProto_Network) GetAccessTimeoutMs() *SettingProto {
	if x != nil {
		return x.AccessTimeoutMs
	}
	return nil
}

func (x *GlobalSettingsProto_Network) GetRecommendedNetworkEvaluatorCacheExpiryMs() *SettingProto {
	if x != nil {
		return x.RecommendedNetworkEvaluatorCacheExpiryMs
	}
	return nil
}

type GlobalSettingsProto_Nitz struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If UTC time between two NITZ signals is greater than this value then the second signal
	// cannot be ignored.
	//
	// This value is in milliseconds. It is used for telephony-based time and time zone
	// detection.
	UpdateDiff *SettingProto `protobuf:"bytes,1,opt,name=update_diff,json=updateDiff" json:"update_diff,omitempty"`
	// If the elapsed realtime between two NITZ signals is greater than this value then the
	// second signal cannot be ignored.
	//
	// This value is in milliseconds. It is used for telephony-based time and time zone
	// detection.
	UpdateSpacing *SettingProto `protobuf:"bytes,2,opt,name=update_spacing,json=updateSpacing" json:"update_spacing,omitempty"`
	// If the device connects to a telephony network and was disconnected from a telephony
	// network for less than this time, a previously received NITZ signal can be restored.
	//
	// This value is in milliseconds. It is used for telephony-based time and time zone
	// detection.
	NetworkDisconnectRetention *SettingProto `protobuf:"bytes,3,opt,name=network_disconnect_retention,json=networkDisconnectRetention" json:"network_disconnect_retention,omitempty"`
}

func (x *GlobalSettingsProto_Nitz) Reset() {
	*x = GlobalSettingsProto_Nitz{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_Nitz) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_Nitz) ProtoMessage() {}

func (x *GlobalSettingsProto_Nitz) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_Nitz.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_Nitz) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 44}
}

func (x *GlobalSettingsProto_Nitz) GetUpdateDiff() *SettingProto {
	if x != nil {
		return x.UpdateDiff
	}
	return nil
}

func (x *GlobalSettingsProto_Nitz) GetUpdateSpacing() *SettingProto {
	if x != nil {
		return x.UpdateSpacing
	}
	return nil
}

func (x *GlobalSettingsProto_Nitz) GetNetworkDisconnectRetention() *SettingProto {
	if x != nil {
		return x.NetworkDisconnectRetention
	}
	return nil
}

type GlobalSettingsProto_Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxNotificationEnqueueRate      *SettingProto `protobuf:"bytes,1,opt,name=max_notification_enqueue_rate,json=maxNotificationEnqueueRate" json:"max_notification_enqueue_rate,omitempty"`
	ShowNotificationChannelWarnings *SettingProto `protobuf:"bytes,2,opt,name=show_notification_channel_warnings,json=showNotificationChannelWarnings" json:"show_notification_channel_warnings,omitempty"`
	// The list of snooze options for notifications. This is encoded as a key=value list,
	// separated by commas.
	SnoozeOptions                    *SettingProto `protobuf:"bytes,3,opt,name=snooze_options,json=snoozeOptions" json:"snooze_options,omitempty"`
	SmartRepliesInNotificationsFlags *SettingProto `protobuf:"bytes,4,opt,name=smart_replies_in_notifications_flags,json=smartRepliesInNotificationsFlags" json:"smart_replies_in_notifications_flags,omitempty"`
	// Configuration options for smart replies and smart actions in notifications. This is
	// encoded as a key=value list separated by commas.
	SmartSuggestionsInNotificationsFlags                 *SettingProto `protobuf:"bytes,5,opt,name=smart_suggestions_in_notifications_flags,json=smartSuggestionsInNotificationsFlags" json:"smart_suggestions_in_notifications_flags,omitempty"`
	Bubbles                                              *SettingProto `protobuf:"bytes,6,opt,name=bubbles" json:"bubbles,omitempty"`
	DisableScreenShareProtectionsForAppsAndNotifications *SettingProto `protobuf:"bytes,7,opt,name=disable_screen_share_protections_for_apps_and_notifications,json=disableScreenShareProtectionsForAppsAndNotifications" json:"disable_screen_share_protections_for_apps_and_notifications,omitempty"`
}

func (x *GlobalSettingsProto_Notification) Reset() {
	*x = GlobalSettingsProto_Notification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_Notification) ProtoMessage() {}

func (x *GlobalSettingsProto_Notification) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_Notification.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_Notification) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 45}
}

func (x *GlobalSettingsProto_Notification) GetMaxNotificationEnqueueRate() *SettingProto {
	if x != nil {
		return x.MaxNotificationEnqueueRate
	}
	return nil
}

func (x *GlobalSettingsProto_Notification) GetShowNotificationChannelWarnings() *SettingProto {
	if x != nil {
		return x.ShowNotificationChannelWarnings
	}
	return nil
}

func (x *GlobalSettingsProto_Notification) GetSnoozeOptions() *SettingProto {
	if x != nil {
		return x.SnoozeOptions
	}
	return nil
}

func (x *GlobalSettingsProto_Notification) GetSmartRepliesInNotificationsFlags() *SettingProto {
	if x != nil {
		return x.SmartRepliesInNotificationsFlags
	}
	return nil
}

func (x *GlobalSettingsProto_Notification) GetSmartSuggestionsInNotificationsFlags() *SettingProto {
	if x != nil {
		return x.SmartSuggestionsInNotificationsFlags
	}
	return nil
}

func (x *GlobalSettingsProto_Notification) GetBubbles() *SettingProto {
	if x != nil {
		return x.Bubbles
	}
	return nil
}

func (x *GlobalSettingsProto_Notification) GetDisableScreenShareProtectionsForAppsAndNotifications() *SettingProto {
	if x != nil {
		return x.DisableScreenShareProtectionsForAppsAndNotifications
	}
	return nil
}

type GlobalSettingsProto_Ntp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Preferred NTP server.
	Server *SettingProto `protobuf:"bytes,1,opt,name=server" json:"server,omitempty"`
	// Timeout in milliseconds to wait for NTP server.
	TimeoutMs *SettingProto `protobuf:"bytes,2,opt,name=timeout_ms,json=timeoutMs" json:"timeout_ms,omitempty"`
}

func (x *GlobalSettingsProto_Ntp) Reset() {
	*x = GlobalSettingsProto_Ntp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_Ntp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_Ntp) ProtoMessage() {}

func (x *GlobalSettingsProto_Ntp) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_Ntp.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_Ntp) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 46}
}

func (x *GlobalSettingsProto_Ntp) GetServer() *SettingProto {
	if x != nil {
		return x.Server
	}
	return nil
}

func (x *GlobalSettingsProto_Ntp) GetTimeoutMs() *SettingProto {
	if x != nil {
		return x.TimeoutMs
	}
	return nil
}

// Details about the User Absent For Small Battery feature.
type GlobalSettingsProto_UserAbsentSmallBattery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Whether or not to enable the User Absent, Radios Off feature
	RadiosOffEnabled *SettingProto `protobuf:"bytes,1,opt,name=radios_off_enabled,json=radiosOffEnabled" json:"radios_off_enabled,omitempty"`
	// Whether or not to enable the User Absent, Touch Off feature
	TouchOffEnabled *SettingProto `protobuf:"bytes,2,opt,name=touch_off_enabled,json=touchOffEnabled" json:"touch_off_enabled,omitempty"`
}

func (x *GlobalSettingsProto_UserAbsentSmallBattery) Reset() {
	*x = GlobalSettingsProto_UserAbsentSmallBattery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_UserAbsentSmallBattery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_UserAbsentSmallBattery) ProtoMessage() {}

func (x *GlobalSettingsProto_UserAbsentSmallBattery) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_UserAbsentSmallBattery.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_UserAbsentSmallBattery) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 47}
}

func (x *GlobalSettingsProto_UserAbsentSmallBattery) GetRadiosOffEnabled() *SettingProto {
	if x != nil {
		return x.RadiosOffEnabled
	}
	return nil
}

func (x *GlobalSettingsProto_UserAbsentSmallBattery) GetTouchOffEnabled() *SettingProto {
	if x != nil {
		return x.TouchOffEnabled
	}
	return nil
}

type GlobalSettingsProto_PackageVerifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Whether the package manager should send package verification broadcasts
	// for verifiers to review apps prior to installation.
	Enabled         *SettingProto `protobuf:"bytes,1,opt,name=enabled" json:"enabled,omitempty"`
	Timeout         *SettingProto `protobuf:"bytes,2,opt,name=timeout" json:"timeout,omitempty"`
	DefaultResponse *SettingProto `protobuf:"bytes,3,opt,name=default_response,json=defaultResponse" json:"default_response,omitempty"`
	SettingVisible  *SettingProto `protobuf:"bytes,4,opt,name=setting_visible,json=settingVisible" json:"setting_visible,omitempty"`
	IncludeAdb      *SettingProto `protobuf:"bytes,5,opt,name=include_adb,json=includeAdb" json:"include_adb,omitempty"`
}

func (x *GlobalSettingsProto_PackageVerifier) Reset() {
	*x = GlobalSettingsProto_PackageVerifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_PackageVerifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_PackageVerifier) ProtoMessage() {}

func (x *GlobalSettingsProto_PackageVerifier) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_PackageVerifier.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_PackageVerifier) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 48}
}

func (x *GlobalSettingsProto_PackageVerifier) GetEnabled() *SettingProto {
	if x != nil {
		return x.Enabled
	}
	return nil
}

func (x *GlobalSettingsProto_PackageVerifier) GetTimeout() *SettingProto {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *GlobalSettingsProto_PackageVerifier) GetDefaultResponse() *SettingProto {
	if x != nil {
		return x.DefaultResponse
	}
	return nil
}

func (x *GlobalSettingsProto_PackageVerifier) GetSettingVisible() *SettingProto {
	if x != nil {
		return x.SettingVisible
	}
	return nil
}

func (x *GlobalSettingsProto_PackageVerifier) GetIncludeAdb() *SettingProto {
	if x != nil {
		return x.IncludeAdb
	}
	return nil
}

type GlobalSettingsProto_PdpWatchdog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PollIntervalMs       *SettingProto `protobuf:"bytes,1,opt,name=poll_interval_ms,json=pollIntervalMs" json:"poll_interval_ms,omitempty"`
	LongPollIntervalMs   *SettingProto `protobuf:"bytes,2,opt,name=long_poll_interval_ms,json=longPollIntervalMs" json:"long_poll_interval_ms,omitempty"`
	ErrorPollIntervalMs  *SettingProto `protobuf:"bytes,3,opt,name=error_poll_interval_ms,json=errorPollIntervalMs" json:"error_poll_interval_ms,omitempty"`
	TriggerPacketCount   *SettingProto `protobuf:"bytes,4,opt,name=trigger_packet_count,json=triggerPacketCount" json:"trigger_packet_count,omitempty"`
	ErrorPollCount       *SettingProto `protobuf:"bytes,5,opt,name=error_poll_count,json=errorPollCount" json:"error_poll_count,omitempty"`
	MaxPdpResetFailCount *SettingProto `protobuf:"bytes,6,opt,name=max_pdp_reset_fail_count,json=maxPdpResetFailCount" json:"max_pdp_reset_fail_count,omitempty"`
}

func (x *GlobalSettingsProto_PdpWatchdog) Reset() {
	*x = GlobalSettingsProto_PdpWatchdog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_PdpWatchdog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_PdpWatchdog) ProtoMessage() {}

func (x *GlobalSettingsProto_PdpWatchdog) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_PdpWatchdog.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_PdpWatchdog) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 49}
}

func (x *GlobalSettingsProto_PdpWatchdog) GetPollIntervalMs() *SettingProto {
	if x != nil {
		return x.PollIntervalMs
	}
	return nil
}

func (x *GlobalSettingsProto_PdpWatchdog) GetLongPollIntervalMs() *SettingProto {
	if x != nil {
		return x.LongPollIntervalMs
	}
	return nil
}

func (x *GlobalSettingsProto_PdpWatchdog) GetErrorPollIntervalMs() *SettingProto {
	if x != nil {
		return x.ErrorPollIntervalMs
	}
	return nil
}

func (x *GlobalSettingsProto_PdpWatchdog) GetTriggerPacketCount() *SettingProto {
	if x != nil {
		return x.TriggerPacketCount
	}
	return nil
}

func (x *GlobalSettingsProto_PdpWatchdog) GetErrorPollCount() *SettingProto {
	if x != nil {
		return x.ErrorPollCount
	}
	return nil
}

func (x *GlobalSettingsProto_PdpWatchdog) GetMaxPdpResetFailCount() *SettingProto {
	if x != nil {
		return x.MaxPdpResetFailCount
	}
	return nil
}

type GlobalSettingsProto_PrepaidSetup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// URL to open browser on to allow user to manage a prepay account.
	DataServiceUrl *SettingProto `protobuf:"bytes,1,opt,name=data_service_url,json=dataServiceUrl" json:"data_service_url,omitempty"`
	// URL to attempt a GET on to see if this is a prepay device.
	DetectionTargetUrl *SettingProto `protobuf:"bytes,2,opt,name=detection_target_url,json=detectionTargetUrl" json:"detection_target_url,omitempty"`
	// Host to check for a redirect to after an attempt to GET
	// SETUP_PREPAID_DETECTION_TARGET_URL. (If we redirected there, this is a
	// prepaid device with zero balance.)
	DetectionRedirHost *SettingProto `protobuf:"bytes,3,opt,name=detection_redir_host,json=detectionRedirHost" json:"detection_redir_host,omitempty"`
}

func (x *GlobalSettingsProto_PrepaidSetup) Reset() {
	*x = GlobalSettingsProto_PrepaidSetup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_PrepaidSetup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_PrepaidSetup) ProtoMessage() {}

func (x *GlobalSettingsProto_PrepaidSetup) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_PrepaidSetup.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_PrepaidSetup) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 50}
}

func (x *GlobalSettingsProto_PrepaidSetup) GetDataServiceUrl() *SettingProto {
	if x != nil {
		return x.DataServiceUrl
	}
	return nil
}

func (x *GlobalSettingsProto_PrepaidSetup) GetDetectionTargetUrl() *SettingProto {
	if x != nil {
		return x.DetectionTargetUrl
	}
	return nil
}

func (x *GlobalSettingsProto_PrepaidSetup) GetDetectionRedirHost() *SettingProto {
	if x != nil {
		return x.DetectionRedirHost
	}
	return nil
}

type GlobalSettingsProto_Private struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The requested Private DNS mode and an accompanying specifier.
	// msg_privacy settings don't apply to sub messages, only to primitive
	// fields, so these must also be explicitly set to LOCAL.
	DnsMode      *SettingProto `protobuf:"bytes,1,opt,name=dns_mode,json=dnsMode" json:"dns_mode,omitempty"`
	DnsSpecifier *SettingProto `protobuf:"bytes,2,opt,name=dns_specifier,json=dnsSpecifier" json:"dns_specifier,omitempty"`
}

func (x *GlobalSettingsProto_Private) Reset() {
	*x = GlobalSettingsProto_Private{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_Private) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_Private) ProtoMessage() {}

func (x *GlobalSettingsProto_Private) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_Private.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_Private) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 51}
}

func (x *GlobalSettingsProto_Private) GetDnsMode() *SettingProto {
	if x != nil {
		return x.DnsMode
	}
	return nil
}

func (x *GlobalSettingsProto_Private) GetDnsSpecifier() *SettingProto {
	if x != nil {
		return x.DnsSpecifier
	}
	return nil
}

type GlobalSettingsProto_Selinux struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateContentUrl  *SettingProto `protobuf:"bytes,1,opt,name=update_content_url,json=updateContentUrl" json:"update_content_url,omitempty"`
	UpdateMetadataUrl *SettingProto `protobuf:"bytes,2,opt,name=update_metadata_url,json=updateMetadataUrl" json:"update_metadata_url,omitempty"`
	Status            *SettingProto `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
}

func (x *GlobalSettingsProto_Selinux) Reset() {
	*x = GlobalSettingsProto_Selinux{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_Selinux) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_Selinux) ProtoMessage() {}

func (x *GlobalSettingsProto_Selinux) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_Selinux.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_Selinux) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 52}
}

func (x *GlobalSettingsProto_Selinux) GetUpdateContentUrl() *SettingProto {
	if x != nil {
		return x.UpdateContentUrl
	}
	return nil
}

func (x *GlobalSettingsProto_Selinux) GetUpdateMetadataUrl() *SettingProto {
	if x != nil {
		return x.UpdateMetadataUrl
	}
	return nil
}

func (x *GlobalSettingsProto_Selinux) GetStatus() *SettingProto {
	if x != nil {
		return x.Status
	}
	return nil
}

type GlobalSettingsProto_SmartSelection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateContentUrl  *SettingProto `protobuf:"bytes,1,opt,name=update_content_url,json=updateContentUrl" json:"update_content_url,omitempty"`
	UpdateMetadataUrl *SettingProto `protobuf:"bytes,2,opt,name=update_metadata_url,json=updateMetadataUrl" json:"update_metadata_url,omitempty"`
}

func (x *GlobalSettingsProto_SmartSelection) Reset() {
	*x = GlobalSettingsProto_SmartSelection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_SmartSelection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_SmartSelection) ProtoMessage() {}

func (x *GlobalSettingsProto_SmartSelection) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_SmartSelection.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_SmartSelection) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 53}
}

func (x *GlobalSettingsProto_SmartSelection) GetUpdateContentUrl() *SettingProto {
	if x != nil {
		return x.UpdateContentUrl
	}
	return nil
}

func (x *GlobalSettingsProto_SmartSelection) GetUpdateMetadataUrl() *SettingProto {
	if x != nil {
		return x.UpdateMetadataUrl
	}
	return nil
}

type GlobalSettingsProto_Sms struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OutgoingCheckIntervalMs *SettingProto `protobuf:"bytes,1,opt,name=outgoing_check_interval_ms,json=outgoingCheckIntervalMs" json:"outgoing_check_interval_ms,omitempty"`
	OutgoingCheckMaxCount   *SettingProto `protobuf:"bytes,2,opt,name=outgoing_check_max_count,json=outgoingCheckMaxCount" json:"outgoing_check_max_count,omitempty"`
	// Used to disable SMS short code confirmation. Defaults to true.
	ShortCodeConfirmation       *SettingProto `protobuf:"bytes,3,opt,name=short_code_confirmation,json=shortCodeConfirmation" json:"short_code_confirmation,omitempty"`
	ShortCodeRule               *SettingProto `protobuf:"bytes,4,opt,name=short_code_rule,json=shortCodeRule" json:"short_code_rule,omitempty"`
	ShortCodesUpdateContentUrl  *SettingProto `protobuf:"bytes,5,opt,name=short_codes_update_content_url,json=shortCodesUpdateContentUrl" json:"short_codes_update_content_url,omitempty"`
	ShortCodesUpdateMetadataUrl *SettingProto `protobuf:"bytes,6,opt,name=short_codes_update_metadata_url,json=shortCodesUpdateMetadataUrl" json:"short_codes_update_metadata_url,omitempty"`
	AccessRestrictionEnabled    *SettingProto `protobuf:"bytes,7,opt,name=access_restriction_enabled,json=accessRestrictionEnabled" json:"access_restriction_enabled,omitempty"`
}

func (x *GlobalSettingsProto_Sms) Reset() {
	*x = GlobalSettingsProto_Sms{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_Sms) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_Sms) ProtoMessage() {}

func (x *GlobalSettingsProto_Sms) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_Sms.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_Sms) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 54}
}

func (x *GlobalSettingsProto_Sms) GetOutgoingCheckIntervalMs() *SettingProto {
	if x != nil {
		return x.OutgoingCheckIntervalMs
	}
	return nil
}

func (x *GlobalSettingsProto_Sms) GetOutgoingCheckMaxCount() *SettingProto {
	if x != nil {
		return x.OutgoingCheckMaxCount
	}
	return nil
}

func (x *GlobalSettingsProto_Sms) GetShortCodeConfirmation() *SettingProto {
	if x != nil {
		return x.ShortCodeConfirmation
	}
	return nil
}

func (x *GlobalSettingsProto_Sms) GetShortCodeRule() *SettingProto {
	if x != nil {
		return x.ShortCodeRule
	}
	return nil
}

func (x *GlobalSettingsProto_Sms) GetShortCodesUpdateContentUrl() *SettingProto {
	if x != nil {
		return x.ShortCodesUpdateContentUrl
	}
	return nil
}

func (x *GlobalSettingsProto_Sms) GetShortCodesUpdateMetadataUrl() *SettingProto {
	if x != nil {
		return x.ShortCodesUpdateMetadataUrl
	}
	return nil
}

func (x *GlobalSettingsProto_Sms) GetAccessRestrictionEnabled() *SettingProto {
	if x != nil {
		return x.AccessRestrictionEnabled
	}
	return nil
}

type GlobalSettingsProto_Sounds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CarDock                            *SettingProto `protobuf:"bytes,1,opt,name=car_dock,json=carDock" json:"car_dock,omitempty"`
	CarUndock                          *SettingProto `protobuf:"bytes,2,opt,name=car_undock,json=carUndock" json:"car_undock,omitempty"`
	ChargingStarted                    *SettingProto `protobuf:"bytes,4,opt,name=charging_started,json=chargingStarted" json:"charging_started,omitempty"`
	DeskDock                           *SettingProto `protobuf:"bytes,5,opt,name=desk_dock,json=deskDock" json:"desk_dock,omitempty"`
	DeskUndock                         *SettingProto `protobuf:"bytes,6,opt,name=desk_undock,json=deskUndock" json:"desk_undock,omitempty"`
	DockSoundsEnabled                  *SettingProto `protobuf:"bytes,7,opt,name=dock_sounds_enabled,json=dockSoundsEnabled" json:"dock_sounds_enabled,omitempty"`
	DockSoundsEnabledWhenAccessibility *SettingProto `protobuf:"bytes,8,opt,name=dock_sounds_enabled_when_accessibility,json=dockSoundsEnabledWhenAccessibility" json:"dock_sounds_enabled_when_accessibility,omitempty"`
	Lock                               *SettingProto `protobuf:"bytes,9,opt,name=lock" json:"lock,omitempty"`
	LowBattery                         *SettingProto `protobuf:"bytes,10,opt,name=low_battery,json=lowBattery" json:"low_battery,omitempty"`
	LowBatterySoundTimeout             *SettingProto `protobuf:"bytes,11,opt,name=low_battery_sound_timeout,json=lowBatterySoundTimeout" json:"low_battery_sound_timeout,omitempty"`
	// Called "power_sounds_enabled" in code.
	LowBatterySoundsEnabled *SettingProto `protobuf:"bytes,12,opt,name=low_battery_sounds_enabled,json=lowBatterySoundsEnabled" json:"low_battery_sounds_enabled,omitempty"`
	Trusted                 *SettingProto `protobuf:"bytes,13,opt,name=trusted" json:"trusted,omitempty"`
	Unlock                  *SettingProto `protobuf:"bytes,14,opt,name=unlock" json:"unlock,omitempty"`
	WirelessChargingStarted *SettingProto `protobuf:"bytes,15,opt,name=wireless_charging_started,json=wirelessChargingStarted" json:"wireless_charging_started,omitempty"`
}

func (x *GlobalSettingsProto_Sounds) Reset() {
	*x = GlobalSettingsProto_Sounds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_Sounds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_Sounds) ProtoMessage() {}

func (x *GlobalSettingsProto_Sounds) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_Sounds.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_Sounds) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 55}
}

func (x *GlobalSettingsProto_Sounds) GetCarDock() *SettingProto {
	if x != nil {
		return x.CarDock
	}
	return nil
}

func (x *GlobalSettingsProto_Sounds) GetCarUndock() *SettingProto {
	if x != nil {
		return x.CarUndock
	}
	return nil
}

func (x *GlobalSettingsProto_Sounds) GetChargingStarted() *SettingProto {
	if x != nil {
		return x.ChargingStarted
	}
	return nil
}

func (x *GlobalSettingsProto_Sounds) GetDeskDock() *SettingProto {
	if x != nil {
		return x.DeskDock
	}
	return nil
}

func (x *GlobalSettingsProto_Sounds) GetDeskUndock() *SettingProto {
	if x != nil {
		return x.DeskUndock
	}
	return nil
}

func (x *GlobalSettingsProto_Sounds) GetDockSoundsEnabled() *SettingProto {
	if x != nil {
		return x.DockSoundsEnabled
	}
	return nil
}

func (x *GlobalSettingsProto_Sounds) GetDockSoundsEnabledWhenAccessibility() *SettingProto {
	if x != nil {
		return x.DockSoundsEnabledWhenAccessibility
	}
	return nil
}

func (x *GlobalSettingsProto_Sounds) GetLock() *SettingProto {
	if x != nil {
		return x.Lock
	}
	return nil
}

func (x *GlobalSettingsProto_Sounds) GetLowBattery() *SettingProto {
	if x != nil {
		return x.LowBattery
	}
	return nil
}

func (x *GlobalSettingsProto_Sounds) GetLowBatterySoundTimeout() *SettingProto {
	if x != nil {
		return x.LowBatterySoundTimeout
	}
	return nil
}

func (x *GlobalSettingsProto_Sounds) GetLowBatterySoundsEnabled() *SettingProto {
	if x != nil {
		return x.LowBatterySoundsEnabled
	}
	return nil
}

func (x *GlobalSettingsProto_Sounds) GetTrusted() *SettingProto {
	if x != nil {
		return x.Trusted
	}
	return nil
}

func (x *GlobalSettingsProto_Sounds) GetUnlock() *SettingProto {
	if x != nil {
		return x.Unlock
	}
	return nil
}

func (x *GlobalSettingsProto_Sounds) GetWirelessChargingStarted() *SettingProto {
	if x != nil {
		return x.WirelessChargingStarted
	}
	return nil
}

type GlobalSettingsProto_SoundTrigger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Maximum number of SoundTriggerDetectionService operations per day.
	MaxSoundTriggerDetectionServiceOpsPerDay *SettingProto `protobuf:"bytes,1,opt,name=max_sound_trigger_detection_service_ops_per_day,json=maxSoundTriggerDetectionServiceOpsPerDay" json:"max_sound_trigger_detection_service_ops_per_day,omitempty"`
	// Timeout for a single SoundTriggerDetectionService operation (in ms).
	DetectionServiceOpTimeoutMs *SettingProto `protobuf:"bytes,2,opt,name=detection_service_op_timeout_ms,json=detectionServiceOpTimeoutMs" json:"detection_service_op_timeout_ms,omitempty"`
}

func (x *GlobalSettingsProto_SoundTrigger) Reset() {
	*x = GlobalSettingsProto_SoundTrigger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_SoundTrigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_SoundTrigger) ProtoMessage() {}

func (x *GlobalSettingsProto_SoundTrigger) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_SoundTrigger.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_SoundTrigger) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 56}
}

func (x *GlobalSettingsProto_SoundTrigger) GetMaxSoundTriggerDetectionServiceOpsPerDay() *SettingProto {
	if x != nil {
		return x.MaxSoundTriggerDetectionServiceOpsPerDay
	}
	return nil
}

func (x *GlobalSettingsProto_SoundTrigger) GetDetectionServiceOpTimeoutMs() *SettingProto {
	if x != nil {
		return x.DetectionServiceOpTimeoutMs
	}
	return nil
}

type GlobalSettingsProto_Storage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BenchmarkInterval        *SettingProto `protobuf:"bytes,1,opt,name=benchmark_interval,json=benchmarkInterval" json:"benchmark_interval,omitempty"`
	SettingsClobberThreshold *SettingProto `protobuf:"bytes,2,opt,name=settings_clobber_threshold,json=settingsClobberThreshold" json:"settings_clobber_threshold,omitempty"`
}

func (x *GlobalSettingsProto_Storage) Reset() {
	*x = GlobalSettingsProto_Storage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_Storage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_Storage) ProtoMessage() {}

func (x *GlobalSettingsProto_Storage) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_Storage.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_Storage) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 57}
}

func (x *GlobalSettingsProto_Storage) GetBenchmarkInterval() *SettingProto {
	if x != nil {
		return x.BenchmarkInterval
	}
	return nil
}

func (x *GlobalSettingsProto_Storage) GetSettingsClobberThreshold() *SettingProto {
	if x != nil {
		return x.SettingsClobberThreshold
	}
	return nil
}

type GlobalSettingsProto_Sync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The maximum reconnect delay for short network outages or when the network is suspended due to phone use.
	MaxRetryDelayInSeconds *SettingProto `protobuf:"bytes,1,opt,name=max_retry_delay_in_seconds,json=maxRetryDelayInSeconds" json:"max_retry_delay_in_seconds,omitempty"`
	// Simply "sync_manager_constants" in code.
	ManagerConstants *SettingProto `protobuf:"bytes,2,opt,name=manager_constants,json=managerConstants" json:"manager_constants,omitempty"`
}

func (x *GlobalSettingsProto_Sync) Reset() {
	*x = GlobalSettingsProto_Sync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_Sync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_Sync) ProtoMessage() {}

func (x *GlobalSettingsProto_Sync) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_Sync.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_Sync) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 58}
}

func (x *GlobalSettingsProto_Sync) GetMaxRetryDelayInSeconds() *SettingProto {
	if x != nil {
		return x.MaxRetryDelayInSeconds
	}
	return nil
}

func (x *GlobalSettingsProto_Sync) GetManagerConstants() *SettingProto {
	if x != nil {
		return x.ManagerConstants
	}
	return nil
}

type GlobalSettingsProto_Sys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The interval in minutes after which the amount of free storage left on
	// the device is logged to the event log.
	FreeStorageLogIntervalMins *SettingProto `protobuf:"bytes,1,opt,name=free_storage_log_interval_mins,json=freeStorageLogIntervalMins" json:"free_storage_log_interval_mins,omitempty"`
	StorageThresholdPercentage *SettingProto `protobuf:"bytes,2,opt,name=storage_threshold_percentage,json=storageThresholdPercentage" json:"storage_threshold_percentage,omitempty"`
	StorageThresholdMaxBytes   *SettingProto `protobuf:"bytes,3,opt,name=storage_threshold_max_bytes,json=storageThresholdMaxBytes" json:"storage_threshold_max_bytes,omitempty"`
	StorageFullThresholdBytes  *SettingProto `protobuf:"bytes,4,opt,name=storage_full_threshold_bytes,json=storageFullThresholdBytes" json:"storage_full_threshold_bytes,omitempty"`
	StorageCachePercentage     *SettingProto `protobuf:"bytes,5,opt,name=storage_cache_percentage,json=storageCachePercentage" json:"storage_cache_percentage,omitempty"`
	StorageCacheMaxBytes       *SettingProto `protobuf:"bytes,6,opt,name=storage_cache_max_bytes,json=storageCacheMaxBytes" json:"storage_cache_max_bytes,omitempty"`
	// UidCpuPower global setting. This links the sys.uidcpupower system property.
	// The following values are supported:
	// 0 -> /proc/uid_cpupower/* are disabled
	// 1 -> /proc/uid_cpupower/* are enabled
	// Any other value defaults to enabled.
	Uidcpupower *SettingProto `protobuf:"bytes,8,opt,name=uidcpupower" json:"uidcpupower,omitempty"`
}

func (x *GlobalSettingsProto_Sys) Reset() {
	*x = GlobalSettingsProto_Sys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_Sys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_Sys) ProtoMessage() {}

func (x *GlobalSettingsProto_Sys) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_Sys.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_Sys) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 59}
}

func (x *GlobalSettingsProto_Sys) GetFreeStorageLogIntervalMins() *SettingProto {
	if x != nil {
		return x.FreeStorageLogIntervalMins
	}
	return nil
}

func (x *GlobalSettingsProto_Sys) GetStorageThresholdPercentage() *SettingProto {
	if x != nil {
		return x.StorageThresholdPercentage
	}
	return nil
}

func (x *GlobalSettingsProto_Sys) GetStorageThresholdMaxBytes() *SettingProto {
	if x != nil {
		return x.StorageThresholdMaxBytes
	}
	return nil
}

func (x *GlobalSettingsProto_Sys) GetStorageFullThresholdBytes() *SettingProto {
	if x != nil {
		return x.StorageFullThresholdBytes
	}
	return nil
}

func (x *GlobalSettingsProto_Sys) GetStorageCachePercentage() *SettingProto {
	if x != nil {
		return x.StorageCachePercentage
	}
	return nil
}

func (x *GlobalSettingsProto_Sys) GetStorageCacheMaxBytes() *SettingProto {
	if x != nil {
		return x.StorageCacheMaxBytes
	}
	return nil
}

func (x *GlobalSettingsProto_Sys) GetUidcpupower() *SettingProto {
	if x != nil {
		return x.Uidcpupower
	}
	return nil
}

type GlobalSettingsProto_TemperatureWarning struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShowTemperatureWarning *SettingProto `protobuf:"bytes,1,opt,name=show_temperature_warning,json=showTemperatureWarning" json:"show_temperature_warning,omitempty"`
	// Temperature at which the high temperature warning notification should
	// be shown.
	WarningTemperatureLevel *SettingProto `protobuf:"bytes,2,opt,name=warning_temperature_level,json=warningTemperatureLevel" json:"warning_temperature_level,omitempty"`
	ShowUsbTemperatureAlarm *SettingProto `protobuf:"bytes,3,opt,name=show_usb_temperature_alarm,json=showUsbTemperatureAlarm" json:"show_usb_temperature_alarm,omitempty"`
}

func (x *GlobalSettingsProto_TemperatureWarning) Reset() {
	*x = GlobalSettingsProto_TemperatureWarning{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_TemperatureWarning) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_TemperatureWarning) ProtoMessage() {}

func (x *GlobalSettingsProto_TemperatureWarning) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_TemperatureWarning.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_TemperatureWarning) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 60}
}

func (x *GlobalSettingsProto_TemperatureWarning) GetShowTemperatureWarning() *SettingProto {
	if x != nil {
		return x.ShowTemperatureWarning
	}
	return nil
}

func (x *GlobalSettingsProto_TemperatureWarning) GetWarningTemperatureLevel() *SettingProto {
	if x != nil {
		return x.WarningTemperatureLevel
	}
	return nil
}

func (x *GlobalSettingsProto_TemperatureWarning) GetShowUsbTemperatureAlarm() *SettingProto {
	if x != nil {
		return x.ShowUsbTemperatureAlarm
	}
	return nil
}

type GlobalSettingsProto_Tether struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Supported       *SettingProto `protobuf:"bytes,1,opt,name=supported" json:"supported,omitempty"`
	DunRequired     *SettingProto `protobuf:"bytes,2,opt,name=dun_required,json=dunRequired" json:"dun_required,omitempty"`
	DunApn          *SettingProto `protobuf:"bytes,3,opt,name=dun_apn,json=dunApn" json:"dun_apn,omitempty"`
	OffloadDisabled *SettingProto `protobuf:"bytes,4,opt,name=offload_disabled,json=offloadDisabled" json:"offload_disabled,omitempty"`
	// Simply "soft_ap_timeout_enabled" in code.
	TimeoutEnabled *SettingProto `protobuf:"bytes,112,opt,name=timeout_enabled,json=timeoutEnabled" json:"timeout_enabled,omitempty"`
}

func (x *GlobalSettingsProto_Tether) Reset() {
	*x = GlobalSettingsProto_Tether{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_Tether) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_Tether) ProtoMessage() {}

func (x *GlobalSettingsProto_Tether) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_Tether.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_Tether) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 61}
}

func (x *GlobalSettingsProto_Tether) GetSupported() *SettingProto {
	if x != nil {
		return x.Supported
	}
	return nil
}

func (x *GlobalSettingsProto_Tether) GetDunRequired() *SettingProto {
	if x != nil {
		return x.DunRequired
	}
	return nil
}

func (x *GlobalSettingsProto_Tether) GetDunApn() *SettingProto {
	if x != nil {
		return x.DunApn
	}
	return nil
}

func (x *GlobalSettingsProto_Tether) GetOffloadDisabled() *SettingProto {
	if x != nil {
		return x.OffloadDisabled
	}
	return nil
}

func (x *GlobalSettingsProto_Tether) GetTimeoutEnabled() *SettingProto {
	if x != nil {
		return x.TimeoutEnabled
	}
	return nil
}

type GlobalSettingsProto_Tzinfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateContentUrl  *SettingProto `protobuf:"bytes,1,opt,name=update_content_url,json=updateContentUrl" json:"update_content_url,omitempty"`
	UpdateMetadataUrl *SettingProto `protobuf:"bytes,2,opt,name=update_metadata_url,json=updateMetadataUrl" json:"update_metadata_url,omitempty"`
}

func (x *GlobalSettingsProto_Tzinfo) Reset() {
	*x = GlobalSettingsProto_Tzinfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_Tzinfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_Tzinfo) ProtoMessage() {}

func (x *GlobalSettingsProto_Tzinfo) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_Tzinfo.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_Tzinfo) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 62}
}

func (x *GlobalSettingsProto_Tzinfo) GetUpdateContentUrl() *SettingProto {
	if x != nil {
		return x.UpdateContentUrl
	}
	return nil
}

func (x *GlobalSettingsProto_Tzinfo) GetUpdateMetadataUrl() *SettingProto {
	if x != nil {
		return x.UpdateMetadataUrl
	}
	return nil
}

type GlobalSettingsProto_Webview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataReductionProxyKey *SettingProto `protobuf:"bytes,1,opt,name=data_reduction_proxy_key,json=dataReductionProxyKey" json:"data_reduction_proxy_key,omitempty"`
	FallbackLogicEnabled  *SettingProto `protobuf:"bytes,2,opt,name=fallback_logic_enabled,json=fallbackLogicEnabled" json:"fallback_logic_enabled,omitempty"`
	// Name of the package used as WebView provider.
	Provider     *SettingProto `protobuf:"bytes,3,opt,name=provider" json:"provider,omitempty"`
	Multiprocess *SettingProto `protobuf:"bytes,4,opt,name=multiprocess" json:"multiprocess,omitempty"`
}

func (x *GlobalSettingsProto_Webview) Reset() {
	*x = GlobalSettingsProto_Webview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_Webview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_Webview) ProtoMessage() {}

func (x *GlobalSettingsProto_Webview) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_Webview.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_Webview) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 63}
}

func (x *GlobalSettingsProto_Webview) GetDataReductionProxyKey() *SettingProto {
	if x != nil {
		return x.DataReductionProxyKey
	}
	return nil
}

func (x *GlobalSettingsProto_Webview) GetFallbackLogicEnabled() *SettingProto {
	if x != nil {
		return x.FallbackLogicEnabled
	}
	return nil
}

func (x *GlobalSettingsProto_Webview) GetProvider() *SettingProto {
	if x != nil {
		return x.Provider
	}
	return nil
}

func (x *GlobalSettingsProto_Webview) GetMultiprocess() *SettingProto {
	if x != nil {
		return x.Multiprocess
	}
	return nil
}

type GlobalSettingsProto_Wfc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImsEnabled        *SettingProto `protobuf:"bytes,1,opt,name=ims_enabled,json=imsEnabled" json:"ims_enabled,omitempty"`
	ImsMode           *SettingProto `protobuf:"bytes,2,opt,name=ims_mode,json=imsMode" json:"ims_mode,omitempty"`
	ImsRoamingMode    *SettingProto `protobuf:"bytes,3,opt,name=ims_roaming_mode,json=imsRoamingMode" json:"ims_roaming_mode,omitempty"`
	ImsRoamingEnabled *SettingProto `protobuf:"bytes,4,opt,name=ims_roaming_enabled,json=imsRoamingEnabled" json:"ims_roaming_enabled,omitempty"`
}

func (x *GlobalSettingsProto_Wfc) Reset() {
	*x = GlobalSettingsProto_Wfc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_Wfc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_Wfc) ProtoMessage() {}

func (x *GlobalSettingsProto_Wfc) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_Wfc.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_Wfc) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 64}
}

func (x *GlobalSettingsProto_Wfc) GetImsEnabled() *SettingProto {
	if x != nil {
		return x.ImsEnabled
	}
	return nil
}

func (x *GlobalSettingsProto_Wfc) GetImsMode() *SettingProto {
	if x != nil {
		return x.ImsMode
	}
	return nil
}

func (x *GlobalSettingsProto_Wfc) GetImsRoamingMode() *SettingProto {
	if x != nil {
		return x.ImsRoamingMode
	}
	return nil
}

func (x *GlobalSettingsProto_Wfc) GetImsRoamingEnabled() *SettingProto {
	if x != nil {
		return x.ImsRoamingEnabled
	}
	return nil
}

type GlobalSettingsProto_Wifi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SleepPolicy                           *SettingProto `protobuf:"bytes,1,opt,name=sleep_policy,json=sleepPolicy" json:"sleep_policy,omitempty"`
	BadgingThresholds                     *SettingProto `protobuf:"bytes,2,opt,name=badging_thresholds,json=badgingThresholds" json:"badging_thresholds,omitempty"`
	DisplayOn                             *SettingProto `protobuf:"bytes,3,opt,name=display_on,json=displayOn" json:"display_on,omitempty"`
	DisplayCertificationOn                *SettingProto `protobuf:"bytes,4,opt,name=display_certification_on,json=displayCertificationOn" json:"display_certification_on,omitempty"`
	DisplayWpsConfig                      *SettingProto `protobuf:"bytes,5,opt,name=display_wps_config,json=displayWpsConfig" json:"display_wps_config,omitempty"`
	NetworksAvailableNotificationOn       *SettingProto `protobuf:"bytes,6,opt,name=networks_available_notification_on,json=networksAvailableNotificationOn" json:"networks_available_notification_on,omitempty"`
	NetworksAvailableRepeatDelay          *SettingProto `protobuf:"bytes,8,opt,name=networks_available_repeat_delay,json=networksAvailableRepeatDelay" json:"networks_available_repeat_delay,omitempty"`
	CountryCode                           *SettingProto `protobuf:"bytes,9,opt,name=country_code,json=countryCode" json:"country_code,omitempty"`
	FrameworkScanIntervalMs               *SettingProto `protobuf:"bytes,10,opt,name=framework_scan_interval_ms,json=frameworkScanIntervalMs" json:"framework_scan_interval_ms,omitempty"`
	IdleMs                                *SettingProto `protobuf:"bytes,11,opt,name=idle_ms,json=idleMs" json:"idle_ms,omitempty"`
	NumOpenNetworksKept                   *SettingProto `protobuf:"bytes,12,opt,name=num_open_networks_kept,json=numOpenNetworksKept" json:"num_open_networks_kept,omitempty"`
	On                                    *SettingProto `protobuf:"bytes,13,opt,name=on" json:"on,omitempty"`
	ScanAlwaysAvailable                   *SettingProto `protobuf:"bytes,14,opt,name=scan_always_available,json=scanAlwaysAvailable" json:"scan_always_available,omitempty"`
	WakeupEnabled                         *SettingProto `protobuf:"bytes,15,opt,name=wakeup_enabled,json=wakeupEnabled" json:"wakeup_enabled,omitempty"`
	SavedState                            *SettingProto `protobuf:"bytes,16,opt,name=saved_state,json=savedState" json:"saved_state,omitempty"`
	SupplicantScanIntervalMs              *SettingProto `protobuf:"bytes,17,opt,name=supplicant_scan_interval_ms,json=supplicantScanIntervalMs" json:"supplicant_scan_interval_ms,omitempty"`
	EnhancedAutoJoin                      *SettingProto `protobuf:"bytes,18,opt,name=enhanced_auto_join,json=enhancedAutoJoin" json:"enhanced_auto_join,omitempty"`
	NetworkShowRssi                       *SettingProto `protobuf:"bytes,19,opt,name=network_show_rssi,json=networkShowRssi" json:"network_show_rssi,omitempty"`
	ScanIntervalWhenP2PConnectedMs        *SettingProto `protobuf:"bytes,20,opt,name=scan_interval_when_p2p_connected_ms,json=scanIntervalWhenP2pConnectedMs" json:"scan_interval_when_p2p_connected_ms,omitempty"`
	WatchdogOn                            *SettingProto `protobuf:"bytes,21,opt,name=watchdog_on,json=watchdogOn" json:"watchdog_on,omitempty"`
	WatchdogPoorNetworkTestEnabled        *SettingProto `protobuf:"bytes,22,opt,name=watchdog_poor_network_test_enabled,json=watchdogPoorNetworkTestEnabled" json:"watchdog_poor_network_test_enabled,omitempty"`
	SuspendOptimizationsEnabled           *SettingProto `protobuf:"bytes,23,opt,name=suspend_optimizations_enabled,json=suspendOptimizationsEnabled" json:"suspend_optimizations_enabled,omitempty"`
	VerboseLoggingEnabled                 *SettingProto `protobuf:"bytes,24,opt,name=verbose_logging_enabled,json=verboseLoggingEnabled" json:"verbose_logging_enabled,omitempty"`
	MaxDhcpRetryCount                     *SettingProto `protobuf:"bytes,26,opt,name=max_dhcp_retry_count,json=maxDhcpRetryCount" json:"max_dhcp_retry_count,omitempty"`
	MobileDataTransitionWakelockTimeoutMs *SettingProto `protobuf:"bytes,27,opt,name=mobile_data_transition_wakelock_timeout_ms,json=mobileDataTransitionWakelockTimeoutMs" json:"mobile_data_transition_wakelock_timeout_ms,omitempty"`
	// Controls whether WiFi configurations created by a Device Owner app should
	// be locked down (that is, be editable or removable only by the Device
	// Owner App, not even by Settings app). This setting takes integer values.
	// Non-zero values mean that the Device Owner-created configurations are
	// locked down. Value of zero means they are not. Default value in the
	// absence of actual value to this setting is 0.
	DeviceOwnerConfigsLockdown   *SettingProto `protobuf:"bytes,28,opt,name=device_owner_configs_lockdown,json=deviceOwnerConfigsLockdown" json:"device_owner_configs_lockdown,omitempty"`
	FrequencyBand                *SettingProto `protobuf:"bytes,29,opt,name=frequency_band,json=frequencyBand" json:"frequency_band,omitempty"`
	P2PDeviceName                *SettingProto `protobuf:"bytes,30,opt,name=p2p_device_name,json=p2pDeviceName" json:"p2p_device_name,omitempty"`
	EphemeralOutOfRangeTimeoutMs *SettingProto `protobuf:"bytes,32,opt,name=ephemeral_out_of_range_timeout_ms,json=ephemeralOutOfRangeTimeoutMs" json:"ephemeral_out_of_range_timeout_ms,omitempty"`
	OnWhenProxyDisconnected      *SettingProto `protobuf:"bytes,33,opt,name=on_when_proxy_disconnected,json=onWhenProxyDisconnected" json:"on_when_proxy_disconnected,omitempty"`
	BounceDelayOverrideMs        *SettingProto `protobuf:"bytes,34,opt,name=bounce_delay_override_ms,json=bounceDelayOverrideMs" json:"bounce_delay_override_ms,omitempty"`
}

func (x *GlobalSettingsProto_Wifi) Reset() {
	*x = GlobalSettingsProto_Wifi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_Wifi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_Wifi) ProtoMessage() {}

func (x *GlobalSettingsProto_Wifi) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_Wifi.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_Wifi) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 65}
}

func (x *GlobalSettingsProto_Wifi) GetSleepPolicy() *SettingProto {
	if x != nil {
		return x.SleepPolicy
	}
	return nil
}

func (x *GlobalSettingsProto_Wifi) GetBadgingThresholds() *SettingProto {
	if x != nil {
		return x.BadgingThresholds
	}
	return nil
}

func (x *GlobalSettingsProto_Wifi) GetDisplayOn() *SettingProto {
	if x != nil {
		return x.DisplayOn
	}
	return nil
}

func (x *GlobalSettingsProto_Wifi) GetDisplayCertificationOn() *SettingProto {
	if x != nil {
		return x.DisplayCertificationOn
	}
	return nil
}

func (x *GlobalSettingsProto_Wifi) GetDisplayWpsConfig() *SettingProto {
	if x != nil {
		return x.DisplayWpsConfig
	}
	return nil
}

func (x *GlobalSettingsProto_Wifi) GetNetworksAvailableNotificationOn() *SettingProto {
	if x != nil {
		return x.NetworksAvailableNotificationOn
	}
	return nil
}

func (x *GlobalSettingsProto_Wifi) GetNetworksAvailableRepeatDelay() *SettingProto {
	if x != nil {
		return x.NetworksAvailableRepeatDelay
	}
	return nil
}

func (x *GlobalSettingsProto_Wifi) GetCountryCode() *SettingProto {
	if x != nil {
		return x.CountryCode
	}
	return nil
}

func (x *GlobalSettingsProto_Wifi) GetFrameworkScanIntervalMs() *SettingProto {
	if x != nil {
		return x.FrameworkScanIntervalMs
	}
	return nil
}

func (x *GlobalSettingsProto_Wifi) GetIdleMs() *SettingProto {
	if x != nil {
		return x.IdleMs
	}
	return nil
}

func (x *GlobalSettingsProto_Wifi) GetNumOpenNetworksKept() *SettingProto {
	if x != nil {
		return x.NumOpenNetworksKept
	}
	return nil
}

func (x *GlobalSettingsProto_Wifi) GetOn() *SettingProto {
	if x != nil {
		return x.On
	}
	return nil
}

func (x *GlobalSettingsProto_Wifi) GetScanAlwaysAvailable() *SettingProto {
	if x != nil {
		return x.ScanAlwaysAvailable
	}
	return nil
}

func (x *GlobalSettingsProto_Wifi) GetWakeupEnabled() *SettingProto {
	if x != nil {
		return x.WakeupEnabled
	}
	return nil
}

func (x *GlobalSettingsProto_Wifi) GetSavedState() *SettingProto {
	if x != nil {
		return x.SavedState
	}
	return nil
}

func (x *GlobalSettingsProto_Wifi) GetSupplicantScanIntervalMs() *SettingProto {
	if x != nil {
		return x.SupplicantScanIntervalMs
	}
	return nil
}

func (x *GlobalSettingsProto_Wifi) GetEnhancedAutoJoin() *SettingProto {
	if x != nil {
		return x.EnhancedAutoJoin
	}
	return nil
}

func (x *GlobalSettingsProto_Wifi) GetNetworkShowRssi() *SettingProto {
	if x != nil {
		return x.NetworkShowRssi
	}
	return nil
}

func (x *GlobalSettingsProto_Wifi) GetScanIntervalWhenP2PConnectedMs() *SettingProto {
	if x != nil {
		return x.ScanIntervalWhenP2PConnectedMs
	}
	return nil
}

func (x *GlobalSettingsProto_Wifi) GetWatchdogOn() *SettingProto {
	if x != nil {
		return x.WatchdogOn
	}
	return nil
}

func (x *GlobalSettingsProto_Wifi) GetWatchdogPoorNetworkTestEnabled() *SettingProto {
	if x != nil {
		return x.WatchdogPoorNetworkTestEnabled
	}
	return nil
}

func (x *GlobalSettingsProto_Wifi) GetSuspendOptimizationsEnabled() *SettingProto {
	if x != nil {
		return x.SuspendOptimizationsEnabled
	}
	return nil
}

func (x *GlobalSettingsProto_Wifi) GetVerboseLoggingEnabled() *SettingProto {
	if x != nil {
		return x.VerboseLoggingEnabled
	}
	return nil
}

func (x *GlobalSettingsProto_Wifi) GetMaxDhcpRetryCount() *SettingProto {
	if x != nil {
		return x.MaxDhcpRetryCount
	}
	return nil
}

func (x *GlobalSettingsProto_Wifi) GetMobileDataTransitionWakelockTimeoutMs() *SettingProto {
	if x != nil {
		return x.MobileDataTransitionWakelockTimeoutMs
	}
	return nil
}

func (x *GlobalSettingsProto_Wifi) GetDeviceOwnerConfigsLockdown() *SettingProto {
	if x != nil {
		return x.DeviceOwnerConfigsLockdown
	}
	return nil
}

func (x *GlobalSettingsProto_Wifi) GetFrequencyBand() *SettingProto {
	if x != nil {
		return x.FrequencyBand
	}
	return nil
}

func (x *GlobalSettingsProto_Wifi) GetP2PDeviceName() *SettingProto {
	if x != nil {
		return x.P2PDeviceName
	}
	return nil
}

func (x *GlobalSettingsProto_Wifi) GetEphemeralOutOfRangeTimeoutMs() *SettingProto {
	if x != nil {
		return x.EphemeralOutOfRangeTimeoutMs
	}
	return nil
}

func (x *GlobalSettingsProto_Wifi) GetOnWhenProxyDisconnected() *SettingProto {
	if x != nil {
		return x.OnWhenProxyDisconnected
	}
	return nil
}

func (x *GlobalSettingsProto_Wifi) GetBounceDelayOverrideMs() *SettingProto {
	if x != nil {
		return x.BounceDelayOverrideMs
	}
	return nil
}

type GlobalSettingsProto_Zen struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode            *SettingProto `protobuf:"bytes,1,opt,name=mode" json:"mode,omitempty"`
	ModeRingerLevel *SettingProto `protobuf:"bytes,2,opt,name=mode_ringer_level,json=modeRingerLevel" json:"mode_ringer_level,omitempty"`
	ModeConfigEtag  *SettingProto `protobuf:"bytes,3,opt,name=mode_config_etag,json=modeConfigEtag" json:"mode_config_etag,omitempty"`
}

func (x *GlobalSettingsProto_Zen) Reset() {
	*x = GlobalSettingsProto_Zen{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSettingsProto_Zen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSettingsProto_Zen) ProtoMessage() {}

func (x *GlobalSettingsProto_Zen) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSettingsProto_Zen.ProtoReflect.Descriptor instead.
func (*GlobalSettingsProto_Zen) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP(), []int{0, 66}
}

func (x *GlobalSettingsProto_Zen) GetMode() *SettingProto {
	if x != nil {
		return x.Mode
	}
	return nil
}

func (x *GlobalSettingsProto_Zen) GetModeRingerLevel() *SettingProto {
	if x != nil {
		return x.ModeRingerLevel
	}
	return nil
}

func (x *GlobalSettingsProto_Zen) GetModeConfigEtag() *SettingProto {
	if x != nil {
		return x.ModeConfigEtag
	}
	return nil
}

var File_frameworks_base_core_proto_android_providers_settings_global_proto protoreflect.FileDescriptor

var file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDesc = []byte{
	0x0a, 0x42, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x2f, 0x62, 0x61, 0x73,
	0x65, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x1a, 0x42, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x2f, 0x62, 0x61, 0x73,
	0x65, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x30, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x95, 0x90, 0x03, 0x0a, 0x13, 0x47, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x67, 0x0a, 0x15, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32,
	0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x14, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x66, 0x0a, 0x1a, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x18, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73,
	0x12, 0x54, 0x0a, 0x0b, 0x61, 0x64, 0x62, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42,
	0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x0a, 0x61, 0x64, 0x62, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x66, 0x0a, 0x15, 0x61, 0x64, 0x64, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x5f, 0x77, 0x68, 0x65, 0x6e, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42,
	0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x12, 0x61, 0x64, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x57, 0x68, 0x65, 0x6e, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x61,
	0x0a, 0x0d, 0x61, 0x69, 0x72, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x69, 0x72, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x52, 0x0c, 0x61, 0x69, 0x72, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x12, 0x91, 0x01, 0x0a, 0x2c, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x77, 0x68, 0x65, 0x6e, 0x5f,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x63, 0x6b,
	0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x26, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x55, 0x73, 0x65, 0x72, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x69, 0x6e,
	0x67, 0x57, 0x68, 0x65, 0x6e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x4c,
	0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x67, 0x0a, 0x1b, 0x61, 0x6c, 0x77, 0x61, 0x79, 0x73, 0x5f,
	0x6f, 0x6e, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x18, 0x61, 0x6c, 0x77, 0x61, 0x79, 0x73, 0x4f, 0x6e, 0x44, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x6d,
	0x0a, 0x18, 0x61, 0x6c, 0x77, 0x61, 0x79, 0x73, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87,
	0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x16, 0x61, 0x6c, 0x77, 0x61, 0x79, 0x73, 0x46, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x6b, 0x0a,
	0x17, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03,
	0x08, 0xc8, 0x01, 0x52, 0x15, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x6f, 0x72, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x51, 0x0a, 0x07, 0x61, 0x6e,
	0x6f, 0x6d, 0x61, 0x6c, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x61, 0x6e,
	0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6e, 0x6f,
	0x6d, 0x61, 0x6c, 0x79, 0x52, 0x07, 0x61, 0x6e, 0x6f, 0x6d, 0x61, 0x6c, 0x79, 0x12, 0x4c, 0x0a,
	0x06, 0x61, 0x70, 0x6e, 0x5f, 0x64, 0x62, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x70, 0x6e, 0x44, 0x62, 0x52, 0x05, 0x61, 0x70, 0x6e, 0x44, 0x62, 0x12, 0x45, 0x0a, 0x03, 0x61,
	0x70, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x70, 0x70, 0x52, 0x03, 0x61,
	0x70, 0x70, 0x12, 0x65, 0x0a, 0x14, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x67,
	0x70, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87,
	0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x12, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x65, 0x64, 0x47,
	0x70, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x6a, 0x0a, 0x17, 0x61, 0x75, 0x64,
	0x69, 0x6f, 0x5f, 0x73, 0x61, 0x66, 0x65, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52,
	0x14, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x61, 0x66, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x74, 0x0a, 0x1c, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x73,
	0x61, 0x66, 0x65, 0x5f, 0x63, 0x73, 0x64, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x9d, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8,
	0x01, 0x52, 0x18, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x61, 0x66, 0x65, 0x43, 0x73, 0x64, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x72, 0x0a, 0x1b, 0x61,
	0x75, 0x64, 0x69, 0x6f, 0x5f, 0x73, 0x61, 0x66, 0x65, 0x5f, 0x63, 0x73, 0x64, 0x5f, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x9e, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5,
	0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x17, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x61, 0x66,
	0x65, 0x43, 0x73, 0x64, 0x4e, 0x65, 0x78, 0x74, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x12,
	0x72, 0x0a, 0x1b, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x73, 0x61, 0x66, 0x65, 0x5f, 0x63, 0x73,
	0x64, 0x5f, 0x64, 0x6f, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x9f,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42,
	0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x17, 0x61, 0x75, 0x64, 0x69,
	0x6f, 0x53, 0x61, 0x66, 0x65, 0x43, 0x73, 0x64, 0x44, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x12, 0x55, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x6f, 0x66, 0x69, 0x6c, 0x6c, 0x18,
	0x8c, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x66, 0x69, 0x6c, 0x6c,
	0x52, 0x08, 0x61, 0x75, 0x74, 0x6f, 0x66, 0x69, 0x6c, 0x6c, 0x12, 0x4f, 0x0a, 0x06, 0x62, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x18, 0x92, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x61, 0x6e,
	0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x61, 0x63,
	0x6b, 0x75, 0x70, 0x52, 0x06, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x51, 0x0a, 0x07, 0x62,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x79, 0x52, 0x07, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x12, 0x52,
	0x0a, 0x08, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x63, 0x61, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x37, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x42, 0x6c, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x07, 0x62, 0x6c, 0x65, 0x53, 0x63,
	0x61, 0x6e, 0x12, 0x57, 0x0a, 0x09, 0x62, 0x6c, 0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x6c, 0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68,
	0x52, 0x09, 0x62, 0x6c, 0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x12, 0x52, 0x0a, 0x0a, 0x62,
	0x6f, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03,
	0x03, 0x08, 0xc8, 0x01, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x73, 0x0a, 0x1b, 0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x5f, 0x66,
	0x72, 0x65, 0x65, 0x7a, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x98,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42,
	0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x18, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x64, 0x41, 0x70, 0x70, 0x73, 0x46, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x72, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x12, 0x5b, 0x0a, 0x0f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x61, 0x75, 0x74,
	0x6f, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x79, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08,
	0xc8, 0x01, 0x52, 0x0d, 0x63, 0x61, 0x6c, 0x6c, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x74, 0x72,
	0x79, 0x12, 0x64, 0x0a, 0x0e, 0x63, 0x61, 0x70, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x6f, 0x72,
	0x74, 0x61, 0x6c, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x61, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x70, 0x74, 0x69,
	0x76, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x52, 0x0d, 0x63, 0x61, 0x70, 0x74, 0x69, 0x76,
	0x65, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x12, 0x51, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x72, 0x69,
	0x65, 0x72, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65,
	0x72, 0x52, 0x07, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x12, 0x48, 0x0a, 0x04, 0x63, 0x64,
	0x6d, 0x61, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x64, 0x6d, 0x61, 0x52, 0x04,
	0x63, 0x64, 0x6d, 0x61, 0x12, 0x4c, 0x0a, 0x07, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x6f, 0x6e, 0x18,
	0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42,
	0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x06, 0x63, 0x65, 0x6c, 0x6c,
	0x4f, 0x6e, 0x12, 0x52, 0x0a, 0x08, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x70, 0x69, 0x6e, 0x18, 0x1d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x65, 0x72, 0x74, 0x50, 0x69, 0x6e, 0x52, 0x07, 0x63,
	0x65, 0x72, 0x74, 0x50, 0x69, 0x6e, 0x12, 0x82, 0x01, 0x0a, 0x23, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x65, 0x64, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09,
	0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x20, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x65, 0x64, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x62, 0x0a, 0x12, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x11, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x60, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18,
	0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x12, 0x76, 0x0a, 0x1d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x1a, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x53, 0x79,
	0x6e, 0x63, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x76, 0x0a, 0x1d, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x77,
	0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87,
	0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x1a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x57, 0x61, 0x6c, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x48, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x34, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x54, 0x0a, 0x08, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x12, 0x55, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x08,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4b, 0x0a, 0x05, 0x64, 0x65, 0x62, 0x75,
	0x67, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x52, 0x05,
	0x64, 0x65, 0x62, 0x75, 0x67, 0x12, 0x51, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x18, 0x26, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52,
	0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x5d, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44,
	0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x4e, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x24, 0x64, 0x69, 0x73, 0x6b,
	0x5f, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64,
	0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x20, 0x64, 0x69, 0x73,
	0x6b, 0x46, 0x72, 0x65, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x69, 0x6e, 0x67, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x51, 0x0a,
	0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37,
	0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x12, 0x5e, 0x0a, 0x0c, 0x64, 0x6e, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72,
	0x18, 0x2b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x6c,
	0x76, 0x65, 0x72, 0x52, 0x0b, 0x64, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72,
	0x12, 0x6c, 0x0a, 0x18, 0x64, 0x6f, 0x63, 0x6b, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x2c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f,
	0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x15, 0x64, 0x6f, 0x63, 0x6b, 0x41, 0x75, 0x64,
	0x69, 0x6f, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x54,
	0x0a, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x38, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x08, 0x64, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x51, 0x0a, 0x07, 0x64, 0x72, 0x6f, 0x70, 0x62, 0x6f, 0x78, 0x18,
	0x2e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x62, 0x6f, 0x78, 0x52, 0x07,
	0x64, 0x72, 0x6f, 0x70, 0x62, 0x6f, 0x78, 0x12, 0x78, 0x0a, 0x15, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x73, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x73,
	0x18, 0x8f, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x13, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x61, 0x76, 0x69, 0x6e, 0x67,
	0x73, 0x12, 0x57, 0x0a, 0x09, 0x65, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x2f,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x52,
	0x09, 0x65, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x4e, 0x0a, 0x06, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x30, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x6b, 0x0a, 0x17, 0x65, 0x6e,
	0x63, 0x6f, 0x64, 0x65, 0x64, 0x5f, 0x73, 0x75, 0x72, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x31, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e,
	0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01,
	0x52, 0x15, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x53, 0x75, 0x72, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x6c, 0x0a, 0x18, 0x65, 0x6e, 0x68, 0x61, 0x6e,
	0x63, 0x65, 0x64, 0x5f, 0x34, 0x67, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x15,
	0x65, 0x6e, 0x68, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x34, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x56, 0x0a, 0x12, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6c,
	0x6f, 0x67, 0x63, 0x61, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x33, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x10, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x4c, 0x6f, 0x67, 0x63, 0x61, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x4b, 0x0a,
	0x05, 0x65, 0x75, 0x69, 0x63, 0x63, 0x18, 0x34, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x75,
	0x69, 0x63, 0x63, 0x52, 0x05, 0x65, 0x75, 0x69, 0x63, 0x63, 0x12, 0x65, 0x0a, 0x14, 0x66, 0x61,
	0x6e, 0x63, 0x79, 0x5f, 0x69, 0x6d, 0x65, 0x5f, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x35, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x12, 0x66,
	0x61, 0x6e, 0x63, 0x79, 0x49, 0x6d, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x6a, 0x0a, 0x17, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77,
	0x5f, 0x6f, 0x6e, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x18, 0x36, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f,
	0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x14, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x41, 0x6c,
	0x6c, 0x6f, 0x77, 0x4f, 0x6e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x12, 0x54, 0x0a,
	0x0b, 0x66, 0x70, 0x73, 0x5f, 0x64, 0x69, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x18, 0x37, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f,
	0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x0a, 0x66, 0x70, 0x73, 0x44, 0x69, 0x76, 0x69,
	0x73, 0x6f, 0x72, 0x12, 0x6f, 0x0a, 0x19, 0x66, 0x73, 0x74, 0x72, 0x69, 0x6d, 0x5f, 0x6d, 0x61,
	0x6e, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x18, 0x38, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x17, 0x66, 0x73, 0x74,
	0x72, 0x69, 0x6d, 0x4d, 0x61, 0x6e, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x12, 0x6b, 0x0a, 0x11, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x68,
	0x74, 0x74, 0x70, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x18, 0x39, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3f, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x48, 0x74, 0x74, 0x70, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x52, 0x0f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x48, 0x74, 0x74, 0x70, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x12, 0x75, 0x0a, 0x1d, 0x67, 0x70, 0x72, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f,
	0x6d, 0x73, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x19, 0x67,
	0x70, 0x72, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x4d, 0x73, 0x12, 0x45, 0x0a, 0x03, 0x67, 0x70, 0x75, 0x18,
	0x3b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x70, 0x75, 0x52, 0x03, 0x67, 0x70, 0x75, 0x12,
	0x48, 0x0a, 0x04, 0x68, 0x64, 0x6d, 0x69, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48,
	0x64, 0x6d, 0x69, 0x52, 0x04, 0x68, 0x64, 0x6d, 0x69, 0x12, 0x78, 0x0a, 0x1e, 0x68, 0x65, 0x61,
	0x64, 0x73, 0x5f, 0x75, 0x70, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x3d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5,
	0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x1b, 0x68, 0x65, 0x61, 0x64, 0x73, 0x55, 0x70, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x7a, 0x0a, 0x1f, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x5f, 0x61, 0x70,
	0x69, 0x5f, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x65, 0x78, 0x65, 0x6d,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8,
	0x01, 0x52, 0x1c, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x41, 0x70, 0x69, 0x42, 0x6c, 0x61, 0x63,
	0x6b, 0x6c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x64, 0x0a, 0x0e, 0x69, 0x6e, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x69, 0x6e, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5b, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x5f, 0x61, 0x70, 0x70, 0x18, 0x40, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x41,
	0x70, 0x70, 0x12, 0x67, 0x0a, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x69, 0x72,
	0x65, 0x77, 0x61, 0x6c, 0x6c, 0x18, 0x41, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x61, 0x6e,
	0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x52, 0x0e, 0x69, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x12, 0x70, 0x0a, 0x1a, 0x6b,
	0x65, 0x65, 0x70, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x62,
	0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x43, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03,
	0x03, 0x08, 0xc8, 0x01, 0x52, 0x17, 0x6b, 0x65, 0x65, 0x70, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x49, 0x6e, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x4f, 0x0a,
	0x07, 0x6c, 0x61, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x44, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36,
	0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4c, 0x61, 0x6e, 0x67, 0x49, 0x64, 0x52, 0x06, 0x6c, 0x61, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x54,
	0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x45, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x38, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x62, 0x0a, 0x0e, 0x6c, 0x6f, 0x77, 0x5f, 0x70, 0x6f, 0x77, 0x65,
	0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x46, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f,
	0x77, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0c, 0x6c, 0x6f, 0x77, 0x50,
	0x6f, 0x77, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x61, 0x0a, 0x12, 0x6c, 0x74, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x64, 0x18, 0x47,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09,
	0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x10, 0x6c, 0x74, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x64, 0x12, 0x51, 0x0a, 0x0f, 0x6d,
	0x61, 0x78, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x97,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x0d, 0x6d, 0x61, 0x78, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x8a,
	0x01, 0x0a, 0x1b, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x9c,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67,
	0x52, 0x19, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x66, 0x0a, 0x15, 0x6d,
	0x64, 0x63, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x72,
	0x65, 0x74, 0x72, 0x79, 0x18, 0x48, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52,
	0x12, 0x6d, 0x64, 0x63, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x4d, 0x61, 0x78, 0x52, 0x65,
	0x74, 0x72, 0x79, 0x12, 0x45, 0x0a, 0x03, 0x6d, 0x68, 0x6c, 0x18, 0x49, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x33, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4d, 0x68, 0x6c, 0x52, 0x03, 0x6d, 0x68, 0x6c, 0x12, 0x5b, 0x0a, 0x0b, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x4a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3a, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x54, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x65, 0x5f,
	0x72, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x18, 0x4b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8,
	0x01, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x52, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x12, 0x7f, 0x0a,
	0x22, 0x6d, 0x75, 0x74, 0x65, 0x5f, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x72, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0xa0, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52,
	0x1d, 0x6d, 0x75, 0x74, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x57, 0x69, 0x74, 0x68, 0x52, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x55,
	0x0a, 0x09, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x73, 0x69, 0x6d, 0x18, 0x4c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x38, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x69, 0x6d, 0x52, 0x08, 0x6d, 0x75, 0x6c,
	0x74, 0x69, 0x53, 0x69, 0x6d, 0x12, 0x7e, 0x0a, 0x21, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f,
	0x66, 0x6c, 0x61, 0x67, 0x73, 0x5f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x90, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5,
	0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x1d, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x46, 0x6c,
	0x61, 0x67, 0x73, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x54, 0x0a, 0x08, 0x6e, 0x65, 0x74, 0x73, 0x74, 0x61, 0x74,
	0x73, 0x18, 0x4d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x65, 0x74, 0x73, 0x74, 0x61, 0x74,
	0x73, 0x52, 0x08, 0x6e, 0x65, 0x74, 0x73, 0x74, 0x61, 0x74, 0x73, 0x12, 0x51, 0x0a, 0x07, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x69,
	0x0a, 0x16, 0x6e, 0x65, 0x77, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x4f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03,
	0x08, 0xc8, 0x01, 0x52, 0x14, 0x6e, 0x65, 0x77, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x41,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x8a, 0x01, 0x0a, 0x28, 0x6e, 0x69,
	0x67, 0x68, 0x74, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x66, 0x6f, 0x72, 0x63,
	0x65, 0x64, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x50, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8,
	0x01, 0x52, 0x23, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x46,
	0x6f, 0x72, 0x63, 0x65, 0x64, 0x41, 0x75, 0x74, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x41, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x48, 0x0a, 0x04, 0x6e, 0x69, 0x74, 0x7a, 0x18, 0x51,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x69, 0x74, 0x7a, 0x52, 0x04, 0x6e, 0x69, 0x74, 0x7a,
	0x12, 0x60, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x52, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x79, 0x0a, 0x1f, 0x6e, 0x72, 0x5f, 0x6e, 0x73, 0x61, 0x5f, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x6f, 0x66, 0x66,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x99, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8,
	0x01, 0x52, 0x1a, 0x6e, 0x72, 0x4e, 0x73, 0x61, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x4f, 0x66, 0x66, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x45, 0x0a,
	0x03, 0x6e, 0x74, 0x70, 0x18, 0x54, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x74, 0x70, 0x52,
	0x03, 0x6e, 0x74, 0x70, 0x12, 0x81, 0x01, 0x0a, 0x19, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x62,
	0x73, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x79, 0x18, 0x55, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x62,
	0x73, 0x65, 0x6e, 0x74, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79,
	0x52, 0x16, 0x75, 0x73, 0x65, 0x72, 0x41, 0x62, 0x73, 0x65, 0x6e, 0x74, 0x53, 0x6d, 0x61, 0x6c,
	0x6c, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x12, 0x74, 0x0a, 0x1c, 0x6f, 0x74, 0x61, 0x5f,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69,
	0x63, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x56, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03,
	0x08, 0xc8, 0x01, 0x52, 0x19, 0x6f, 0x74, 0x61, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x41,
	0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x6b,
	0x0a, 0x17, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x57, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03,
	0x03, 0x08, 0xc8, 0x01, 0x52, 0x15, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x96, 0x01, 0x0a, 0x2e,
	0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x5f, 0x61, 0x6e, 0x79, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x58,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09,
	0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x29, 0x6f, 0x76, 0x65, 0x72, 0x72,
	0x69, 0x64, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x41, 0x6e, 0x79, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x5d, 0x0a, 0x10, 0x70, 0x61, 0x63, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x59, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03,
	0x08, 0xc8, 0x01, 0x52, 0x0e, 0x70, 0x61, 0x63, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x65,
	0x6c, 0x61, 0x79, 0x12, 0x6a, 0x0a, 0x10, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0f,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12,
	0x5e, 0x0a, 0x0c, 0x70, 0x64, 0x70, 0x5f, 0x77, 0x61, 0x74, 0x63, 0x68, 0x64, 0x6f, 0x67, 0x18,
	0x5b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x64, 0x70, 0x57, 0x61, 0x74, 0x63, 0x68, 0x64,
	0x6f, 0x67, 0x52, 0x0b, 0x70, 0x64, 0x70, 0x57, 0x61, 0x74, 0x63, 0x68, 0x64, 0x6f, 0x67, 0x12,
	0x4f, 0x0a, 0x0e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x18, 0x5c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x52, 0x0d, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x12, 0x60, 0x0a, 0x17, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x5d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x15, 0x70, 0x6f, 0x77,
	0x65, 0x72, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x73, 0x12, 0x81, 0x01, 0x0a, 0x23, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x73, 0x18, 0x9a, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5,
	0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x1e, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x42, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x4c, 0x6f, 0x6e, 0x67, 0x50, 0x72, 0x65, 0x73, 0x73, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x12, 0x61, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x70, 0x61, 0x69,
	0x64, 0x5f, 0x73, 0x65, 0x74, 0x75, 0x70, 0x18, 0x5f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x72, 0x65, 0x70, 0x61, 0x69, 0x64, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x0c, 0x70, 0x72, 0x65,
	0x70, 0x61, 0x69, 0x64, 0x53, 0x65, 0x74, 0x75, 0x70, 0x12, 0x51, 0x0a, 0x07, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x18, 0x60, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x7e, 0x0a, 0x22,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x70, 0x6e,
	0x5f, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x69, 0x6e, 0x5f,
	0x6d, 0x73, 0x18, 0x61, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x1d, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x41, 0x70, 0x6e, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x4d, 0x73, 0x12, 0x87, 0x01, 0x0a,
	0x26, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x65, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x64, 0x5f,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x62, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08,
	0xc8, 0x01, 0x52, 0x22, 0x72, 0x65, 0x61, 0x64, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x64, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x72, 0x0a, 0x1b, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x64, 0x65,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x18, 0x63, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e,
	0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01,
	0x52, 0x18, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x54, 0x6f, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x12, 0x65, 0x0a, 0x14, 0x73, 0x61,
	0x66, 0x65, 0x5f, 0x62, 0x6f, 0x6f, 0x74, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x12, 0x73,
	0x61, 0x66, 0x65, 0x42, 0x6f, 0x6f, 0x74, 0x44, 0x69, 0x73, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x64, 0x12, 0x51, 0x0a, 0x07, 0x73, 0x65, 0x6c, 0x69, 0x6e, 0x75, 0x78, 0x18, 0x65, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x37, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x6c, 0x69, 0x6e, 0x75, 0x78, 0x52, 0x07, 0x73, 0x65, 0x6c,
	0x69, 0x6e, 0x75, 0x78, 0x12, 0x66, 0x0a, 0x15, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x66, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a,
	0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x12, 0x73, 0x65, 0x6e, 0x64, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x65, 0x0a, 0x14,
	0x73, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x5f, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52,
	0x12, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x66, 0x0a, 0x1a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x63, 0x75, 0x74, 0x5f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x73, 0x18, 0x68, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x52, 0x18, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x63, 0x75, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x6a, 0x0a, 0x17, 0x73,
	0x68, 0x6f, 0x77, 0x5f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x63, 0x72, 0x61, 0x73, 0x68, 0x5f,
	0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x18, 0x69, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8,
	0x01, 0x52, 0x14, 0x73, 0x68, 0x6f, 0x77, 0x46, 0x69, 0x72, 0x73, 0x74, 0x43, 0x72, 0x61, 0x73,
	0x68, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x12, 0x87, 0x01, 0x0a, 0x26, 0x73, 0x68, 0x6f, 0x77,
	0x5f, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x5f, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x65, 0x72,
	0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x8d, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x21,
	0x73, 0x68, 0x6f, 0x77, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68,
	0x65, 0x72, 0x49, 0x63, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x73, 0x0a, 0x1c, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x69, 0x6e, 0x5f, 0x63, 0x72, 0x61, 0x73, 0x68, 0x5f, 0x64, 0x69, 0x61, 0x6c, 0x6f,
	0x67, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x18, 0x73, 0x68,
	0x6f, 0x77, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x43, 0x72, 0x61, 0x73, 0x68,
	0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x12, 0x6d, 0x0a, 0x19, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6d,
	0x75, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x63, 0x72, 0x61, 0x73, 0x68, 0x5f, 0x64, 0x69, 0x61,
	0x6c, 0x6f, 0x67, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x15,
	0x73, 0x68, 0x6f, 0x77, 0x4d, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x43, 0x72, 0x61, 0x73, 0x68, 0x44,
	0x69, 0x61, 0x6c, 0x6f, 0x67, 0x12, 0x91, 0x01, 0x0a, 0x2b, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6e,
	0x65, 0x77, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64,
	0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x8e, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8,
	0x01, 0x52, 0x26, 0x73, 0x68, 0x6f, 0x77, 0x4e, 0x65, 0x77, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x67, 0x0a, 0x0f, 0x73, 0x6d, 0x61,
	0x72, 0x74, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x6c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x03, 0x73, 0x6d, 0x73, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x33, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x6d, 0x73, 0x52, 0x03, 0x73, 0x6d, 0x73, 0x12, 0x4e, 0x0a, 0x06, 0x73, 0x6f, 0x75,
	0x6e, 0x64, 0x73, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x61, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x6f, 0x75, 0x6e, 0x64,
	0x73, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x61, 0x0a, 0x0d, 0x73, 0x6f, 0x75,
	0x6e, 0x64, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3c, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x0c,
	0x73, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x7c, 0x0a, 0x21,
	0x73, 0x70, 0x65, 0x65, 0x64, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x5f, 0x65, 0x76, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x67, 0x65, 0x5f, 0x6d,
	0x73, 0x18, 0x70, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x1c, 0x73, 0x70,
	0x65, 0x65, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x43, 0x61, 0x63, 0x68, 0x65, 0x45, 0x76, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x67, 0x65, 0x4d, 0x73, 0x12, 0x78, 0x0a, 0x1e, 0x73, 0x71,
	0x6c, 0x69, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x5f, 0x77, 0x61, 0x6c, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x71, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f,
	0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x1b, 0x73, 0x71, 0x6c, 0x69, 0x74, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x57, 0x61, 0x6c, 0x46,
	0x6c, 0x61, 0x67, 0x73, 0x12, 0x6b, 0x0a, 0x18, 0x73, 0x74, 0x61, 0x79, 0x5f, 0x6f, 0x6e, 0x5f,
	0x77, 0x68, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x67, 0x65, 0x64, 0x5f, 0x69, 0x6e,
	0x18, 0x72, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x14, 0x73, 0x74, 0x61,
	0x79, 0x4f, 0x6e, 0x57, 0x68, 0x69, 0x6c, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x67, 0x65, 0x64, 0x49,
	0x6e, 0x12, 0x51, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x73, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x37, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x07, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x12, 0x48, 0x0a, 0x04, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x74, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x34, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x04, 0x73, 0x79, 0x6e, 0x63, 0x12, 0x45,
	0x0a, 0x03, 0x73, 0x79, 0x73, 0x18, 0x75, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x6e,
	0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x79, 0x73,
	0x52, 0x03, 0x73, 0x79, 0x73, 0x12, 0x66, 0x0a, 0x15, 0x74, 0x63, 0x70, 0x5f, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x72, 0x77, 0x6e, 0x64, 0x18, 0x76,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09,
	0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x12, 0x74, 0x63, 0x70, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x77, 0x6e, 0x64, 0x12, 0x73, 0x0a,
	0x13, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x77, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x18, 0x77, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x65, 0x6d, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x12,
	0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x57, 0x61, 0x72, 0x6e, 0x69,
	0x6e, 0x67, 0x12, 0x4e, 0x0a, 0x06, 0x74, 0x65, 0x74, 0x68, 0x65, 0x72, 0x18, 0x78, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x36, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x65, 0x74, 0x68, 0x65, 0x72, 0x52, 0x06, 0x74, 0x65, 0x74, 0x68,
	0x65, 0x72, 0x12, 0x64, 0x0a, 0x19, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73, 0x18,
	0x79, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x17, 0x74, 0x65, 0x78, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x5b, 0x0a, 0x0f, 0x74, 0x68, 0x65, 0x61,
	0x74, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x6f, 0x6e, 0x18, 0x7a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5,
	0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x0d, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x4d,
	0x6f, 0x64, 0x65, 0x4f, 0x6e, 0x12, 0x6c, 0x0a, 0x18, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6f, 0x6e,
	0x6c, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x73, 0x18, 0x7b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x15, 0x74, 0x69,
	0x6d, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x73, 0x12, 0x71, 0x0a, 0x1a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x63, 0x61, 0x6c,
	0x65, 0x18, 0x7c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x18, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x4e, 0x0a, 0x06, 0x74, 0x7a, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x7d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x7a, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x06,
	0x74, 0x7a, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x90, 0x01, 0x0a, 0x2c, 0x75, 0x6e, 0x75, 0x73, 0x65,
	0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f,
	0x6c, 0x69, 0x62, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x5f, 0x6d, 0x73, 0x18, 0x7e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08,
	0xc8, 0x01, 0x52, 0x25, 0x75, 0x6e, 0x75, 0x73, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x4c, 0x69, 0x62, 0x4d, 0x69, 0x6e, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x4d, 0x73, 0x12, 0x6c, 0x0a, 0x18, 0x75, 0x73, 0x62,
	0x5f, 0x6d, 0x61, 0x73, 0x73, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x7f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e,
	0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01,
	0x52, 0x15, 0x75, 0x73, 0x62, 0x4d, 0x61, 0x73, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x5c, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x5f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5f, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x80, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5,
	0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x4d, 0x61, 0x69, 0x6c, 0x12, 0x67, 0x0a, 0x15, 0x75, 0x73, 0x65, 0x5f, 0x6f, 0x70, 0x65,
	0x6e, 0x5f, 0x77, 0x69, 0x66, 0x69, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x81,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42,
	0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x12, 0x75, 0x73, 0x65, 0x4f,
	0x70, 0x65, 0x6e, 0x57, 0x69, 0x66, 0x69, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x55,
	0x0a, 0x0b, 0x75, 0x77, 0x62, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x9b, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09,
	0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x0a, 0x75, 0x77, 0x62, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x5a, 0x0a, 0x0e, 0x76, 0x74, 0x5f, 0x69, 0x6d, 0x73, 0x5f,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x82, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03,
	0x08, 0xc8, 0x01, 0x52, 0x0c, 0x76, 0x74, 0x49, 0x6d, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x60, 0x0a, 0x11, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x64, 0x65,
	0x62, 0x75, 0x67, 0x67, 0x65, 0x72, 0x18, 0x83, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08,
	0xc8, 0x01, 0x52, 0x0f, 0x77, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x44, 0x65, 0x62, 0x75, 0x67,
	0x67, 0x65, 0x72, 0x12, 0x52, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x76, 0x69, 0x65, 0x77, 0x18, 0x84,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x65, 0x62, 0x76, 0x69, 0x65, 0x77, 0x52, 0x07,
	0x77, 0x65, 0x62, 0x76, 0x69, 0x65, 0x77, 0x12, 0x46, 0x0a, 0x03, 0x77, 0x66, 0x63, 0x18, 0x85,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x66, 0x63, 0x52, 0x03, 0x77, 0x66, 0x63, 0x12,
	0x49, 0x0a, 0x04, 0x77, 0x69, 0x66, 0x69, 0x18, 0x86, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34,
	0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x57, 0x69, 0x66, 0x69, 0x52, 0x04, 0x77, 0x69, 0x66, 0x69, 0x12, 0x8c, 0x01, 0x0a, 0x28, 0x77,
	0x69, 0x6d, 0x61, 0x78, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x5f, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x6e, 0x18, 0x87, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03,
	0x08, 0xc8, 0x01, 0x52, 0x24, 0x77, 0x69, 0x6d, 0x61, 0x78, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x6e, 0x12, 0x6a, 0x0a, 0x16, 0x77, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x5f, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x63,
	0x61, 0x6c, 0x65, 0x18, 0x88, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52,
	0x14, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x56, 0x0a, 0x0c, 0x77, 0x74, 0x66, 0x5f, 0x69, 0x73, 0x5f,
	0x66, 0x61, 0x74, 0x61, 0x6c, 0x18, 0x89, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8,
	0x01, 0x52, 0x0a, 0x77, 0x74, 0x66, 0x49, 0x73, 0x46, 0x61, 0x74, 0x61, 0x6c, 0x12, 0x46, 0x0a,
	0x03, 0x7a, 0x65, 0x6e, 0x18, 0x8a, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x6e,
	0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x5a, 0x65, 0x6e,
	0x52, 0x03, 0x7a, 0x65, 0x6e, 0x12, 0x57, 0x0a, 0x0c, 0x7a, 0x72, 0x61, 0x6d, 0x5f, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x8b, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8,
	0x01, 0x52, 0x0b, 0x7a, 0x72, 0x61, 0x6d, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x60,
	0x0a, 0x11, 0x61, 0x70, 0x70, 0x5f, 0x6f, 0x70, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x73, 0x18, 0x94, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52,
	0x0f, 0x61, 0x70, 0x70, 0x4f, 0x70, 0x73, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73,
	0x12, 0x82, 0x01, 0x0a, 0x23, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x91, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03,
	0x03, 0x08, 0xc8, 0x01, 0x52, 0x1f, 0x74, 0x65, 0x78, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x8c, 0x02, 0x0a, 0x0c, 0x41, 0x69, 0x72, 0x70, 0x6c, 0x61,
	0x6e, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x43, 0x0a, 0x02, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f,
	0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x02, 0x6f, 0x6e, 0x12, 0x4b, 0x0a, 0x06, 0x72,
	0x61, 0x64, 0x69, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e,
	0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01,
	0x52, 0x06, 0x72, 0x61, 0x64, 0x69, 0x6f, 0x73, 0x12, 0x60, 0x0a, 0x11, 0x74, 0x6f, 0x67, 0x67,
	0x6c, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x61, 0x64, 0x69, 0x6f, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a,
	0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x10, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x61, 0x64, 0x69, 0x6f, 0x73, 0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87,
	0x03, 0x02, 0x08, 0x64, 0x1a, 0x8c, 0x02, 0x0a, 0x07, 0x41, 0x6e, 0x6f, 0x6d, 0x61, 0x6c, 0x79,
	0x12, 0x59, 0x0a, 0x13, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x12, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x5a, 0x0a, 0x0e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a,
	0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03,
	0x02, 0x08, 0x64, 0x1a, 0xc3, 0x01, 0x0a, 0x05, 0x41, 0x70, 0x6e, 0x44, 0x62, 0x12, 0x56, 0x0a,
	0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x52, 0x10, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x58, 0x0a, 0x13, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x11, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x55, 0x72, 0x6c, 0x3a,
	0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x1a, 0xe8, 0x03, 0x0a, 0x03, 0x41, 0x70,
	0x70, 0x12, 0x5c, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x62, 0x79, 0x5f, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52,
	0x0e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x62, 0x79, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x6d, 0x0a, 0x18, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5,
	0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x16, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x70,
	0x0a, 0x1a, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x74, 0x61,
	0x6e, 0x64, 0x62, 0x79, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f,
	0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x17, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x64, 0x41,
	0x70, 0x70, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x62, 0x79, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x91, 0x01, 0x0a, 0x2c, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x5f,
	0x73, 0x74, 0x61, 0x6e, 0x64, 0x62, 0x79, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x73, 0x6d, 0x61, 0x6c,
	0x6c, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x26, 0x66, 0x6f,
	0x72, 0x63, 0x65, 0x64, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x62, 0x79, 0x46, 0x6f,
	0x72, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x4a, 0x04,
	0x08, 0x01, 0x10, 0x02, 0x1a, 0xb0, 0x03, 0x0a, 0x08, 0x41, 0x75, 0x74, 0x6f, 0x66, 0x69, 0x6c,
	0x6c, 0x12, 0x74, 0x0a, 0x1c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x19, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x12, 0x58, 0x0a, 0x0d, 0x6c, 0x6f, 0x67, 0x67, 0x69,
	0x6e, 0x67, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03,
	0x08, 0xc8, 0x01, 0x52, 0x0c, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x63, 0x0a, 0x13, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03,
	0x08, 0xc8, 0x01, 0x52, 0x11, 0x6d, 0x61, 0x78, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x65, 0x0a, 0x14, 0x6d, 0x61, 0x78, 0x5f, 0x76, 0x69,
	0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09,
	0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x12, 0x6d, 0x61, 0x78, 0x56, 0x69,
	0x73, 0x69, 0x62, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x3a, 0x08, 0x9a,
	0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x1a, 0x89, 0x01, 0x0a, 0x06, 0x42, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x12, 0x6f, 0x0a, 0x1f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e,
	0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x1c, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x4a, 0x04, 0x08,
	0x02, 0x10, 0x03, 0x1a, 0xd6, 0x04, 0x0a, 0x07, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x12,
	0x75, 0x0a, 0x1c, 0x64, 0x69, 0x73, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42,
	0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x1a, 0x64, 0x69, 0x73, 0x63,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x68, 0x72,
	0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x64, 0x0a, 0x13, 0x64, 0x69, 0x73, 0x63, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a,
	0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x12, 0x64, 0x69, 0x73, 0x63, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x51, 0x0a, 0x0f,
	0x73, 0x61, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x0e, 0x73, 0x61, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73, 0x12,
	0x6f, 0x0a, 0x1f, 0x73, 0x61, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x1c, 0x73, 0x61, 0x76, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73,
	0x12, 0x51, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x73, 0x12, 0x4d, 0x0a, 0x0d, 0x74, 0x69, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0c, 0x74, 0x69, 0x70, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x73, 0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x1a, 0xbb, 0x06, 0x0a,
	0x07, 0x42, 0x6c, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x12, 0x5e, 0x0a, 0x10, 0x61, 0x6c, 0x77, 0x61,
	0x79, 0x73, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f,
	0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x0f, 0x61, 0x6c, 0x77, 0x61, 0x79, 0x73, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x62, 0x0a, 0x13, 0x6c, 0x6f, 0x77, 0x5f,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42,
	0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x10, 0x6c, 0x6f, 0x77, 0x50,
	0x6f, 0x77, 0x65, 0x72, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x4d, 0x73, 0x12, 0x61, 0x0a, 0x12,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f,
	0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x10, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x4d, 0x73, 0x12,
	0x66, 0x0a, 0x15, 0x6c, 0x6f, 0x77, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x77,
	0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03,
	0x08, 0xc8, 0x01, 0x52, 0x12, 0x6c, 0x6f, 0x77, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x57,
	0x69, 0x6e, 0x64, 0x6f, 0x77, 0x4d, 0x73, 0x12, 0x66, 0x0a, 0x15, 0x6c, 0x6f, 0x77, 0x5f, 0x70,
	0x6f, 0x77, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x6d, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x12, 0x6c, 0x6f, 0x77,
	0x50, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x4d, 0x73, 0x12,
	0x65, 0x0a, 0x14, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x5f, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08,
	0xc8, 0x01, 0x52, 0x12, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x4d, 0x73, 0x12, 0x6a, 0x0a, 0x17, 0x6c, 0x6f, 0x77, 0x5f, 0x6c, 0x61,
	0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x6d,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x14, 0x6c, 0x6f,
	0x77, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x4d, 0x73, 0x12, 0x5c, 0x0a, 0x0f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e,
	0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01,
	0x52, 0x0e, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x6f, 0x64, 0x65,
	0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x1a, 0xc7, 0x0b, 0x0a, 0x09, 0x42,
	0x6c, 0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x12, 0x5b, 0x0a, 0x0f, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x6f, 0x66, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5,
	0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x0d, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4f, 0x66, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x11, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x10, 0x64, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x5d, 0x0a, 0x15,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e,
	0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x14, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x02, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x02, 0x6f, 0x6e,
	0x12, 0x57, 0x0a, 0x12, 0x68, 0x65, 0x61, 0x64, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x11, 0x68, 0x65, 0x61, 0x64, 0x73, 0x65, 0x74, 0x50,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x5a, 0x0a, 0x14, 0x61, 0x32, 0x64,
	0x70, 0x5f, 0x73, 0x69, 0x6e, 0x6b, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x52, 0x12, 0x61, 0x32, 0x64, 0x70, 0x53, 0x69, 0x6e, 0x6b, 0x50, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x58, 0x0a, 0x13, 0x61, 0x32, 0x64, 0x70, 0x5f, 0x73, 0x72,
	0x63, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x11, 0x61, 0x32,
	0x64, 0x70, 0x53, 0x72, 0x63, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12,
	0x6b, 0x0a, 0x1d, 0x61, 0x32, 0x64, 0x70, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73,
	0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x73,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x1a, 0x61, 0x32, 0x64, 0x70, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x73, 0x12, 0x69, 0x0a, 0x1c,
	0x61, 0x32, 0x64, 0x70, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x63, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x19, 0x61, 0x32,
	0x64, 0x70, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x73,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x60, 0x0a, 0x17, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x15, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x50,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x4f, 0x0a, 0x0e, 0x6d, 0x61, 0x70,
	0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0d, 0x6d, 0x61, 0x70,
	0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x5c, 0x0a, 0x15, 0x6d, 0x61,
	0x70, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x52, 0x13, 0x6d, 0x61, 0x70, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x5e, 0x0a, 0x16, 0x70, 0x62, 0x61, 0x70,
	0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x14, 0x70, 0x62, 0x61, 0x70, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x4f, 0x0a, 0x0e, 0x73, 0x61, 0x70, 0x5f,
	0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0d, 0x73, 0x61, 0x70, 0x50,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x4f, 0x0a, 0x0e, 0x70, 0x61, 0x6e,
	0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0d, 0x70, 0x61, 0x6e,
	0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x5e, 0x0a, 0x16, 0x68, 0x65,
	0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x69, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x14, 0x68, 0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x69, 0x64,
	0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73, 0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87,
	0x03, 0x02, 0x08, 0x64, 0x1a, 0xd4, 0x05, 0x0a, 0x0d, 0x43, 0x61, 0x70, 0x74, 0x69, 0x76, 0x65,
	0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x12, 0x47, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09,
	0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12,
	0x60, 0x0a, 0x11, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52,
	0x10, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x40, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x12, 0x45, 0x0a, 0x09, 0x68, 0x74, 0x74, 0x70, 0x73, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x08, 0x68, 0x74, 0x74, 0x70, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x43, 0x0a, 0x08, 0x68, 0x74,
	0x74, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x07, 0x68, 0x74, 0x74, 0x70, 0x55, 0x72, 0x6c, 0x12,
	0x4b, 0x0a, 0x0c, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x0b, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x58, 0x0a, 0x13,
	0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x75,
	0x72, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x52, 0x11, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x46, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x55, 0x72, 0x6c, 0x73, 0x12, 0x50, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x5f, 0x68, 0x74,
	0x74, 0x70, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x48, 0x74, 0x74, 0x70, 0x73, 0x12, 0x47, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x1a, 0xea, 0x03, 0x0a, 0x07,
	0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x12, 0x58, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x5f, 0x77,
	0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03,
	0x08, 0xc8, 0x01, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x50, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09,
	0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x08, 0x61, 0x70, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x12, 0x91, 0x01, 0x0a, 0x2b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x5f,
	0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x27,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x41, 0x70,
	0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72,
	0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x94, 0x01, 0x0a, 0x2d, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x70, 0x5f,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x6c, 0x65,
	0x65, 0x70, 0x5f, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03,
	0x03, 0x08, 0xc8, 0x01, 0x52, 0x28, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x43, 0x61, 0x72,
	0x72, 0x69, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x6c, 0x65, 0x65, 0x70, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x3a, 0x08,
	0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x1a, 0xad, 0x02, 0x0a, 0x04, 0x43, 0x64, 0x6d,
	0x61, 0x12, 0x61, 0x0a, 0x12, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63,
	0x61, 0x73, 0x74, 0x5f, 0x73, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08,
	0xc8, 0x01, 0x52, 0x10, 0x63, 0x65, 0x6c, 0x6c, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73,
	0x74, 0x53, 0x6d, 0x73, 0x12, 0x56, 0x0a, 0x0c, 0x72, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52,
	0x0b, 0x72, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x60, 0x0a, 0x11,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x10, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x3a, 0x08,
	0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x1a, 0xc5, 0x01, 0x0a, 0x07, 0x43, 0x65, 0x72,
	0x74, 0x50, 0x69, 0x6e, 0x12, 0x56, 0x0a, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x10, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x58, 0x0a, 0x13,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x52, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x55, 0x72, 0x6c, 0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64,
	0x1a, 0xcb, 0x02, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x12, 0x63, 0x0a, 0x13, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x5f, 0x62, 0x75, 0x66,
	0x66, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03,
	0x08, 0xc8, 0x01, 0x52, 0x11, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x42, 0x75, 0x66, 0x66,
	0x65, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x56, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8,
	0x01, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x74,
	0x0a, 0x1c, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09,
	0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x19, 0x73, 0x61, 0x6d, 0x70, 0x6c,
	0x69, 0x6e, 0x67, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x49, 0x6e, 0x53, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x1a, 0xbd,
	0x04, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x6b, 0x0a, 0x17, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x15, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x12, 0x67, 0x0a, 0x15, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x77, 0x69, 0x66, 0x69, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a,
	0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x13, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x57, 0x69, 0x66, 0x69, 0x12, 0x4d, 0x0a,
	0x07, 0x72, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03,
	0x08, 0xc8, 0x01, 0x52, 0x07, 0x72, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x85, 0x01, 0x0a,
	0x26, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x5f, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x6e, 0x6f, 0x6e,
	0x5f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x73, 0x73, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x61,
	0x79, 0x5f, 0x69, 0x6e, 0x5f, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08,
	0xc8, 0x01, 0x52, 0x20, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x4e, 0x6f,
	0x6e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x73, 0x73, 0x69, 0x76, 0x65, 0x44, 0x65, 0x6c, 0x61, 0x79,
	0x49, 0x6e, 0x4d, 0x73, 0x12, 0x7e, 0x0a, 0x22, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x5f, 0x61, 0x6c,
	0x61, 0x72, 0x6d, 0x5f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x73, 0x73, 0x69, 0x76, 0x65, 0x5f, 0x64,
	0x65, 0x6c, 0x61, 0x79, 0x5f, 0x69, 0x6e, 0x5f, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87,
	0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x1d, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x41, 0x67, 0x67, 0x72, 0x65, 0x73, 0x73, 0x69, 0x76, 0x65, 0x44, 0x65, 0x6c, 0x61, 0x79,
	0x49, 0x6e, 0x4d, 0x73, 0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x1a, 0xc9,
	0x01, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x10, 0x64,
	0x6f, 0x77, 0x6e, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x0f, 0x64, 0x6f, 0x77, 0x6e, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x12, 0x5e, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52,
	0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x64,
	0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x1a, 0xc1, 0x01, 0x0a, 0x08, 0x44,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x50, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x6f, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52,
	0x08, 0x61, 0x75, 0x74, 0x6f, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x59, 0x0a, 0x0e, 0x61, 0x75, 0x74,
	0x6f, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5,
	0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x54, 0x69, 0x6d, 0x65,
	0x5a, 0x6f, 0x6e, 0x65, 0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x1a, 0xb0,
	0x02, 0x0a, 0x05, 0x44, 0x65, 0x62, 0x75, 0x67, 0x12, 0x3a, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x03, 0x61, 0x70, 0x70, 0x12, 0x5c, 0x0a, 0x0f, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08,
	0xc8, 0x01, 0x52, 0x0e, 0x76, 0x69, 0x65, 0x77, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x12, 0x82, 0x01, 0x0a, 0x23, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87,
	0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x20, 0x76, 0x69, 0x65, 0x77, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08,
	0x64, 0x1a, 0xbc, 0x01, 0x0a, 0x07, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x5e, 0x0a,
	0x10, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x0f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x47, 0x0a,
	0x0a, 0x64, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x09, 0x64, 0x6e, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64,
	0x1a, 0x89, 0x08, 0x0a, 0x0b, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x5e, 0x0a, 0x10, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52,
	0x0f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x71, 0x0a, 0x1a, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x69, 0x7a, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09,
	0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x18, 0x66, 0x6f, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x69, 0x7a, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x12, 0x7a, 0x0a, 0x1f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x66, 0x72,
	0x65, 0x65, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x5f, 0x73,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8,
	0x01, 0x52, 0x1c, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x72, 0x65, 0x65, 0x66, 0x6f, 0x72,
	0x6d, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x50, 0x0a, 0x09, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x72, 0x74, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f,
	0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x08, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x74,
	0x6c, 0x12, 0x69, 0x0a, 0x16, 0x65, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x5f, 0x63, 0x75, 0x74, 0x6f, 0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5,
	0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x14, 0x65, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x44,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x43, 0x75, 0x74, 0x6f, 0x75, 0x74, 0x12, 0x88, 0x01, 0x0a,
	0x27, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x5f, 0x6f, 0x6e, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03,
	0x08, 0xc8, 0x01, 0x52, 0x22, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x44, 0x65, 0x73, 0x6b, 0x74, 0x6f,
	0x70, 0x4d, 0x6f, 0x64, 0x65, 0x4f, 0x6e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x44,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x73, 0x12, 0x73, 0x0a, 0x1a, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x5f, 0x66, 0x72, 0x65,
	0x65, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e,
	0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x0b, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01,
	0x18, 0x01, 0x52, 0x18, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x74, 0x46, 0x72, 0x65, 0x65, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x7d, 0x0a, 0x21,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x69, 0x7a,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f,
	0x77, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x1d, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x69, 0x7a, 0x61, 0x62, 0x6c, 0x65,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x65, 0x0a, 0x14, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x62, 0x6c,
	0x75, 0x72, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x12,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x42, 0x6c, 0x75,
	0x72, 0x73, 0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x1a, 0xd2, 0x03, 0x0a,
	0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x55, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x12, 0x7c, 0x0a, 0x20,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x1d, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x53, 0x0a, 0x10, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0f,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73, 0x12,
	0x50, 0x0a, 0x09, 0x64, 0x65, 0x6d, 0x6f, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f,
	0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x08, 0x64, 0x65, 0x6d, 0x6f, 0x4d, 0x6f, 0x64,
	0x65, 0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x4a, 0x04, 0x08, 0x04, 0x10,
	0x05, 0x1a, 0x95, 0x02, 0x0a, 0x07, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x54, 0x0a,
	0x0b, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f,
	0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x0a, 0x73, 0x69, 0x7a, 0x65, 0x46, 0x6f, 0x72,
	0x63, 0x65, 0x64, 0x12, 0x58, 0x0a, 0x0d, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x66,
	0x6f, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52,
	0x0c, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x50, 0x0a,
	0x09, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x6c, 0x70, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87,
	0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x08, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x4c, 0x70, 0x6d, 0x3a,
	0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x1a, 0xa1, 0x03, 0x0a, 0x0b, 0x44, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x12, 0x6b, 0x0a, 0x17, 0x73, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x5f, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52,
	0x15, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x53,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x6f, 0x0a, 0x19, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x5f, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x17,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64,
	0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x54, 0x0a, 0x0b, 0x6d, 0x69, 0x6e, 0x5f, 0x73,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8,
	0x01, 0x52, 0x0a, 0x6d, 0x69, 0x6e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x12, 0x54, 0x0a,
	0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f,
	0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x53, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x73, 0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x1a, 0xfb, 0x01,
	0x0a, 0x08, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x66, 0x0a, 0x15, 0x6d, 0x61,
	0x78, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x12,
	0x6d, 0x61, 0x78, 0x42, 0x79, 0x74, 0x65, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x12, 0x7d, 0x0a, 0x21, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65,
	0x64, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x6f, 0x76, 0x65, 0x72,
	0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08,
	0xc8, 0x01, 0x52, 0x1d, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x4d,
	0x61, 0x78, 0x42, 0x79, 0x74, 0x65, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x1a, 0x89, 0x04, 0x0a, 0x07,
	0x44, 0x72, 0x6f, 0x70, 0x62, 0x6f, 0x78, 0x12, 0x54, 0x0a, 0x0b, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8,
	0x01, 0x52, 0x0a, 0x61, 0x67, 0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x50, 0x0a,
	0x09, 0x6d, 0x61, 0x78, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87,
	0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12,
	0x4e, 0x0a, 0x08, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x6b, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5,
	0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x07, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x4b, 0x62, 0x12,
	0x58, 0x0a, 0x0d, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x0c, 0x71, 0x75, 0x6f,
	0x74, 0x61, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x5c, 0x0a, 0x0f, 0x72, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f,
	0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x44, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x3a, 0x08, 0x9a,
	0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x1a, 0xd0, 0x01, 0x0a, 0x13, 0x44, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x60, 0x0a, 0x11, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52,
	0x10, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x12, 0x4d, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f,
	0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x1a, 0xc0, 0x01, 0x0a, 0x09, 0x45,
	0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x47, 0x0a, 0x04, 0x74, 0x6f, 0x6e, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x04, 0x74, 0x6f, 0x6e,
	0x65, 0x12, 0x60, 0x0a, 0x11, 0x61, 0x66, 0x66, 0x6f, 0x72, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x6e, 0x65, 0x65, 0x64, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8,
	0x01, 0x52, 0x10, 0x61, 0x66, 0x66, 0x6f, 0x72, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x65, 0x65,
	0x64, 0x65, 0x64, 0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x1a, 0xff, 0x06,
	0x0a, 0x06, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x84, 0x01, 0x0a, 0x24, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x67, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x5f, 0x67, 0x65, 0x73, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x21, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x47, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x47, 0x65, 0x73, 0x74, 0x75, 0x72, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x5d, 0x0a, 0x10, 0x67, 0x70, 0x75, 0x5f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x0e,
	0x67, 0x70, 0x75, 0x44, 0x65, 0x62, 0x75, 0x67, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x60,
	0x0a, 0x11, 0x65, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x66, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x10,
	0x65, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x5d, 0x0a, 0x10, 0x63, 0x65, 0x6c, 0x6c, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x6f, 0x6e, 0x5f,
	0x62, 0x6f, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52,
	0x0e, 0x63, 0x65, 0x6c, 0x6c, 0x75, 0x6c, 0x61, 0x72, 0x4f, 0x6e, 0x42, 0x6f, 0x6f, 0x74, 0x12,
	0x60, 0x0a, 0x11, 0x64, 0x69, 0x73, 0x6b, 0x73, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x6c, 0x6f, 0x67,
	0x67, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52,
	0x10, 0x64, 0x69, 0x73, 0x6b, 0x73, 0x74, 0x61, 0x74, 0x73, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e,
	0x67, 0x12, 0x6b, 0x0a, 0x17, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61,
	0x5f, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f,
	0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x15, 0x63, 0x61, 0x63, 0x68, 0x65, 0x51, 0x75,
	0x6f, 0x74, 0x61, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x81,
	0x01, 0x0a, 0x23, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x65, 0x6c, 0x70,
	0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x5f,
	0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8,
	0x01, 0x52, 0x1f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x6c, 0x70, 0x65,
	0x72, 0x4e, 0x6f, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x54, 0x6f, 0x67, 0x67,
	0x6c, 0x65, 0x12, 0x71, 0x0a, 0x1b, 0x67, 0x6e, 0x73, 0x73, 0x5f, 0x72, 0x61, 0x77, 0x5f, 0x6d,
	0x65, 0x61, 0x73, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x17, 0x67, 0x6e,
	0x73, 0x73, 0x52, 0x61, 0x77, 0x4d, 0x65, 0x61, 0x73, 0x46, 0x75, 0x6c, 0x6c, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x1a,
	0xde, 0x01, 0x0a, 0x05, 0x45, 0x75, 0x69, 0x63, 0x63, 0x12, 0x55, 0x0a, 0x0b, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03,
	0x08, 0xc8, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64,
	0x12, 0x74, 0x0a, 0x1c, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x19, 0x66, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64,
	0x1a, 0x87, 0x03, 0x0a, 0x0f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x48, 0x74, 0x74, 0x70, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x12, 0x3c, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x04, 0x68, 0x6f,
	0x73, 0x74, 0x12, 0x3c, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x4f, 0x0a, 0x0e, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x0d, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x3a, 0x0a, 0x03, 0x70, 0x61, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x03, 0x70, 0x61, 0x63, 0x12, 0x61, 0x0a,
	0x12, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x75, 0x69, 0x5f, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x10,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x69, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x1a, 0xcd, 0x0f, 0x0a, 0x03, 0x47,
	0x70, 0x75, 0x12, 0x45, 0x0a, 0x09, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x61, 0x70, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x08, 0x64, 0x65, 0x62, 0x75, 0x67, 0x41, 0x70, 0x70, 0x12, 0x56, 0x0a, 0x0c, 0x64, 0x65, 0x62,
	0x75, 0x67, 0x5f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03,
	0x03, 0x08, 0xc8, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x62, 0x75, 0x67, 0x4c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x12, 0x62, 0x0a, 0x19, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x67, 0x6c, 0x5f, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x15,
	0x61, 0x6e, 0x67, 0x6c, 0x65, 0x47, 0x6c, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x6c,
	0x41, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x6c, 0x0a, 0x1e, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x67,
	0x6c, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x70, 0x6b, 0x67, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x1a, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x47, 0x6c,
	0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x6b, 0x67, 0x73, 0x12, 0x70, 0x0a, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x67, 0x6c, 0x5f,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x1c, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x47, 0x6c,
	0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x50, 0x0a, 0x0f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0d, 0x64, 0x65, 0x62, 0x75, 0x67, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x41, 0x70, 0x70, 0x12, 0x54, 0x0a, 0x11, 0x64, 0x65, 0x62, 0x75, 0x67,
	0x5f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x5f, 0x67, 0x6c, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0f, 0x64, 0x65,
	0x62, 0x75, 0x67, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x47, 0x6c, 0x65, 0x73, 0x12, 0x63, 0x0a,
	0x19, 0x75, 0x70, 0x64, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x16, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x41, 0x70,
	0x70, 0x73, 0x12, 0x7d, 0x0a, 0x27, 0x75, 0x70, 0x64, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6f, 0x70, 0x74, 0x5f, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x22, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x49, 0x6e, 0x41, 0x70, 0x70,
	0x73, 0x12, 0x7f, 0x0a, 0x28, 0x75, 0x70, 0x64, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x64,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6f, 0x70, 0x74, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x23, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x4f, 0x75, 0x74, 0x41, 0x70,
	0x70, 0x73, 0x12, 0x79, 0x0a, 0x24, 0x75, 0x70, 0x64, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x64, 0x65, 0x6e, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x21, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6e, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x7b, 0x0a,
	0x25, 0x75, 0x70, 0x64, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6c, 0x6c,
	0x6f, 0x77, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x22, 0x75, 0x70, 0x64, 0x61, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x51, 0x0a, 0x0f, 0x61, 0x6e,
	0x67, 0x6c, 0x65, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0e, 0x61,
	0x6e, 0x67, 0x6c, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x7b, 0x0a,
	0x25, 0x75, 0x70, 0x64, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x6e,
	0x79, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x22, 0x75, 0x70, 0x64, 0x61, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x6e, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x12, 0x60, 0x0a, 0x18, 0x73, 0x68,
	0x6f, 0x77, 0x5f, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x5f,
	0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x14, 0x73, 0x68, 0x6f, 0x77, 0x41, 0x6e, 0x67, 0x6c,
	0x65, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x12, 0x71, 0x0a, 0x20,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x5f, 0x73, 0x70, 0x68, 0x61, 0x6c, 0x5f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x65, 0x73,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x1d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x53, 0x70, 0x68, 0x61, 0x6c, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x65, 0x73, 0x12,
	0x58, 0x0a, 0x13, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x11, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x44, 0x65, 0x62,
	0x75, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x7d, 0x0a, 0x27, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x72,
	0x65, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x5f, 0x69, 0x6e, 0x5f,
	0x61, 0x70, 0x70, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x22, 0x75, 0x70, 0x64, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x44,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x50, 0x72, 0x65, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4f,
	0x70, 0x74, 0x49, 0x6e, 0x41, 0x70, 0x70, 0x73, 0x12, 0x56, 0x0a, 0x12, 0x61, 0x6e, 0x67, 0x6c,
	0x65, 0x5f, 0x65, 0x67, 0x6c, 0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x10,
	0x61, 0x6e, 0x67, 0x6c, 0x65, 0x45, 0x67, 0x6c, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x1a, 0xd3, 0x03, 0x0a, 0x04, 0x48,
	0x64, 0x6d, 0x69, 0x12, 0x5c, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8,
	0x01, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x74, 0x0a, 0x1c, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x61, 0x75, 0x64, 0x69,
	0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x19, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x72, 0x0a, 0x1b, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x77, 0x61, 0x6b, 0x65, 0x75, 0x70, 0x5f, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8,
	0x01, 0x52, 0x18, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x41, 0x75, 0x74, 0x6f, 0x57, 0x61,
	0x6b, 0x65, 0x75, 0x70, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x79, 0x0a, 0x1f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x6f, 0x66, 0x66, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09,
	0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x1b, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x41, 0x75, 0x74, 0x6f, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x66, 0x66, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64,
	0x1a, 0xdf, 0x01, 0x0a, 0x0d, 0x49, 0x6e, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x5f, 0x0a, 0x11, 0x64, 0x65, 0x62, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x5f, 0x75,
	0x70, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08,
	0xc8, 0x01, 0x52, 0x0f, 0x64, 0x65, 0x62, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x55, 0x70, 0x44, 0x65,
	0x6c, 0x61, 0x79, 0x12, 0x63, 0x0a, 0x13, 0x64, 0x65, 0x62, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x5f,
	0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87,
	0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x11, 0x64, 0x65, 0x62, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x44,
	0x6f, 0x77, 0x6e, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02,
	0x08, 0x64, 0x1a, 0xbd, 0x05, 0x0a, 0x0a, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x41, 0x70,
	0x70, 0x12, 0x5a, 0x0a, 0x0e, 0x64, 0x65, 0x78, 0x6f, 0x70, 0x74, 0x5f, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x0d,
	0x64, 0x65, 0x78, 0x6f, 0x70, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x79, 0x0a,
	0x1f, 0x65, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6f, 0x6b, 0x69,
	0x65, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x1b, 0x65, 0x70, 0x68,
	0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x4d, 0x61, 0x78, 0x53,
	0x69, 0x7a, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x70, 0x0a, 0x1a, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f,
	0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8,
	0x01, 0x52, 0x17, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x4d, 0x69, 0x6e, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x70, 0x0a, 0x1a, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03,
	0x08, 0xc8, 0x01, 0x52, 0x17, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x4d, 0x61,
	0x78, 0x43, 0x61, 0x63, 0x68, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x74, 0x0a, 0x1c,
	0x75, 0x6e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x6d, 0x69, 0x6e, 0x5f,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f,
	0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x19, 0x75, 0x6e, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x65, 0x64, 0x4d, 0x69, 0x6e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x50, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x12, 0x74, 0x0a, 0x1c, 0x75, 0x6e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65,
	0x64, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x19, 0x75,
	0x6e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x4d, 0x61, 0x78, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02,
	0x08, 0x64, 0x1a, 0xcc, 0x01, 0x0a, 0x0e, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x72,
	0x65, 0x77, 0x61, 0x6c, 0x6c, 0x12, 0x56, 0x0a, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x10, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x58, 0x0a,
	0x13, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x55, 0x72, 0x6c, 0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08,
	0x64, 0x1a, 0xc4, 0x01, 0x0a, 0x06, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x56, 0x0a, 0x12,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x10, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x55, 0x72, 0x6c, 0x12, 0x58, 0x0a, 0x13, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x11, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x55, 0x72, 0x6c, 0x3a, 0x08,
	0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x1a, 0x9b, 0x08, 0x0a, 0x08, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x7a, 0x0a, 0x1f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x5f, 0x74, 0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03,
	0x08, 0xc8, 0x01, 0x52, 0x1c, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x54,
	0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x4d,
	0x73, 0x12, 0x98, 0x01, 0x0a, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x5f, 0x74, 0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x69, 0x6d,
	0x69, 0x74, 0x79, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x5f, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e,
	0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01,
	0x52, 0x2a, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x68, 0x72, 0x6f,
	0x74, 0x74, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x69, 0x6d, 0x69, 0x74, 0x79, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x4d, 0x73, 0x12, 0x86, 0x01, 0x0a,
	0x25, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x68, 0x72, 0x6f,
	0x74, 0x74, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x77, 0x68, 0x69,
	0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8,
	0x01, 0x52, 0x22, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x68, 0x72,
	0x6f, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x57, 0x68, 0x69, 0x74,
	0x65, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x83, 0x01, 0x0a, 0x24, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x74, 0x6f, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09,
	0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x20, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x54, 0x6f, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x61, 0x0a, 0x12, 0x67,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x73, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x10, 0x67, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x4b, 0x69, 0x6c, 0x6c, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x6d,
	0x0a, 0x18, 0x67, 0x6e, 0x73, 0x73, 0x5f, 0x73, 0x61, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x74, 0x65,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87,
	0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x16, 0x67, 0x6e, 0x73, 0x73, 0x53, 0x61, 0x74, 0x65, 0x6c,
	0x6c, 0x69, 0x74, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x8c, 0x01,
	0x0a, 0x29, 0x67, 0x6e, 0x73, 0x73, 0x5f, 0x68, 0x61, 0x6c, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5,
	0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x24, 0x67, 0x6e, 0x73, 0x73, 0x48, 0x61, 0x6c, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x12, 0x7e, 0x0a, 0x21,
	0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x1e, 0x69, 0x67,
	0x6e, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x3a, 0x08, 0x9a, 0x9f,
	0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x1a, 0xb3, 0x05, 0x0a, 0x0c, 0x4c, 0x6f, 0x77, 0x50, 0x6f,
	0x77, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x4d, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x58, 0x0a, 0x0d, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08,
	0xc8, 0x01, 0x52, 0x0c, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x5f, 0x0a, 0x11, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e,
	0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01,
	0x52, 0x0f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4d, 0x61,
	0x78, 0x12, 0x70, 0x0a, 0x1a, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x70,
	0x6f, 0x77, 0x65, 0x72, 0x5f, 0x73, 0x61, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42,
	0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x17, 0x61, 0x75, 0x74, 0x6f,
	0x6d, 0x61, 0x74, 0x69, 0x63, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x61, 0x76, 0x65, 0x72, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x4f, 0x0a, 0x0e, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x79, 0x5f, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e,
	0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0d, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x79, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x12, 0x67, 0x0a, 0x1b, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x79, 0x5f, 0x61,
	0x75, 0x74, 0x6f, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x52, 0x18, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x79, 0x41, 0x75, 0x74, 0x6f, 0x44,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x63, 0x0a,
	0x19, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x79, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x16, 0x73, 0x74, 0x69, 0x63,
	0x6b, 0x79, 0x41, 0x75, 0x74, 0x6f, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x1a, 0xb8, 0x01, 0x0a,
	0x19, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x9a, 0x01, 0x0a, 0x36, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x69, 0x6e, 0x67, 0x5f, 0x64, 0x65, 0x66, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x68,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e,
	0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x30, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x66, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x6f, 0x52, 0x6f, 0x6c,
	0x65, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x1a, 0xe3, 0x01, 0x0a, 0x03, 0x4d, 0x68, 0x6c, 0x12,
	0x6b, 0x0a, 0x17, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x69,
	0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87,
	0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x15, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x65, 0x0a, 0x14,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52,
	0x12, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x1a, 0xb7, 0x01,
	0x0a, 0x0a, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4d, 0x0a, 0x07,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08,
	0xc8, 0x01, 0x52, 0x07, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12, 0x50, 0x0a, 0x09, 0x61,
	0x6c, 0x77, 0x61, 0x79, 0x73, 0x5f, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03,
	0x08, 0xc8, 0x01, 0x52, 0x08, 0x61, 0x6c, 0x77, 0x61, 0x79, 0x73, 0x4f, 0x6e, 0x3a, 0x08, 0x9a,
	0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x1a, 0xf8, 0x03, 0x0a, 0x08, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x53, 0x69, 0x6d, 0x12, 0x6b, 0x0a, 0x17, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x61,
	0x6c, 0x6c, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42,
	0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x15, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x56, 0x0a, 0x0c, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x70,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x0b, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x12, 0x69, 0x0a, 0x16, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x14,
	0x64, 0x61, 0x74, 0x61, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5e, 0x0a, 0x10, 0x73, 0x6d, 0x73, 0x5f, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03,
	0x08, 0xc8, 0x01, 0x52, 0x0f, 0x73, 0x6d, 0x73, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x52, 0x0a, 0x0a, 0x73, 0x6d, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x6d,
	0x70, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x09, 0x73,
	0x6d, 0x73, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02,
	0x08, 0x64, 0x1a, 0xcc, 0x0d, 0x0a, 0x08, 0x4e, 0x65, 0x74, 0x73, 0x74, 0x61, 0x74, 0x73, 0x12,
	0x4d, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87,
	0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x58,
	0x0a, 0x0d, 0x70, 0x6f, 0x6c, 0x6c, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42,
	0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x0c, 0x70, 0x6f, 0x6c, 0x6c,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x60, 0x0a, 0x12, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09,
	0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x4d, 0x61, 0x78, 0x41, 0x67, 0x65, 0x12, 0x61, 0x0a, 0x12, 0x67, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x10, 0x67, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x5a, 0x0a,
	0x0e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42,
	0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x0d, 0x73, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x5c, 0x0a, 0x0f, 0x61, 0x75, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f,
	0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x0e, 0x61, 0x75, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x63, 0x0a, 0x13, 0x64, 0x65, 0x76, 0x5f, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09,
	0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x11, 0x64, 0x65, 0x76, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5f, 0x0a, 0x11,
	0x64, 0x65, 0x76, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x5f, 0x62, 0x79, 0x74, 0x65,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x0f, 0x64, 0x65,
	0x76, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x59, 0x0a,
	0x0e, 0x64, 0x65, 0x76, 0x5f, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x67, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42,
	0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x0c, 0x64, 0x65, 0x76, 0x52,
	0x6f, 0x74, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x12, 0x59, 0x0a, 0x0e, 0x64, 0x65, 0x76, 0x5f,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87,
	0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x0c, 0x64, 0x65, 0x76, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x67, 0x65, 0x12, 0x63, 0x0a, 0x13, 0x75, 0x69, 0x64, 0x5f, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87,
	0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x11, 0x75, 0x69, 0x64, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5f, 0x0a, 0x11, 0x75, 0x69, 0x64, 0x5f,
	0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a,
	0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x0f, 0x75, 0x69, 0x64, 0x50, 0x65, 0x72,
	0x73, 0x69, 0x73, 0x74, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x59, 0x0a, 0x0e, 0x75, 0x69, 0x64,
	0x5f, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5,
	0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x0c, 0x75, 0x69, 0x64, 0x52, 0x6f, 0x74, 0x61, 0x74,
	0x65, 0x41, 0x67, 0x65, 0x12, 0x59, 0x0a, 0x0e, 0x75, 0x69, 0x64, 0x5f, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x5f, 0x61, 0x67, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8,
	0x01, 0x52, 0x0c, 0x75, 0x69, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x67, 0x65, 0x12,
	0x6a, 0x0a, 0x17, 0x75, 0x69, 0x64, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87,
	0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x14, 0x75, 0x69, 0x64, 0x54, 0x61, 0x67, 0x42, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x66, 0x0a, 0x15, 0x75,
	0x69, 0x64, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x5f, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52,
	0x12, 0x75, 0x69, 0x64, 0x54, 0x61, 0x67, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x12, 0x60, 0x0a, 0x12, 0x75, 0x69, 0x64, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x72,
	0x6f, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x67, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03,
	0x03, 0x08, 0xc8, 0x01, 0x52, 0x0f, 0x75, 0x69, 0x64, 0x54, 0x61, 0x67, 0x52, 0x6f, 0x74, 0x61,
	0x74, 0x65, 0x41, 0x67, 0x65, 0x12, 0x60, 0x0a, 0x12, 0x75, 0x69, 0x64, 0x5f, 0x74, 0x61, 0x67,
	0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x61, 0x67, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5,
	0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x0f, 0x75, 0x69, 0x64, 0x54, 0x61, 0x67, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x41, 0x67, 0x65, 0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08,
	0x64, 0x1a, 0xe3, 0x0d, 0x0a, 0x07, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x48, 0x0a,
	0x0a, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0a, 0x70, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x69, 0x0a, 0x16, 0x70, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x72, 0x65, 0x64, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x14, 0x70, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x52, 0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x70,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x09, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x72, 0x41, 0x70, 0x70, 0x12, 0x7a, 0x0a, 0x1f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61,
	0x69, 0x6c, 0x79, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03,
	0x03, 0x08, 0xc8, 0x01, 0x52, 0x1c, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x85, 0x01, 0x0a, 0x25, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x5f, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f,
	0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x21, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x12, 0x59, 0x0a, 0x0e, 0x61, 0x76,
	0x6f, 0x69, 0x64, 0x5f, 0x62, 0x61, 0x64, 0x5f, 0x77, 0x69, 0x66, 0x69, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f,
	0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x0c, 0x61, 0x76, 0x6f, 0x69, 0x64, 0x42, 0x61,
	0x64, 0x57, 0x69, 0x66, 0x69, 0x12, 0x75, 0x0a, 0x1c, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x65, 0x64,
	0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e,
	0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01,
	0x52, 0x1a, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x65, 0x64, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61,
	0x74, 0x68, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x70, 0x0a, 0x1a,
	0x77, 0x61, 0x74, 0x63, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87,
	0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x17, 0x77, 0x61, 0x74, 0x63, 0x68, 0x6c, 0x69, 0x73, 0x74,
	0x4c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x61,
	0x0a, 0x12, 0x73, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x75, 0x69, 0x5f, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52,
	0x10, 0x73, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x55, 0x69, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x6c, 0x0a, 0x17, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f,
	0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x16, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x6c, 0x0a, 0x17, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87,
	0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x16, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x7e, 0x0a,
	0x21, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f,
	0x6d, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x1e, 0x72,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4d, 0x73, 0x12, 0x60, 0x0a,
	0x11, 0x77, 0x61, 0x74, 0x63, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x10, 0x77,
	0x61, 0x74, 0x63, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x64, 0x0a, 0x13, 0x73, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8,
	0x01, 0x52, 0x12, 0x73, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x65, 0x64, 0x12, 0x5f, 0x0a, 0x11, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x6d, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87,
	0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x4d, 0x73, 0x12, 0x94, 0x01, 0x0a, 0x2d, 0x72, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x65,
	0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x6d, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03,
	0x08, 0xc8, 0x01, 0x52, 0x28, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x6f, 0x72,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x4d, 0x73, 0x3a, 0x08, 0x9a,
	0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x1a, 0xb9, 0x02, 0x0a, 0x04, 0x4e, 0x69, 0x74, 0x7a,
	0x12, 0x54, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42,
	0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x69, 0x66, 0x66, 0x12, 0x5a, 0x0a, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x73, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03,
	0x08, 0xc8, 0x01, 0x52, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x69,
	0x6e, 0x67, 0x12, 0x75, 0x0a, 0x1c, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x1a, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03,
	0x02, 0x08, 0x64, 0x1a, 0x83, 0x07, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x76, 0x0a, 0x1d, 0x6d, 0x61, 0x78, 0x5f, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e,
	0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01,
	0x52, 0x1a, 0x6d, 0x61, 0x78, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x80, 0x01, 0x0a,
	0x22, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x77, 0x61, 0x72, 0x6e, 0x69,
	0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x1f,
	0x73, 0x68, 0x6f, 0x77, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x5a, 0x0a, 0x0e, 0x73, 0x6e, 0x6f, 0x6f, 0x7a, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x0d, 0x73, 0x6e,
	0x6f, 0x6f, 0x7a, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x83, 0x01, 0x0a, 0x24,
	0x73, 0x6d, 0x61, 0x72, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x5f, 0x69, 0x6e,
	0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x66,
	0x6c, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52,
	0x20, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x49, 0x6e, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x6c, 0x61, 0x67,
	0x73, 0x12, 0x8b, 0x01, 0x0a, 0x28, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x75, 0x67, 0x67,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09,
	0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x24, 0x73, 0x6d, 0x61, 0x72, 0x74,
	0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12,
	0x4d, 0x0a, 0x07, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87,
	0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x07, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x73, 0x12, 0xae,
	0x01, 0x0a, 0x3b, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x5f, 0x61, 0x6e, 0x64,
	0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09,
	0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x34, 0x64, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x41, 0x70, 0x70, 0x73, 0x41,
	0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3a,
	0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x1a, 0xa5, 0x01, 0x0a, 0x03, 0x4e, 0x74,
	0x70, 0x12, 0x40, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x12, 0x52, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x6d,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4d, 0x73, 0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08,
	0x64, 0x1a, 0xe6, 0x01, 0x0a, 0x16, 0x55, 0x73, 0x65, 0x72, 0x41, 0x62, 0x73, 0x65, 0x6e, 0x74,
	0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x12, 0x61, 0x0a, 0x12,
	0x72, 0x61, 0x64, 0x69, 0x6f, 0x73, 0x5f, 0x6f, 0x66, 0x66, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x10, 0x72,
	0x61, 0x64, 0x69, 0x6f, 0x73, 0x4f, 0x66, 0x66, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x5f, 0x0a, 0x11, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x5f, 0x6f, 0x66, 0x66, 0x5f, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52,
	0x0f, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x4f, 0x66, 0x66, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x1a, 0xc2, 0x03, 0x0a, 0x0f, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x4d,
	0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03,
	0x03, 0x08, 0xc8, 0x01, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x4d, 0x0a,
	0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03,
	0x08, 0xc8, 0x01, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x53, 0x0a, 0x10,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5c, 0x0a, 0x0f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x69, 0x73,
	0x69, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52,
	0x0e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x12,
	0x54, 0x0a, 0x0b, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x61, 0x64, 0x62, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09,
	0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x0a, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x41, 0x64, 0x62, 0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x1a,
	0xfb, 0x04, 0x0a, 0x0b, 0x50, 0x64, 0x70, 0x57, 0x61, 0x74, 0x63, 0x68, 0x64, 0x6f, 0x67, 0x12,
	0x5d, 0x0a, 0x10, 0x70, 0x6f, 0x6c, 0x6c, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x5f, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x0e,
	0x70, 0x6f, 0x6c, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x4d, 0x73, 0x12, 0x66,
	0x0a, 0x15, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x70, 0x6f, 0x6c, 0x6c, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x5f, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08,
	0xc8, 0x01, 0x52, 0x12, 0x6c, 0x6f, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x6c, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x4d, 0x73, 0x12, 0x68, 0x0a, 0x16, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x70, 0x6f, 0x6c, 0x6c, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x6d, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x13, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x50, 0x6f, 0x6c, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x4d, 0x73,
	0x12, 0x65, 0x0a, 0x14, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03,
	0x08, 0xc8, 0x01, 0x52, 0x12, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x5d, 0x0a, 0x10, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x70, 0x6f, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5,
	0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x0e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x6f, 0x6c,
	0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x6b, 0x0a, 0x18, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x64,
	0x70, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x14, 0x6d,
	0x61, 0x78, 0x50, 0x64, 0x70, 0x52, 0x65, 0x73, 0x65, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x1a, 0xa4, 0x02,
	0x0a, 0x0c, 0x50, 0x72, 0x65, 0x70, 0x61, 0x69, 0x64, 0x53, 0x65, 0x74, 0x75, 0x70, 0x12, 0x52,
	0x0a, 0x10, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55,
	0x72, 0x6c, 0x12, 0x5a, 0x0a, 0x14, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x12, 0x64, 0x65, 0x74, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x5a,
	0x0a, 0x14, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x64, 0x69,
	0x72, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x12, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x64, 0x69, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87,
	0x03, 0x02, 0x08, 0x64, 0x1a, 0xbb, 0x01, 0x0a, 0x07, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x12, 0x4d, 0x0a, 0x08, 0x64, 0x6e, 0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x08, 0x9a, 0x9f,
	0xd5, 0x87, 0x03, 0x02, 0x08, 0x00, 0x52, 0x07, 0x64, 0x6e, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x57, 0x0a, 0x0d, 0x64, 0x6e, 0x73, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x42, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x00, 0x52, 0x0c, 0x64, 0x6e, 0x73, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x72, 0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02,
	0x08, 0x00, 0x1a, 0x92, 0x02, 0x0a, 0x07, 0x53, 0x65, 0x6c, 0x69, 0x6e, 0x75, 0x78, 0x12, 0x56,
	0x0a, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x10, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x58, 0x0a, 0x13, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x11, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x55, 0x72, 0x6c,
	0x12, 0x4b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87,
	0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x3a, 0x08, 0x9a,
	0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x1a, 0xcc, 0x01, 0x0a, 0x0e, 0x53, 0x6d, 0x61, 0x72,
	0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x56, 0x0a, 0x12, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x10, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x55,
	0x72, 0x6c, 0x12, 0x58, 0x0a, 0x13, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x55, 0x72, 0x6c, 0x3a, 0x08, 0x9a, 0x9f,
	0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x1a, 0x8a, 0x06, 0x0a, 0x03, 0x53, 0x6d, 0x73, 0x12, 0x70,
	0x0a, 0x1a, 0x6f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f,
	0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x17, 0x6f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e,
	0x67, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x4d, 0x73,
	0x12, 0x6c, 0x0a, 0x18, 0x6f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f,
	0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x15, 0x6f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e,
	0x67, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4d, 0x61, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x6b,
	0x0a, 0x17, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03,
	0x03, 0x08, 0xc8, 0x01, 0x52, 0x15, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5b, 0x0a, 0x0f, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09,
	0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x0d, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x6c, 0x0a, 0x1e, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x1a, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x6e, 0x0a, 0x1f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x73, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x1b, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x55, 0x72, 0x6c, 0x12, 0x71, 0x0a, 0x1a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52,
	0x18, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03,
	0x02, 0x08, 0x64, 0x1a, 0xd3, 0x09, 0x0a, 0x06, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x43,
	0x0a, 0x08, 0x63, 0x61, 0x72, 0x5f, 0x64, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x07, 0x63, 0x61, 0x72, 0x44,
	0x6f, 0x63, 0x6b, 0x12, 0x47, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x5f, 0x75, 0x6e, 0x64, 0x6f, 0x63,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x52, 0x09, 0x63, 0x61, 0x72, 0x55, 0x6e, 0x64, 0x6f, 0x63, 0x6b, 0x12, 0x53, 0x0a, 0x10,
	0x63, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x0f, 0x63, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65,
	0x64, 0x12, 0x45, 0x0a, 0x09, 0x64, 0x65, 0x73, 0x6b, 0x5f, 0x64, 0x6f, 0x63, 0x6b, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x08,
	0x64, 0x65, 0x73, 0x6b, 0x44, 0x6f, 0x63, 0x6b, 0x12, 0x49, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x6b,
	0x5f, 0x75, 0x6e, 0x64, 0x6f, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x6b, 0x55, 0x6e, 0x64,
	0x6f, 0x63, 0x6b, 0x12, 0x63, 0x0a, 0x13, 0x64, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x6f, 0x75, 0x6e,
	0x64, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87,
	0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x11, 0x64, 0x6f, 0x63, 0x6b, 0x53, 0x6f, 0x75, 0x6e, 0x64,
	0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x87, 0x01, 0x0a, 0x26, 0x64, 0x6f, 0x63,
	0x6b, 0x5f, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x5f, 0x77, 0x68, 0x65, 0x6e, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x22,
	0x64, 0x6f, 0x63, 0x6b, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x57, 0x68, 0x65, 0x6e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x12, 0x3c, 0x0a, 0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x04, 0x6c, 0x6f, 0x63, 0x6b,
	0x12, 0x49, 0x0a, 0x0b, 0x6c, 0x6f, 0x77, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x0a, 0x6c, 0x6f, 0x77, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x12, 0x6e, 0x0a, 0x19, 0x6c,
	0x6f, 0x77, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x6f, 0x75, 0x6e, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03,
	0x08, 0xc8, 0x01, 0x52, 0x16, 0x6c, 0x6f, 0x77, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x53,
	0x6f, 0x75, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x70, 0x0a, 0x1a, 0x6c,
	0x6f, 0x77, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x6f, 0x75, 0x6e, 0x64,
	0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03,
	0x03, 0x08, 0xc8, 0x01, 0x52, 0x17, 0x6c, 0x6f, 0x77, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79,
	0x53, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x42, 0x0a,
	0x07, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x07, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65,
	0x64, 0x12, 0x40, 0x0a, 0x06, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x75, 0x6e, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x64, 0x0a, 0x19, 0x77, 0x69, 0x72, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x5f,
	0x63, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x17, 0x77, 0x69, 0x72, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x43, 0x68, 0x61, 0x72, 0x67, 0x69,
	0x6e, 0x67, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03,
	0x02, 0x08, 0x64, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x1a, 0xac, 0x02, 0x0a, 0x0c, 0x53, 0x6f,
	0x75, 0x6e, 0x64, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x96, 0x01, 0x0a, 0x2f, 0x6d,
	0x61, 0x78, 0x5f, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x5f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x6f, 0x70, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09,
	0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x28, 0x6d, 0x61, 0x78, 0x53, 0x6f,
	0x75, 0x6e, 0x64, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x73, 0x50, 0x65, 0x72,
	0x44, 0x61, 0x79, 0x12, 0x79, 0x0a, 0x1f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6f, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x5f, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8,
	0x01, 0x52, 0x1b, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4d, 0x73, 0x3a, 0x08,
	0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x1a, 0xea, 0x01, 0x0a, 0x07, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x12, 0x62, 0x0a, 0x12, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72,
	0x6b, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87,
	0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x11, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x71, 0x0a, 0x1a, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x5f, 0x63, 0x6c, 0x6f, 0x62, 0x62, 0x65, 0x72, 0x5f, 0x74, 0x68, 0x72,
	0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8,
	0x01, 0x52, 0x18, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x43, 0x6c, 0x6f, 0x62, 0x62,
	0x65, 0x72, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x3a, 0x08, 0x9a, 0x9f, 0xd5,
	0x87, 0x03, 0x02, 0x08, 0x64, 0x1a, 0xd8, 0x01, 0x0a, 0x04, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x6f,
	0x0a, 0x1a, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x64, 0x65, 0x6c, 0x61,
	0x79, 0x5f, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f,
	0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x16, 0x6d, 0x61, 0x78, 0x52, 0x65, 0x74, 0x72,
	0x79, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12,
	0x55, 0x0a, 0x11, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x10, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x73, 0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64,
	0x1a, 0xa1, 0x06, 0x0a, 0x03, 0x53, 0x79, 0x73, 0x12, 0x77, 0x0a, 0x1e, 0x66, 0x72, 0x65, 0x65,
	0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x6d, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87,
	0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x1a, 0x66, 0x72, 0x65, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x4d, 0x69, 0x6e,
	0x73, 0x12, 0x75, 0x0a, 0x1c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x68, 0x72,
	0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x1a, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x50, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x72, 0x0a, 0x1b, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x5f, 0x6d, 0x61,
	0x78, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08,
	0xc8, 0x01, 0x52, 0x18, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x68, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x4d, 0x61, 0x78, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x74, 0x0a, 0x1c,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x74, 0x68, 0x72,
	0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f,
	0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x19, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x46, 0x75, 0x6c, 0x6c, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x12, 0x6d, 0x0a, 0x18, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09,
	0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x16, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67,
	0x65, 0x12, 0x6a, 0x0a, 0x17, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f,
	0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x14, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x4d, 0x61, 0x78, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x55, 0x0a,
	0x0b, 0x75, 0x69, 0x64, 0x63, 0x70, 0x75, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f,
	0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x0b, 0x75, 0x69, 0x64, 0x63, 0x70, 0x75, 0x70,
	0x6f, 0x77, 0x65, 0x72, 0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x4a, 0x04,
	0x08, 0x07, 0x10, 0x08, 0x1a, 0xf0, 0x02, 0x0a, 0x12, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x6d, 0x0a, 0x18, 0x73,
	0x68, 0x6f, 0x77, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f,
	0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08,
	0xc8, 0x01, 0x52, 0x16, 0x73, 0x68, 0x6f, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x6f, 0x0a, 0x19, 0x77, 0x61,
	0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08,
	0xc8, 0x01, 0x52, 0x17, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x65, 0x6d, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x70, 0x0a, 0x1a, 0x73,
	0x68, 0x6f, 0x77, 0x5f, 0x75, 0x73, 0x62, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x5f, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03,
	0x03, 0x08, 0xc8, 0x01, 0x52, 0x17, 0x73, 0x68, 0x6f, 0x77, 0x55, 0x73, 0x62, 0x54, 0x65, 0x6d,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x3a, 0x08, 0x9a,
	0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x1a, 0xbe, 0x03, 0x0a, 0x06, 0x54, 0x65, 0x74, 0x68,
	0x65, 0x72, 0x12, 0x51, 0x0a, 0x09, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42,
	0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x09, 0x73, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x65, 0x64, 0x12, 0x56, 0x0a, 0x0c, 0x64, 0x75, 0x6e, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e,
	0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01,
	0x52, 0x0b, 0x64, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x41, 0x0a,
	0x07, 0x64, 0x75, 0x6e, 0x5f, 0x61, 0x70, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x64, 0x75, 0x6e, 0x41, 0x70, 0x6e,
	0x12, 0x5e, 0x0a, 0x10, 0x6f, 0x66, 0x66, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x64, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52,
	0x0f, 0x6f, 0x66, 0x66, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x5c, 0x0a, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x70, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x0e,
	0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x3a, 0x08,
	0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x1a, 0xc4, 0x01, 0x0a, 0x06, 0x54, 0x7a, 0x69,
	0x6e, 0x66, 0x6f, 0x12, 0x56, 0x0a, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x10, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x58, 0x0a, 0x13, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x55, 0x72, 0x6c, 0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x1a,
	0x8b, 0x03, 0x0a, 0x07, 0x57, 0x65, 0x62, 0x76, 0x69, 0x65, 0x77, 0x12, 0x61, 0x0a, 0x18, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x15, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x69,
	0x0a, 0x16, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x63,
	0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03,
	0x08, 0xc8, 0x01, 0x52, 0x14, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x4c, 0x6f, 0x67,
	0x69, 0x63, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x4f, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e,
	0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x57, 0x0a, 0x0c, 0x6d, 0x75,
	0x6c, 0x74, 0x69, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87,
	0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x0c, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x1a, 0xf9, 0x02,
	0x0a, 0x03, 0x57, 0x66, 0x63, 0x12, 0x54, 0x0a, 0x0b, 0x69, 0x6d, 0x73, 0x5f, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52,
	0x0a, 0x69, 0x6d, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x4e, 0x0a, 0x08, 0x69,
	0x6d, 0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08,
	0xc8, 0x01, 0x52, 0x07, 0x69, 0x6d, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x5d, 0x0a, 0x10, 0x69,
	0x6d, 0x73, 0x5f, 0x72, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42,
	0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x0e, 0x69, 0x6d, 0x73, 0x52,
	0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x63, 0x0a, 0x13, 0x69, 0x6d,
	0x73, 0x5f, 0x72, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x11, 0x69, 0x6d,
	0x73, 0x52, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x3a,
	0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x1a, 0xb1, 0x1a, 0x0a, 0x04, 0x57, 0x69,
	0x66, 0x69, 0x12, 0x56, 0x0a, 0x0c, 0x73, 0x6c, 0x65, 0x65, 0x70, 0x5f, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x0b, 0x73,
	0x6c, 0x65, 0x65, 0x70, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x62, 0x0a, 0x12, 0x62, 0x61,
	0x64, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x11, 0x62, 0x61, 0x64,
	0x67, 0x69, 0x6e, 0x67, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x73, 0x12, 0x52,
	0x0a, 0x0a, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f,
	0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x09, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x4f, 0x6e, 0x12, 0x6d, 0x0a, 0x18, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x63, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09,
	0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x16, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f,
	0x6e, 0x12, 0x61, 0x0a, 0x12, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x77, 0x70, 0x73,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08,
	0xc8, 0x01, 0x52, 0x10, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x57, 0x70, 0x73, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x80, 0x01, 0x0a, 0x22, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5,
	0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x1f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x6e, 0x12, 0x7a, 0x0a, 0x1f, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x65,
	0x70, 0x65, 0x61, 0x74, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87,
	0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x1c, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x44, 0x65,
	0x6c, 0x61, 0x79, 0x12, 0x4b, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x70, 0x0a, 0x1a, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x73, 0x63,
	0x61, 0x6e, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x6d, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09,
	0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x17, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x77, 0x6f, 0x72, 0x6b, 0x53, 0x63, 0x61, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x4d, 0x73, 0x12, 0x4c, 0x0a, 0x07, 0x69, 0x64, 0x6c, 0x65, 0x5f, 0x6d, 0x73, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a,
	0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x06, 0x69, 0x64, 0x6c, 0x65, 0x4d, 0x73,
	0x12, 0x68, 0x0a, 0x16, 0x6e, 0x75, 0x6d, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x5f, 0x6b, 0x65, 0x70, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87,
	0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x13, 0x6e, 0x75, 0x6d, 0x4f, 0x70, 0x65, 0x6e, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x4b, 0x65, 0x70, 0x74, 0x12, 0x43, 0x0a, 0x02, 0x6f, 0x6e,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x02, 0x6f, 0x6e, 0x12,
	0x67, 0x0a, 0x15, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x61, 0x6c, 0x77, 0x61, 0x79, 0x73, 0x5f, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03,
	0x08, 0xc8, 0x01, 0x52, 0x13, 0x73, 0x63, 0x61, 0x6e, 0x41, 0x6c, 0x77, 0x61, 0x79, 0x73, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x5a, 0x0a, 0x0e, 0x77, 0x61, 0x6b, 0x65,
	0x75, 0x70, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87,
	0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x0d, 0x77, 0x61, 0x6b, 0x65, 0x75, 0x70, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x12, 0x54, 0x0a, 0x0b, 0x73, 0x61, 0x76, 0x65, 0x64, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x0a,
	0x73, 0x61, 0x76, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x72, 0x0a, 0x1b, 0x73, 0x75,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x6d, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03,
	0x03, 0x08, 0xc8, 0x01, 0x52, 0x18, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74,
	0x53, 0x63, 0x61, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x4d, 0x73, 0x12, 0x61,
	0x0a, 0x12, 0x65, 0x6e, 0x68, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f,
	0x6a, 0x6f, 0x69, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52,
	0x10, 0x65, 0x6e, 0x68, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x41, 0x75, 0x74, 0x6f, 0x4a, 0x6f, 0x69,
	0x6e, 0x12, 0x5f, 0x0a, 0x11, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x73, 0x68, 0x6f,
	0x77, 0x5f, 0x72, 0x73, 0x73, 0x69, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8,
	0x01, 0x52, 0x0f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x73,
	0x73, 0x69, 0x12, 0x80, 0x01, 0x0a, 0x23, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x5f, 0x77, 0x68, 0x65, 0x6e, 0x5f, 0x70, 0x32, 0x70, 0x5f, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x6d, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87,
	0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x1e, 0x73, 0x63, 0x61, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x57, 0x68, 0x65, 0x6e, 0x50, 0x32, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x4d, 0x73, 0x12, 0x54, 0x0a, 0x0b, 0x77, 0x61, 0x74, 0x63, 0x68, 0x64, 0x6f,
	0x67, 0x5f, 0x6f, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52,
	0x0a, 0x77, 0x61, 0x74, 0x63, 0x68, 0x64, 0x6f, 0x67, 0x4f, 0x6e, 0x12, 0x7f, 0x0a, 0x22, 0x77,
	0x61, 0x74, 0x63, 0x68, 0x64, 0x6f, 0x67, 0x5f, 0x70, 0x6f, 0x6f, 0x72, 0x5f, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x1e, 0x77, 0x61,
	0x74, 0x63, 0x68, 0x64, 0x6f, 0x67, 0x50, 0x6f, 0x6f, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x54, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x77, 0x0a, 0x1d,
	0x73, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a,
	0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x1b, 0x73, 0x75, 0x73, 0x70, 0x65, 0x6e,
	0x64, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x6b, 0x0a, 0x17, 0x76, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x65,
	0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x15, 0x76, 0x65, 0x72,
	0x62, 0x6f, 0x73, 0x65, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x12, 0x64, 0x0a, 0x14, 0x6d, 0x61, 0x78, 0x5f, 0x64, 0x68, 0x63, 0x70, 0x5f, 0x72,
	0x65, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87,
	0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x11, 0x6d, 0x61, 0x78, 0x44, 0x68, 0x63, 0x70, 0x52, 0x65,
	0x74, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x8e, 0x01, 0x0a, 0x2a, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x61, 0x6b, 0x65, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x5f, 0x6d, 0x73, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08,
	0xc8, 0x01, 0x52, 0x25, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x61, 0x6b, 0x65, 0x6c, 0x6f, 0x63, 0x6b,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4d, 0x73, 0x12, 0x76, 0x0a, 0x1d, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x73, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87,
	0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x1a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x64, 0x6f, 0x77,
	0x6e, 0x12, 0x5a, 0x0a, 0x0e, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x62,
	0x61, 0x6e, 0x64, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x0d,
	0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x42, 0x61, 0x6e, 0x64, 0x12, 0x50, 0x0a,
	0x0f, 0x70, 0x32, 0x70, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x0d, 0x70, 0x32, 0x70, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x7c, 0x0a, 0x21, 0x65, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x6f, 0x75, 0x74,
	0x5f, 0x6f, 0x66, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x5f, 0x6d, 0x73, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52,
	0x1c, 0x65, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4d, 0x73, 0x12, 0x70, 0x0a,
	0x1a, 0x6f, 0x6e, 0x5f, 0x77, 0x68, 0x65, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x21, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5,
	0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x17, 0x6f, 0x6e, 0x57, 0x68, 0x65, 0x6e, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12,
	0x6c, 0x0a, 0x18, 0x62, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f,
	0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x6d, 0x73, 0x18, 0x22, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5,
	0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x15, 0x62, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x44, 0x65,
	0x6c, 0x61, 0x79, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x4d, 0x73, 0x3a, 0x08, 0x9a,
	0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x4a, 0x04, 0x08, 0x07, 0x10, 0x08, 0x4a, 0x04, 0x08,
	0x19, 0x10, 0x1a, 0x4a, 0x04, 0x08, 0x1f, 0x10, 0x20, 0x52, 0x2a, 0x63, 0x61, 0x72, 0x72, 0x69,
	0x65, 0x72, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x5f, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6f, 0x6e, 0x52, 0x23, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x5f, 0x6d, 0x61, 0x63, 0x5f, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x11, 0x72, 0x65, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x6d, 0x73, 0x1a, 0x99, 0x02,
	0x0a, 0x03, 0x5a, 0x65, 0x6e, 0x12, 0x47, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a,
	0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x5f,
	0x0a, 0x11, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x72, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x5f, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x42, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x52, 0x0f,
	0x6d, 0x6f, 0x64, 0x65, 0x52, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x52, 0x0a, 0x10, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x65,
	0x74, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x52, 0x0e, 0x6d, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45,
	0x74, 0x61, 0x67, 0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x02, 0x08, 0x64, 0x4a, 0x04, 0x08,
	0x04, 0x10, 0x05, 0x4a, 0x04, 0x08, 0x05, 0x10, 0x06, 0x3a, 0x08, 0x9a, 0x9f, 0xd5, 0x87, 0x03,
	0x02, 0x08, 0x64, 0x4a, 0x04, 0x08, 0x06, 0x10, 0x07, 0x4a, 0x04, 0x08, 0x11, 0x10, 0x12, 0x4a,
	0x04, 0x08, 0x12, 0x10, 0x13, 0x4a, 0x04, 0x08, 0x17, 0x10, 0x18, 0x4a, 0x04, 0x08, 0x42, 0x10,
	0x43, 0x4a, 0x06, 0x08, 0x95, 0x01, 0x10, 0x96, 0x01, 0x4a, 0x06, 0x08, 0x96, 0x01, 0x10, 0x97,
	0x01, 0x4a, 0x06, 0x08, 0x93, 0x01, 0x10, 0x94, 0x01, 0x4a, 0x04, 0x08, 0x5e, 0x10, 0x5f, 0x42,
	0x02, 0x50, 0x01,
}

var (
	file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescOnce sync.Once
	file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescData = file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDesc
)

func file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescGZIP() []byte {
	file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescOnce.Do(func() {
		file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescData = protoimpl.X.CompressGZIP(file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescData)
	})
	return file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDescData
}

var file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes = make([]protoimpl.MessageInfo, 68)
var file_frameworks_base_core_proto_android_providers_settings_global_proto_goTypes = []any{
	(*GlobalSettingsProto)(nil),                           // 0: android.providers.settings.GlobalSettingsProto
	(*GlobalSettingsProto_AirplaneMode)(nil),              // 1: android.providers.settings.GlobalSettingsProto.AirplaneMode
	(*GlobalSettingsProto_Anomaly)(nil),                   // 2: android.providers.settings.GlobalSettingsProto.Anomaly
	(*GlobalSettingsProto_ApnDb)(nil),                     // 3: android.providers.settings.GlobalSettingsProto.ApnDb
	(*GlobalSettingsProto_App)(nil),                       // 4: android.providers.settings.GlobalSettingsProto.App
	(*GlobalSettingsProto_Autofill)(nil),                  // 5: android.providers.settings.GlobalSettingsProto.Autofill
	(*GlobalSettingsProto_Backup)(nil),                    // 6: android.providers.settings.GlobalSettingsProto.Backup
	(*GlobalSettingsProto_Battery)(nil),                   // 7: android.providers.settings.GlobalSettingsProto.Battery
	(*GlobalSettingsProto_BleScan)(nil),                   // 8: android.providers.settings.GlobalSettingsProto.BleScan
	(*GlobalSettingsProto_Bluetooth)(nil),                 // 9: android.providers.settings.GlobalSettingsProto.Bluetooth
	(*GlobalSettingsProto_CaptivePortal)(nil),             // 10: android.providers.settings.GlobalSettingsProto.CaptivePortal
	(*GlobalSettingsProto_Carrier)(nil),                   // 11: android.providers.settings.GlobalSettingsProto.Carrier
	(*GlobalSettingsProto_Cdma)(nil),                      // 12: android.providers.settings.GlobalSettingsProto.Cdma
	(*GlobalSettingsProto_CertPin)(nil),                   // 13: android.providers.settings.GlobalSettingsProto.CertPin
	(*GlobalSettingsProto_Connectivity)(nil),              // 14: android.providers.settings.GlobalSettingsProto.Connectivity
	(*GlobalSettingsProto_Data)(nil),                      // 15: android.providers.settings.GlobalSettingsProto.Data
	(*GlobalSettingsProto_Database)(nil),                  // 16: android.providers.settings.GlobalSettingsProto.Database
	(*GlobalSettingsProto_DateTime)(nil),                  // 17: android.providers.settings.GlobalSettingsProto.DateTime
	(*GlobalSettingsProto_Debug)(nil),                     // 18: android.providers.settings.GlobalSettingsProto.Debug
	(*GlobalSettingsProto_Default)(nil),                   // 19: android.providers.settings.GlobalSettingsProto.Default
	(*GlobalSettingsProto_Development)(nil),               // 20: android.providers.settings.GlobalSettingsProto.Development
	(*GlobalSettingsProto_Device)(nil),                    // 21: android.providers.settings.GlobalSettingsProto.Device
	(*GlobalSettingsProto_Display)(nil),                   // 22: android.providers.settings.GlobalSettingsProto.Display
	(*GlobalSettingsProto_DnsResolver)(nil),               // 23: android.providers.settings.GlobalSettingsProto.DnsResolver
	(*GlobalSettingsProto_Download)(nil),                  // 24: android.providers.settings.GlobalSettingsProto.Download
	(*GlobalSettingsProto_Dropbox)(nil),                   // 25: android.providers.settings.GlobalSettingsProto.Dropbox
	(*GlobalSettingsProto_DynamicPowerSavings)(nil),       // 26: android.providers.settings.GlobalSettingsProto.DynamicPowerSavings
	(*GlobalSettingsProto_Emergency)(nil),                 // 27: android.providers.settings.GlobalSettingsProto.Emergency
	(*GlobalSettingsProto_Enable)(nil),                    // 28: android.providers.settings.GlobalSettingsProto.Enable
	(*GlobalSettingsProto_Euicc)(nil),                     // 29: android.providers.settings.GlobalSettingsProto.Euicc
	(*GlobalSettingsProto_GlobalHttpProxy)(nil),           // 30: android.providers.settings.GlobalSettingsProto.GlobalHttpProxy
	(*GlobalSettingsProto_Gpu)(nil),                       // 31: android.providers.settings.GlobalSettingsProto.Gpu
	(*GlobalSettingsProto_Hdmi)(nil),                      // 32: android.providers.settings.GlobalSettingsProto.Hdmi
	(*GlobalSettingsProto_InetCondition)(nil),             // 33: android.providers.settings.GlobalSettingsProto.InetCondition
	(*GlobalSettingsProto_InstantApp)(nil),                // 34: android.providers.settings.GlobalSettingsProto.InstantApp
	(*GlobalSettingsProto_IntentFirewall)(nil),            // 35: android.providers.settings.GlobalSettingsProto.IntentFirewall
	(*GlobalSettingsProto_LangId)(nil),                    // 36: android.providers.settings.GlobalSettingsProto.LangId
	(*GlobalSettingsProto_Location)(nil),                  // 37: android.providers.settings.GlobalSettingsProto.Location
	(*GlobalSettingsProto_LowPowerMode)(nil),              // 38: android.providers.settings.GlobalSettingsProto.LowPowerMode
	(*GlobalSettingsProto_ManagedDeviceProvisioning)(nil), // 39: android.providers.settings.GlobalSettingsProto.ManagedDeviceProvisioning
	(*GlobalSettingsProto_Mhl)(nil),                       // 40: android.providers.settings.GlobalSettingsProto.Mhl
	(*GlobalSettingsProto_MobileData)(nil),                // 41: android.providers.settings.GlobalSettingsProto.MobileData
	(*GlobalSettingsProto_MultiSim)(nil),                  // 42: android.providers.settings.GlobalSettingsProto.MultiSim
	(*GlobalSettingsProto_Netstats)(nil),                  // 43: android.providers.settings.GlobalSettingsProto.Netstats
	(*GlobalSettingsProto_Network)(nil),                   // 44: android.providers.settings.GlobalSettingsProto.Network
	(*GlobalSettingsProto_Nitz)(nil),                      // 45: android.providers.settings.GlobalSettingsProto.Nitz
	(*GlobalSettingsProto_Notification)(nil),              // 46: android.providers.settings.GlobalSettingsProto.Notification
	(*GlobalSettingsProto_Ntp)(nil),                       // 47: android.providers.settings.GlobalSettingsProto.Ntp
	(*GlobalSettingsProto_UserAbsentSmallBattery)(nil),    // 48: android.providers.settings.GlobalSettingsProto.UserAbsentSmallBattery
	(*GlobalSettingsProto_PackageVerifier)(nil),           // 49: android.providers.settings.GlobalSettingsProto.PackageVerifier
	(*GlobalSettingsProto_PdpWatchdog)(nil),               // 50: android.providers.settings.GlobalSettingsProto.PdpWatchdog
	(*GlobalSettingsProto_PrepaidSetup)(nil),              // 51: android.providers.settings.GlobalSettingsProto.PrepaidSetup
	(*GlobalSettingsProto_Private)(nil),                   // 52: android.providers.settings.GlobalSettingsProto.Private
	(*GlobalSettingsProto_Selinux)(nil),                   // 53: android.providers.settings.GlobalSettingsProto.Selinux
	(*GlobalSettingsProto_SmartSelection)(nil),            // 54: android.providers.settings.GlobalSettingsProto.SmartSelection
	(*GlobalSettingsProto_Sms)(nil),                       // 55: android.providers.settings.GlobalSettingsProto.Sms
	(*GlobalSettingsProto_Sounds)(nil),                    // 56: android.providers.settings.GlobalSettingsProto.Sounds
	(*GlobalSettingsProto_SoundTrigger)(nil),              // 57: android.providers.settings.GlobalSettingsProto.SoundTrigger
	(*GlobalSettingsProto_Storage)(nil),                   // 58: android.providers.settings.GlobalSettingsProto.Storage
	(*GlobalSettingsProto_Sync)(nil),                      // 59: android.providers.settings.GlobalSettingsProto.Sync
	(*GlobalSettingsProto_Sys)(nil),                       // 60: android.providers.settings.GlobalSettingsProto.Sys
	(*GlobalSettingsProto_TemperatureWarning)(nil),        // 61: android.providers.settings.GlobalSettingsProto.TemperatureWarning
	(*GlobalSettingsProto_Tether)(nil),                    // 62: android.providers.settings.GlobalSettingsProto.Tether
	(*GlobalSettingsProto_Tzinfo)(nil),                    // 63: android.providers.settings.GlobalSettingsProto.Tzinfo
	(*GlobalSettingsProto_Webview)(nil),                   // 64: android.providers.settings.GlobalSettingsProto.Webview
	(*GlobalSettingsProto_Wfc)(nil),                       // 65: android.providers.settings.GlobalSettingsProto.Wfc
	(*GlobalSettingsProto_Wifi)(nil),                      // 66: android.providers.settings.GlobalSettingsProto.Wifi
	(*GlobalSettingsProto_Zen)(nil),                       // 67: android.providers.settings.GlobalSettingsProto.Zen
	(*SettingsOperationProto)(nil),                        // 68: android.providers.settings.SettingsOperationProto
	(*SettingProto)(nil),                                  // 69: android.providers.settings.SettingProto
}
var file_frameworks_base_core_proto_android_providers_settings_global_proto_depIdxs = []int32{
	68,  // 0: android.providers.settings.GlobalSettingsProto.historical_operations:type_name -> android.providers.settings.SettingsOperationProto
	69,  // 1: android.providers.settings.GlobalSettingsProto.activity_manager_constants:type_name -> android.providers.settings.SettingProto
	69,  // 2: android.providers.settings.GlobalSettingsProto.adb_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 3: android.providers.settings.GlobalSettingsProto.add_users_when_locked:type_name -> android.providers.settings.SettingProto
	1,   // 4: android.providers.settings.GlobalSettingsProto.airplane_mode:type_name -> android.providers.settings.GlobalSettingsProto.AirplaneMode
	69,  // 5: android.providers.settings.GlobalSettingsProto.allow_user_switching_when_system_user_locked:type_name -> android.providers.settings.SettingProto
	69,  // 6: android.providers.settings.GlobalSettingsProto.always_on_display_constants:type_name -> android.providers.settings.SettingProto
	69,  // 7: android.providers.settings.GlobalSettingsProto.always_finish_activities:type_name -> android.providers.settings.SettingProto
	69,  // 8: android.providers.settings.GlobalSettingsProto.animator_duration_scale:type_name -> android.providers.settings.SettingProto
	2,   // 9: android.providers.settings.GlobalSettingsProto.anomaly:type_name -> android.providers.settings.GlobalSettingsProto.Anomaly
	3,   // 10: android.providers.settings.GlobalSettingsProto.apn_db:type_name -> android.providers.settings.GlobalSettingsProto.ApnDb
	4,   // 11: android.providers.settings.GlobalSettingsProto.app:type_name -> android.providers.settings.GlobalSettingsProto.App
	69,  // 12: android.providers.settings.GlobalSettingsProto.assisted_gps_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 13: android.providers.settings.GlobalSettingsProto.audio_safe_volume_state:type_name -> android.providers.settings.SettingProto
	69,  // 14: android.providers.settings.GlobalSettingsProto.audio_safe_csd_current_value:type_name -> android.providers.settings.SettingProto
	69,  // 15: android.providers.settings.GlobalSettingsProto.audio_safe_csd_next_warning:type_name -> android.providers.settings.SettingProto
	69,  // 16: android.providers.settings.GlobalSettingsProto.audio_safe_csd_dose_records:type_name -> android.providers.settings.SettingProto
	5,   // 17: android.providers.settings.GlobalSettingsProto.autofill:type_name -> android.providers.settings.GlobalSettingsProto.Autofill
	6,   // 18: android.providers.settings.GlobalSettingsProto.backup:type_name -> android.providers.settings.GlobalSettingsProto.Backup
	7,   // 19: android.providers.settings.GlobalSettingsProto.battery:type_name -> android.providers.settings.GlobalSettingsProto.Battery
	8,   // 20: android.providers.settings.GlobalSettingsProto.ble_scan:type_name -> android.providers.settings.GlobalSettingsProto.BleScan
	9,   // 21: android.providers.settings.GlobalSettingsProto.bluetooth:type_name -> android.providers.settings.GlobalSettingsProto.Bluetooth
	69,  // 22: android.providers.settings.GlobalSettingsProto.boot_count:type_name -> android.providers.settings.SettingProto
	69,  // 23: android.providers.settings.GlobalSettingsProto.cached_apps_freezer_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 24: android.providers.settings.GlobalSettingsProto.call_auto_retry:type_name -> android.providers.settings.SettingProto
	10,  // 25: android.providers.settings.GlobalSettingsProto.captive_portal:type_name -> android.providers.settings.GlobalSettingsProto.CaptivePortal
	11,  // 26: android.providers.settings.GlobalSettingsProto.carrier:type_name -> android.providers.settings.GlobalSettingsProto.Carrier
	12,  // 27: android.providers.settings.GlobalSettingsProto.cdma:type_name -> android.providers.settings.GlobalSettingsProto.Cdma
	69,  // 28: android.providers.settings.GlobalSettingsProto.cell_on:type_name -> android.providers.settings.SettingProto
	13,  // 29: android.providers.settings.GlobalSettingsProto.cert_pin:type_name -> android.providers.settings.GlobalSettingsProto.CertPin
	69,  // 30: android.providers.settings.GlobalSettingsProto.chained_battery_attribution_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 31: android.providers.settings.GlobalSettingsProto.compatibility_mode:type_name -> android.providers.settings.SettingProto
	14,  // 32: android.providers.settings.GlobalSettingsProto.connectivity:type_name -> android.providers.settings.GlobalSettingsProto.Connectivity
	69,  // 33: android.providers.settings.GlobalSettingsProto.contact_metadata_sync_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 34: android.providers.settings.GlobalSettingsProto.contacts_database_wal_enabled:type_name -> android.providers.settings.SettingProto
	15,  // 35: android.providers.settings.GlobalSettingsProto.data:type_name -> android.providers.settings.GlobalSettingsProto.Data
	16,  // 36: android.providers.settings.GlobalSettingsProto.database:type_name -> android.providers.settings.GlobalSettingsProto.Database
	17,  // 37: android.providers.settings.GlobalSettingsProto.date_time:type_name -> android.providers.settings.GlobalSettingsProto.DateTime
	18,  // 38: android.providers.settings.GlobalSettingsProto.debug:type_name -> android.providers.settings.GlobalSettingsProto.Debug
	19,  // 39: android.providers.settings.GlobalSettingsProto.default:type_name -> android.providers.settings.GlobalSettingsProto.Default
	20,  // 40: android.providers.settings.GlobalSettingsProto.development:type_name -> android.providers.settings.GlobalSettingsProto.Development
	21,  // 41: android.providers.settings.GlobalSettingsProto.device:type_name -> android.providers.settings.GlobalSettingsProto.Device
	69,  // 42: android.providers.settings.GlobalSettingsProto.disk_free_change_reporting_threshold:type_name -> android.providers.settings.SettingProto
	22,  // 43: android.providers.settings.GlobalSettingsProto.display:type_name -> android.providers.settings.GlobalSettingsProto.Display
	23,  // 44: android.providers.settings.GlobalSettingsProto.dns_resolver:type_name -> android.providers.settings.GlobalSettingsProto.DnsResolver
	69,  // 45: android.providers.settings.GlobalSettingsProto.dock_audio_media_enabled:type_name -> android.providers.settings.SettingProto
	24,  // 46: android.providers.settings.GlobalSettingsProto.download:type_name -> android.providers.settings.GlobalSettingsProto.Download
	25,  // 47: android.providers.settings.GlobalSettingsProto.dropbox:type_name -> android.providers.settings.GlobalSettingsProto.Dropbox
	26,  // 48: android.providers.settings.GlobalSettingsProto.dynamic_power_savings:type_name -> android.providers.settings.GlobalSettingsProto.DynamicPowerSavings
	27,  // 49: android.providers.settings.GlobalSettingsProto.emergency:type_name -> android.providers.settings.GlobalSettingsProto.Emergency
	28,  // 50: android.providers.settings.GlobalSettingsProto.enable:type_name -> android.providers.settings.GlobalSettingsProto.Enable
	69,  // 51: android.providers.settings.GlobalSettingsProto.encoded_surround_output:type_name -> android.providers.settings.SettingProto
	69,  // 52: android.providers.settings.GlobalSettingsProto.enhanced_4g_mode_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 53: android.providers.settings.GlobalSettingsProto.error_logcat_lines:type_name -> android.providers.settings.SettingProto
	29,  // 54: android.providers.settings.GlobalSettingsProto.euicc:type_name -> android.providers.settings.GlobalSettingsProto.Euicc
	69,  // 55: android.providers.settings.GlobalSettingsProto.fancy_ime_animations:type_name -> android.providers.settings.SettingProto
	69,  // 56: android.providers.settings.GlobalSettingsProto.force_allow_on_external:type_name -> android.providers.settings.SettingProto
	69,  // 57: android.providers.settings.GlobalSettingsProto.fps_divisor:type_name -> android.providers.settings.SettingProto
	69,  // 58: android.providers.settings.GlobalSettingsProto.fstrim_mandatory_interval:type_name -> android.providers.settings.SettingProto
	30,  // 59: android.providers.settings.GlobalSettingsProto.global_http_proxy:type_name -> android.providers.settings.GlobalSettingsProto.GlobalHttpProxy
	69,  // 60: android.providers.settings.GlobalSettingsProto.gprs_register_check_period_ms:type_name -> android.providers.settings.SettingProto
	31,  // 61: android.providers.settings.GlobalSettingsProto.gpu:type_name -> android.providers.settings.GlobalSettingsProto.Gpu
	32,  // 62: android.providers.settings.GlobalSettingsProto.hdmi:type_name -> android.providers.settings.GlobalSettingsProto.Hdmi
	69,  // 63: android.providers.settings.GlobalSettingsProto.heads_up_notifications_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 64: android.providers.settings.GlobalSettingsProto.hidden_api_blacklist_exemptions:type_name -> android.providers.settings.SettingProto
	33,  // 65: android.providers.settings.GlobalSettingsProto.inet_condition:type_name -> android.providers.settings.GlobalSettingsProto.InetCondition
	34,  // 66: android.providers.settings.GlobalSettingsProto.instant_app:type_name -> android.providers.settings.GlobalSettingsProto.InstantApp
	35,  // 67: android.providers.settings.GlobalSettingsProto.intent_firewall:type_name -> android.providers.settings.GlobalSettingsProto.IntentFirewall
	69,  // 68: android.providers.settings.GlobalSettingsProto.keep_profile_in_background:type_name -> android.providers.settings.SettingProto
	36,  // 69: android.providers.settings.GlobalSettingsProto.lang_id:type_name -> android.providers.settings.GlobalSettingsProto.LangId
	37,  // 70: android.providers.settings.GlobalSettingsProto.location:type_name -> android.providers.settings.GlobalSettingsProto.Location
	38,  // 71: android.providers.settings.GlobalSettingsProto.low_power_mode:type_name -> android.providers.settings.GlobalSettingsProto.LowPowerMode
	69,  // 72: android.providers.settings.GlobalSettingsProto.lte_service_forced:type_name -> android.providers.settings.SettingProto
	69,  // 73: android.providers.settings.GlobalSettingsProto.max_error_bytes:type_name -> android.providers.settings.SettingProto
	39,  // 74: android.providers.settings.GlobalSettingsProto.managed_device_provisioning:type_name -> android.providers.settings.GlobalSettingsProto.ManagedDeviceProvisioning
	69,  // 75: android.providers.settings.GlobalSettingsProto.mdc_initial_max_retry:type_name -> android.providers.settings.SettingProto
	40,  // 76: android.providers.settings.GlobalSettingsProto.mhl:type_name -> android.providers.settings.GlobalSettingsProto.Mhl
	41,  // 77: android.providers.settings.GlobalSettingsProto.mobile_data:type_name -> android.providers.settings.GlobalSettingsProto.MobileData
	69,  // 78: android.providers.settings.GlobalSettingsProto.mode_ringer:type_name -> android.providers.settings.SettingProto
	69,  // 79: android.providers.settings.GlobalSettingsProto.mute_alarm_stream_with_ringer_mode:type_name -> android.providers.settings.SettingProto
	42,  // 80: android.providers.settings.GlobalSettingsProto.multi_sim:type_name -> android.providers.settings.GlobalSettingsProto.MultiSim
	69,  // 81: android.providers.settings.GlobalSettingsProto.native_flags_health_check_enabled:type_name -> android.providers.settings.SettingProto
	43,  // 82: android.providers.settings.GlobalSettingsProto.netstats:type_name -> android.providers.settings.GlobalSettingsProto.Netstats
	44,  // 83: android.providers.settings.GlobalSettingsProto.network:type_name -> android.providers.settings.GlobalSettingsProto.Network
	69,  // 84: android.providers.settings.GlobalSettingsProto.new_contact_aggregator:type_name -> android.providers.settings.SettingProto
	69,  // 85: android.providers.settings.GlobalSettingsProto.night_display_forced_auto_mode_available:type_name -> android.providers.settings.SettingProto
	45,  // 86: android.providers.settings.GlobalSettingsProto.nitz:type_name -> android.providers.settings.GlobalSettingsProto.Nitz
	46,  // 87: android.providers.settings.GlobalSettingsProto.notification:type_name -> android.providers.settings.GlobalSettingsProto.Notification
	69,  // 88: android.providers.settings.GlobalSettingsProto.nr_nsa_tracking_screen_off_mode:type_name -> android.providers.settings.SettingProto
	47,  // 89: android.providers.settings.GlobalSettingsProto.ntp:type_name -> android.providers.settings.GlobalSettingsProto.Ntp
	48,  // 90: android.providers.settings.GlobalSettingsProto.user_absent_small_battery:type_name -> android.providers.settings.GlobalSettingsProto.UserAbsentSmallBattery
	69,  // 91: android.providers.settings.GlobalSettingsProto.ota_disable_automatic_update:type_name -> android.providers.settings.SettingProto
	69,  // 92: android.providers.settings.GlobalSettingsProto.overlay_display_devices:type_name -> android.providers.settings.SettingProto
	69,  // 93: android.providers.settings.GlobalSettingsProto.override_settings_provider_restore_any_version:type_name -> android.providers.settings.SettingProto
	69,  // 94: android.providers.settings.GlobalSettingsProto.pac_change_delay:type_name -> android.providers.settings.SettingProto
	49,  // 95: android.providers.settings.GlobalSettingsProto.package_verifier:type_name -> android.providers.settings.GlobalSettingsProto.PackageVerifier
	50,  // 96: android.providers.settings.GlobalSettingsProto.pdp_watchdog:type_name -> android.providers.settings.GlobalSettingsProto.PdpWatchdog
	69,  // 97: android.providers.settings.GlobalSettingsProto.policy_control:type_name -> android.providers.settings.SettingProto
	69,  // 98: android.providers.settings.GlobalSettingsProto.power_manager_constants:type_name -> android.providers.settings.SettingProto
	69,  // 99: android.providers.settings.GlobalSettingsProto.power_button_long_press_duration_ms:type_name -> android.providers.settings.SettingProto
	51,  // 100: android.providers.settings.GlobalSettingsProto.prepaid_setup:type_name -> android.providers.settings.GlobalSettingsProto.PrepaidSetup
	52,  // 101: android.providers.settings.GlobalSettingsProto.private:type_name -> android.providers.settings.GlobalSettingsProto.Private
	69,  // 102: android.providers.settings.GlobalSettingsProto.provisioning_apn_alarm_delay_in_ms:type_name -> android.providers.settings.SettingProto
	69,  // 103: android.providers.settings.GlobalSettingsProto.read_external_storage_enforced_default:type_name -> android.providers.settings.SettingProto
	69,  // 104: android.providers.settings.GlobalSettingsProto.require_password_to_decrypt:type_name -> android.providers.settings.SettingProto
	69,  // 105: android.providers.settings.GlobalSettingsProto.safe_boot_disallowed:type_name -> android.providers.settings.SettingProto
	53,  // 106: android.providers.settings.GlobalSettingsProto.selinux:type_name -> android.providers.settings.GlobalSettingsProto.Selinux
	69,  // 107: android.providers.settings.GlobalSettingsProto.send_action_app_error:type_name -> android.providers.settings.SettingProto
	69,  // 108: android.providers.settings.GlobalSettingsProto.set_install_location:type_name -> android.providers.settings.SettingProto
	69,  // 109: android.providers.settings.GlobalSettingsProto.shortcut_manager_constants:type_name -> android.providers.settings.SettingProto
	69,  // 110: android.providers.settings.GlobalSettingsProto.show_first_crash_dialog:type_name -> android.providers.settings.SettingProto
	69,  // 111: android.providers.settings.GlobalSettingsProto.show_hidden_launcher_icon_apps_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 112: android.providers.settings.GlobalSettingsProto.show_restart_in_crash_dialog:type_name -> android.providers.settings.SettingProto
	69,  // 113: android.providers.settings.GlobalSettingsProto.show_mute_in_crash_dialog:type_name -> android.providers.settings.SettingProto
	69,  // 114: android.providers.settings.GlobalSettingsProto.show_new_app_installed_notification_enabled:type_name -> android.providers.settings.SettingProto
	54,  // 115: android.providers.settings.GlobalSettingsProto.smart_selection:type_name -> android.providers.settings.GlobalSettingsProto.SmartSelection
	55,  // 116: android.providers.settings.GlobalSettingsProto.sms:type_name -> android.providers.settings.GlobalSettingsProto.Sms
	56,  // 117: android.providers.settings.GlobalSettingsProto.sounds:type_name -> android.providers.settings.GlobalSettingsProto.Sounds
	57,  // 118: android.providers.settings.GlobalSettingsProto.sound_trigger:type_name -> android.providers.settings.GlobalSettingsProto.SoundTrigger
	69,  // 119: android.providers.settings.GlobalSettingsProto.speed_label_cache_eviction_age_ms:type_name -> android.providers.settings.SettingProto
	69,  // 120: android.providers.settings.GlobalSettingsProto.sqlite_compatibility_wal_flags:type_name -> android.providers.settings.SettingProto
	69,  // 121: android.providers.settings.GlobalSettingsProto.stay_on_while_plugged_in:type_name -> android.providers.settings.SettingProto
	58,  // 122: android.providers.settings.GlobalSettingsProto.storage:type_name -> android.providers.settings.GlobalSettingsProto.Storage
	59,  // 123: android.providers.settings.GlobalSettingsProto.sync:type_name -> android.providers.settings.GlobalSettingsProto.Sync
	60,  // 124: android.providers.settings.GlobalSettingsProto.sys:type_name -> android.providers.settings.GlobalSettingsProto.Sys
	69,  // 125: android.providers.settings.GlobalSettingsProto.tcp_default_init_rwnd:type_name -> android.providers.settings.SettingProto
	61,  // 126: android.providers.settings.GlobalSettingsProto.temperature_warning:type_name -> android.providers.settings.GlobalSettingsProto.TemperatureWarning
	62,  // 127: android.providers.settings.GlobalSettingsProto.tether:type_name -> android.providers.settings.GlobalSettingsProto.Tether
	69,  // 128: android.providers.settings.GlobalSettingsProto.text_classifier_constants:type_name -> android.providers.settings.SettingProto
	69,  // 129: android.providers.settings.GlobalSettingsProto.theater_mode_on:type_name -> android.providers.settings.SettingProto
	69,  // 130: android.providers.settings.GlobalSettingsProto.time_only_mode_constants:type_name -> android.providers.settings.SettingProto
	69,  // 131: android.providers.settings.GlobalSettingsProto.transition_animation_scale:type_name -> android.providers.settings.SettingProto
	63,  // 132: android.providers.settings.GlobalSettingsProto.tzinfo:type_name -> android.providers.settings.GlobalSettingsProto.Tzinfo
	69,  // 133: android.providers.settings.GlobalSettingsProto.unused_static_shared_lib_min_cache_period_ms:type_name -> android.providers.settings.SettingProto
	69,  // 134: android.providers.settings.GlobalSettingsProto.usb_mass_storage_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 135: android.providers.settings.GlobalSettingsProto.use_google_mail:type_name -> android.providers.settings.SettingProto
	69,  // 136: android.providers.settings.GlobalSettingsProto.use_open_wifi_package:type_name -> android.providers.settings.SettingProto
	69,  // 137: android.providers.settings.GlobalSettingsProto.uwb_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 138: android.providers.settings.GlobalSettingsProto.vt_ims_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 139: android.providers.settings.GlobalSettingsProto.wait_for_debugger:type_name -> android.providers.settings.SettingProto
	64,  // 140: android.providers.settings.GlobalSettingsProto.webview:type_name -> android.providers.settings.GlobalSettingsProto.Webview
	65,  // 141: android.providers.settings.GlobalSettingsProto.wfc:type_name -> android.providers.settings.GlobalSettingsProto.Wfc
	66,  // 142: android.providers.settings.GlobalSettingsProto.wifi:type_name -> android.providers.settings.GlobalSettingsProto.Wifi
	69,  // 143: android.providers.settings.GlobalSettingsProto.wimax_networks_available_notification_on:type_name -> android.providers.settings.SettingProto
	69,  // 144: android.providers.settings.GlobalSettingsProto.window_animation_scale:type_name -> android.providers.settings.SettingProto
	69,  // 145: android.providers.settings.GlobalSettingsProto.wtf_is_fatal:type_name -> android.providers.settings.SettingProto
	67,  // 146: android.providers.settings.GlobalSettingsProto.zen:type_name -> android.providers.settings.GlobalSettingsProto.Zen
	69,  // 147: android.providers.settings.GlobalSettingsProto.zram_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 148: android.providers.settings.GlobalSettingsProto.app_ops_constants:type_name -> android.providers.settings.SettingProto
	69,  // 149: android.providers.settings.GlobalSettingsProto.text_classifier_action_model_params:type_name -> android.providers.settings.SettingProto
	69,  // 150: android.providers.settings.GlobalSettingsProto.AirplaneMode.on:type_name -> android.providers.settings.SettingProto
	69,  // 151: android.providers.settings.GlobalSettingsProto.AirplaneMode.radios:type_name -> android.providers.settings.SettingProto
	69,  // 152: android.providers.settings.GlobalSettingsProto.AirplaneMode.toggleable_radios:type_name -> android.providers.settings.SettingProto
	69,  // 153: android.providers.settings.GlobalSettingsProto.Anomaly.detection_constants:type_name -> android.providers.settings.SettingProto
	69,  // 154: android.providers.settings.GlobalSettingsProto.Anomaly.config_version:type_name -> android.providers.settings.SettingProto
	69,  // 155: android.providers.settings.GlobalSettingsProto.Anomaly.config:type_name -> android.providers.settings.SettingProto
	69,  // 156: android.providers.settings.GlobalSettingsProto.ApnDb.update_content_url:type_name -> android.providers.settings.SettingProto
	69,  // 157: android.providers.settings.GlobalSettingsProto.ApnDb.update_metadata_url:type_name -> android.providers.settings.SettingProto
	69,  // 158: android.providers.settings.GlobalSettingsProto.App.standby_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 159: android.providers.settings.GlobalSettingsProto.App.auto_restriction_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 160: android.providers.settings.GlobalSettingsProto.App.forced_app_standby_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 161: android.providers.settings.GlobalSettingsProto.App.forced_app_standby_for_small_battery_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 162: android.providers.settings.GlobalSettingsProto.Autofill.compat_mode_allowed_packages:type_name -> android.providers.settings.SettingProto
	69,  // 163: android.providers.settings.GlobalSettingsProto.Autofill.logging_level:type_name -> android.providers.settings.SettingProto
	69,  // 164: android.providers.settings.GlobalSettingsProto.Autofill.max_partitions_size:type_name -> android.providers.settings.SettingProto
	69,  // 165: android.providers.settings.GlobalSettingsProto.Autofill.max_visible_datasets:type_name -> android.providers.settings.SettingProto
	69,  // 166: android.providers.settings.GlobalSettingsProto.Backup.backup_agent_timeout_parameters:type_name -> android.providers.settings.SettingProto
	69,  // 167: android.providers.settings.GlobalSettingsProto.Battery.discharge_duration_threshold:type_name -> android.providers.settings.SettingProto
	69,  // 168: android.providers.settings.GlobalSettingsProto.Battery.discharge_threshold:type_name -> android.providers.settings.SettingProto
	69,  // 169: android.providers.settings.GlobalSettingsProto.Battery.saver_constants:type_name -> android.providers.settings.SettingProto
	69,  // 170: android.providers.settings.GlobalSettingsProto.Battery.saver_device_specific_constants:type_name -> android.providers.settings.SettingProto
	69,  // 171: android.providers.settings.GlobalSettingsProto.Battery.stats_constants:type_name -> android.providers.settings.SettingProto
	69,  // 172: android.providers.settings.GlobalSettingsProto.Battery.tip_constants:type_name -> android.providers.settings.SettingProto
	69,  // 173: android.providers.settings.GlobalSettingsProto.BleScan.always_available:type_name -> android.providers.settings.SettingProto
	69,  // 174: android.providers.settings.GlobalSettingsProto.BleScan.low_power_window_ms:type_name -> android.providers.settings.SettingProto
	69,  // 175: android.providers.settings.GlobalSettingsProto.BleScan.balanced_window_ms:type_name -> android.providers.settings.SettingProto
	69,  // 176: android.providers.settings.GlobalSettingsProto.BleScan.low_latency_window_ms:type_name -> android.providers.settings.SettingProto
	69,  // 177: android.providers.settings.GlobalSettingsProto.BleScan.low_power_interval_ms:type_name -> android.providers.settings.SettingProto
	69,  // 178: android.providers.settings.GlobalSettingsProto.BleScan.balanced_interval_ms:type_name -> android.providers.settings.SettingProto
	69,  // 179: android.providers.settings.GlobalSettingsProto.BleScan.low_latency_interval_ms:type_name -> android.providers.settings.SettingProto
	69,  // 180: android.providers.settings.GlobalSettingsProto.BleScan.background_mode:type_name -> android.providers.settings.SettingProto
	69,  // 181: android.providers.settings.GlobalSettingsProto.Bluetooth.class_of_device:type_name -> android.providers.settings.SettingProto
	69,  // 182: android.providers.settings.GlobalSettingsProto.Bluetooth.disabled_profiles:type_name -> android.providers.settings.SettingProto
	69,  // 183: android.providers.settings.GlobalSettingsProto.Bluetooth.interoperability_list:type_name -> android.providers.settings.SettingProto
	69,  // 184: android.providers.settings.GlobalSettingsProto.Bluetooth.on:type_name -> android.providers.settings.SettingProto
	69,  // 185: android.providers.settings.GlobalSettingsProto.Bluetooth.headset_priorities:type_name -> android.providers.settings.SettingProto
	69,  // 186: android.providers.settings.GlobalSettingsProto.Bluetooth.a2dp_sink_priorities:type_name -> android.providers.settings.SettingProto
	69,  // 187: android.providers.settings.GlobalSettingsProto.Bluetooth.a2dp_src_priorities:type_name -> android.providers.settings.SettingProto
	69,  // 188: android.providers.settings.GlobalSettingsProto.Bluetooth.a2dp_supports_optional_codecs:type_name -> android.providers.settings.SettingProto
	69,  // 189: android.providers.settings.GlobalSettingsProto.Bluetooth.a2dp_optional_codecs_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 190: android.providers.settings.GlobalSettingsProto.Bluetooth.input_device_priorities:type_name -> android.providers.settings.SettingProto
	69,  // 191: android.providers.settings.GlobalSettingsProto.Bluetooth.map_priorities:type_name -> android.providers.settings.SettingProto
	69,  // 192: android.providers.settings.GlobalSettingsProto.Bluetooth.map_client_priorities:type_name -> android.providers.settings.SettingProto
	69,  // 193: android.providers.settings.GlobalSettingsProto.Bluetooth.pbap_client_priorities:type_name -> android.providers.settings.SettingProto
	69,  // 194: android.providers.settings.GlobalSettingsProto.Bluetooth.sap_priorities:type_name -> android.providers.settings.SettingProto
	69,  // 195: android.providers.settings.GlobalSettingsProto.Bluetooth.pan_priorities:type_name -> android.providers.settings.SettingProto
	69,  // 196: android.providers.settings.GlobalSettingsProto.Bluetooth.hearing_aid_priorities:type_name -> android.providers.settings.SettingProto
	69,  // 197: android.providers.settings.GlobalSettingsProto.CaptivePortal.mode:type_name -> android.providers.settings.SettingProto
	69,  // 198: android.providers.settings.GlobalSettingsProto.CaptivePortal.detection_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 199: android.providers.settings.GlobalSettingsProto.CaptivePortal.server:type_name -> android.providers.settings.SettingProto
	69,  // 200: android.providers.settings.GlobalSettingsProto.CaptivePortal.https_url:type_name -> android.providers.settings.SettingProto
	69,  // 201: android.providers.settings.GlobalSettingsProto.CaptivePortal.http_url:type_name -> android.providers.settings.SettingProto
	69,  // 202: android.providers.settings.GlobalSettingsProto.CaptivePortal.fallback_url:type_name -> android.providers.settings.SettingProto
	69,  // 203: android.providers.settings.GlobalSettingsProto.CaptivePortal.other_fallback_urls:type_name -> android.providers.settings.SettingProto
	69,  // 204: android.providers.settings.GlobalSettingsProto.CaptivePortal.use_https:type_name -> android.providers.settings.SettingProto
	69,  // 205: android.providers.settings.GlobalSettingsProto.CaptivePortal.user_agent:type_name -> android.providers.settings.SettingProto
	69,  // 206: android.providers.settings.GlobalSettingsProto.Carrier.app_whitelist:type_name -> android.providers.settings.SettingProto
	69,  // 207: android.providers.settings.GlobalSettingsProto.Carrier.app_names:type_name -> android.providers.settings.SettingProto
	69,  // 208: android.providers.settings.GlobalSettingsProto.Carrier.install_carrier_app_notification_persistent:type_name -> android.providers.settings.SettingProto
	69,  // 209: android.providers.settings.GlobalSettingsProto.Carrier.install_carrier_app_notification_sleep_millis:type_name -> android.providers.settings.SettingProto
	69,  // 210: android.providers.settings.GlobalSettingsProto.Cdma.cell_broadcast_sms:type_name -> android.providers.settings.SettingProto
	69,  // 211: android.providers.settings.GlobalSettingsProto.Cdma.roaming_mode:type_name -> android.providers.settings.SettingProto
	69,  // 212: android.providers.settings.GlobalSettingsProto.Cdma.subscription_mode:type_name -> android.providers.settings.SettingProto
	69,  // 213: android.providers.settings.GlobalSettingsProto.CertPin.update_content_url:type_name -> android.providers.settings.SettingProto
	69,  // 214: android.providers.settings.GlobalSettingsProto.CertPin.update_metadata_url:type_name -> android.providers.settings.SettingProto
	69,  // 215: android.providers.settings.GlobalSettingsProto.Connectivity.metrics_buffer_size:type_name -> android.providers.settings.SettingProto
	69,  // 216: android.providers.settings.GlobalSettingsProto.Connectivity.change_delay:type_name -> android.providers.settings.SettingProto
	69,  // 217: android.providers.settings.GlobalSettingsProto.Connectivity.sampling_interval_in_seconds:type_name -> android.providers.settings.SettingProto
	69,  // 218: android.providers.settings.GlobalSettingsProto.Data.activity_timeout_mobile:type_name -> android.providers.settings.SettingProto
	69,  // 219: android.providers.settings.GlobalSettingsProto.Data.activity_timeout_wifi:type_name -> android.providers.settings.SettingProto
	69,  // 220: android.providers.settings.GlobalSettingsProto.Data.roaming:type_name -> android.providers.settings.SettingProto
	69,  // 221: android.providers.settings.GlobalSettingsProto.Data.stall_alarm_non_aggressive_delay_in_ms:type_name -> android.providers.settings.SettingProto
	69,  // 222: android.providers.settings.GlobalSettingsProto.Data.stall_alarm_aggressive_delay_in_ms:type_name -> android.providers.settings.SettingProto
	69,  // 223: android.providers.settings.GlobalSettingsProto.Database.downgrade_reason:type_name -> android.providers.settings.SettingProto
	69,  // 224: android.providers.settings.GlobalSettingsProto.Database.creation_buildid:type_name -> android.providers.settings.SettingProto
	69,  // 225: android.providers.settings.GlobalSettingsProto.DateTime.auto_time:type_name -> android.providers.settings.SettingProto
	69,  // 226: android.providers.settings.GlobalSettingsProto.DateTime.auto_time_zone:type_name -> android.providers.settings.SettingProto
	69,  // 227: android.providers.settings.GlobalSettingsProto.Debug.app:type_name -> android.providers.settings.SettingProto
	69,  // 228: android.providers.settings.GlobalSettingsProto.Debug.view_attributes:type_name -> android.providers.settings.SettingProto
	69,  // 229: android.providers.settings.GlobalSettingsProto.Debug.view_attributes_application_package:type_name -> android.providers.settings.SettingProto
	69,  // 230: android.providers.settings.GlobalSettingsProto.Default.install_location:type_name -> android.providers.settings.SettingProto
	69,  // 231: android.providers.settings.GlobalSettingsProto.Default.dns_server:type_name -> android.providers.settings.SettingProto
	69,  // 232: android.providers.settings.GlobalSettingsProto.Development.settings_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 233: android.providers.settings.GlobalSettingsProto.Development.force_resizable_activities:type_name -> android.providers.settings.SettingProto
	69,  // 234: android.providers.settings.GlobalSettingsProto.Development.enable_freeform_windows_support:type_name -> android.providers.settings.SettingProto
	69,  // 235: android.providers.settings.GlobalSettingsProto.Development.force_rtl:type_name -> android.providers.settings.SettingProto
	69,  // 236: android.providers.settings.GlobalSettingsProto.Development.emulate_display_cutout:type_name -> android.providers.settings.SettingProto
	69,  // 237: android.providers.settings.GlobalSettingsProto.Development.force_desktop_mode_on_external_displays:type_name -> android.providers.settings.SettingProto
	69,  // 238: android.providers.settings.GlobalSettingsProto.Development.enable_sizecompat_freeform:type_name -> android.providers.settings.SettingProto
	69,  // 239: android.providers.settings.GlobalSettingsProto.Development.enable_non_resizable_multi_window:type_name -> android.providers.settings.SettingProto
	69,  // 240: android.providers.settings.GlobalSettingsProto.Development.disable_window_blurs:type_name -> android.providers.settings.SettingProto
	69,  // 241: android.providers.settings.GlobalSettingsProto.Device.name:type_name -> android.providers.settings.SettingProto
	69,  // 242: android.providers.settings.GlobalSettingsProto.Device.provisioned:type_name -> android.providers.settings.SettingProto
	69,  // 243: android.providers.settings.GlobalSettingsProto.Device.provisioning_mobile_data_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 244: android.providers.settings.GlobalSettingsProto.Device.policy_constants:type_name -> android.providers.settings.SettingProto
	69,  // 245: android.providers.settings.GlobalSettingsProto.Device.demo_mode:type_name -> android.providers.settings.SettingProto
	69,  // 246: android.providers.settings.GlobalSettingsProto.Display.size_forced:type_name -> android.providers.settings.SettingProto
	69,  // 247: android.providers.settings.GlobalSettingsProto.Display.scaling_force:type_name -> android.providers.settings.SettingProto
	69,  // 248: android.providers.settings.GlobalSettingsProto.Display.panel_lpm:type_name -> android.providers.settings.SettingProto
	69,  // 249: android.providers.settings.GlobalSettingsProto.DnsResolver.sample_validity_seconds:type_name -> android.providers.settings.SettingProto
	69,  // 250: android.providers.settings.GlobalSettingsProto.DnsResolver.success_threshold_percent:type_name -> android.providers.settings.SettingProto
	69,  // 251: android.providers.settings.GlobalSettingsProto.DnsResolver.min_samples:type_name -> android.providers.settings.SettingProto
	69,  // 252: android.providers.settings.GlobalSettingsProto.DnsResolver.max_samples:type_name -> android.providers.settings.SettingProto
	69,  // 253: android.providers.settings.GlobalSettingsProto.Download.max_bytes_over_mobile:type_name -> android.providers.settings.SettingProto
	69,  // 254: android.providers.settings.GlobalSettingsProto.Download.recommended_max_bytes_over_mobile:type_name -> android.providers.settings.SettingProto
	69,  // 255: android.providers.settings.GlobalSettingsProto.Dropbox.age_seconds:type_name -> android.providers.settings.SettingProto
	69,  // 256: android.providers.settings.GlobalSettingsProto.Dropbox.max_files:type_name -> android.providers.settings.SettingProto
	69,  // 257: android.providers.settings.GlobalSettingsProto.Dropbox.quota_kb:type_name -> android.providers.settings.SettingProto
	69,  // 258: android.providers.settings.GlobalSettingsProto.Dropbox.quota_percent:type_name -> android.providers.settings.SettingProto
	69,  // 259: android.providers.settings.GlobalSettingsProto.Dropbox.reserve_percent:type_name -> android.providers.settings.SettingProto
	69,  // 260: android.providers.settings.GlobalSettingsProto.Dropbox.settings:type_name -> android.providers.settings.SettingProto
	69,  // 261: android.providers.settings.GlobalSettingsProto.DynamicPowerSavings.disable_threshold:type_name -> android.providers.settings.SettingProto
	69,  // 262: android.providers.settings.GlobalSettingsProto.DynamicPowerSavings.enabled:type_name -> android.providers.settings.SettingProto
	69,  // 263: android.providers.settings.GlobalSettingsProto.Emergency.tone:type_name -> android.providers.settings.SettingProto
	69,  // 264: android.providers.settings.GlobalSettingsProto.Emergency.affordance_needed:type_name -> android.providers.settings.SettingProto
	69,  // 265: android.providers.settings.GlobalSettingsProto.Enable.accessibility_global_gesture_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 266: android.providers.settings.GlobalSettingsProto.Enable.gpu_debug_layers:type_name -> android.providers.settings.SettingProto
	69,  // 267: android.providers.settings.GlobalSettingsProto.Enable.ephemeral_feature:type_name -> android.providers.settings.SettingProto
	69,  // 268: android.providers.settings.GlobalSettingsProto.Enable.cellular_on_boot:type_name -> android.providers.settings.SettingProto
	69,  // 269: android.providers.settings.GlobalSettingsProto.Enable.diskstats_logging:type_name -> android.providers.settings.SettingProto
	69,  // 270: android.providers.settings.GlobalSettingsProto.Enable.cache_quota_calculation:type_name -> android.providers.settings.SettingProto
	69,  // 271: android.providers.settings.GlobalSettingsProto.Enable.deletion_helper_no_threshold_toggle:type_name -> android.providers.settings.SettingProto
	69,  // 272: android.providers.settings.GlobalSettingsProto.Enable.gnss_raw_meas_full_tracking:type_name -> android.providers.settings.SettingProto
	69,  // 273: android.providers.settings.GlobalSettingsProto.Euicc.provisioned:type_name -> android.providers.settings.SettingProto
	69,  // 274: android.providers.settings.GlobalSettingsProto.Euicc.factory_reset_timeout_millis:type_name -> android.providers.settings.SettingProto
	69,  // 275: android.providers.settings.GlobalSettingsProto.GlobalHttpProxy.host:type_name -> android.providers.settings.SettingProto
	69,  // 276: android.providers.settings.GlobalSettingsProto.GlobalHttpProxy.port:type_name -> android.providers.settings.SettingProto
	69,  // 277: android.providers.settings.GlobalSettingsProto.GlobalHttpProxy.exclusion_list:type_name -> android.providers.settings.SettingProto
	69,  // 278: android.providers.settings.GlobalSettingsProto.GlobalHttpProxy.pac:type_name -> android.providers.settings.SettingProto
	69,  // 279: android.providers.settings.GlobalSettingsProto.GlobalHttpProxy.setting_ui_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 280: android.providers.settings.GlobalSettingsProto.Gpu.debug_app:type_name -> android.providers.settings.SettingProto
	69,  // 281: android.providers.settings.GlobalSettingsProto.Gpu.debug_layers:type_name -> android.providers.settings.SettingProto
	69,  // 282: android.providers.settings.GlobalSettingsProto.Gpu.angle_gl_driver_all_angle:type_name -> android.providers.settings.SettingProto
	69,  // 283: android.providers.settings.GlobalSettingsProto.Gpu.angle_gl_driver_selection_pkgs:type_name -> android.providers.settings.SettingProto
	69,  // 284: android.providers.settings.GlobalSettingsProto.Gpu.angle_gl_driver_selection_values:type_name -> android.providers.settings.SettingProto
	69,  // 285: android.providers.settings.GlobalSettingsProto.Gpu.debug_layer_app:type_name -> android.providers.settings.SettingProto
	69,  // 286: android.providers.settings.GlobalSettingsProto.Gpu.debug_layers_gles:type_name -> android.providers.settings.SettingProto
	69,  // 287: android.providers.settings.GlobalSettingsProto.Gpu.updatable_driver_all_apps:type_name -> android.providers.settings.SettingProto
	69,  // 288: android.providers.settings.GlobalSettingsProto.Gpu.updatable_driver_production_opt_in_apps:type_name -> android.providers.settings.SettingProto
	69,  // 289: android.providers.settings.GlobalSettingsProto.Gpu.updatable_driver_production_opt_out_apps:type_name -> android.providers.settings.SettingProto
	69,  // 290: android.providers.settings.GlobalSettingsProto.Gpu.updatable_driver_production_denylist:type_name -> android.providers.settings.SettingProto
	69,  // 291: android.providers.settings.GlobalSettingsProto.Gpu.updatable_driver_production_allowlist:type_name -> android.providers.settings.SettingProto
	69,  // 292: android.providers.settings.GlobalSettingsProto.Gpu.angle_allowlist:type_name -> android.providers.settings.SettingProto
	69,  // 293: android.providers.settings.GlobalSettingsProto.Gpu.updatable_driver_production_denylists:type_name -> android.providers.settings.SettingProto
	69,  // 294: android.providers.settings.GlobalSettingsProto.Gpu.show_angle_in_use_dialog:type_name -> android.providers.settings.SettingProto
	69,  // 295: android.providers.settings.GlobalSettingsProto.Gpu.updatable_driver_sphal_libraries:type_name -> android.providers.settings.SettingProto
	69,  // 296: android.providers.settings.GlobalSettingsProto.Gpu.angle_debug_package:type_name -> android.providers.settings.SettingProto
	69,  // 297: android.providers.settings.GlobalSettingsProto.Gpu.updatable_driver_prerelease_opt_in_apps:type_name -> android.providers.settings.SettingProto
	69,  // 298: android.providers.settings.GlobalSettingsProto.Gpu.angle_egl_features:type_name -> android.providers.settings.SettingProto
	69,  // 299: android.providers.settings.GlobalSettingsProto.Hdmi.control_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 300: android.providers.settings.GlobalSettingsProto.Hdmi.system_audio_control_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 301: android.providers.settings.GlobalSettingsProto.Hdmi.control_auto_wakeup_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 302: android.providers.settings.GlobalSettingsProto.Hdmi.control_auto_device_off_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 303: android.providers.settings.GlobalSettingsProto.InetCondition.debounce_up_delay:type_name -> android.providers.settings.SettingProto
	69,  // 304: android.providers.settings.GlobalSettingsProto.InetCondition.debounce_down_delay:type_name -> android.providers.settings.SettingProto
	69,  // 305: android.providers.settings.GlobalSettingsProto.InstantApp.dexopt_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 306: android.providers.settings.GlobalSettingsProto.InstantApp.ephemeral_cookie_max_size_bytes:type_name -> android.providers.settings.SettingProto
	69,  // 307: android.providers.settings.GlobalSettingsProto.InstantApp.installed_min_cache_period:type_name -> android.providers.settings.SettingProto
	69,  // 308: android.providers.settings.GlobalSettingsProto.InstantApp.installed_max_cache_period:type_name -> android.providers.settings.SettingProto
	69,  // 309: android.providers.settings.GlobalSettingsProto.InstantApp.uninstalled_min_cache_period:type_name -> android.providers.settings.SettingProto
	69,  // 310: android.providers.settings.GlobalSettingsProto.InstantApp.uninstalled_max_cache_period:type_name -> android.providers.settings.SettingProto
	69,  // 311: android.providers.settings.GlobalSettingsProto.IntentFirewall.update_content_url:type_name -> android.providers.settings.SettingProto
	69,  // 312: android.providers.settings.GlobalSettingsProto.IntentFirewall.update_metadata_url:type_name -> android.providers.settings.SettingProto
	69,  // 313: android.providers.settings.GlobalSettingsProto.LangId.update_content_url:type_name -> android.providers.settings.SettingProto
	69,  // 314: android.providers.settings.GlobalSettingsProto.LangId.update_metadata_url:type_name -> android.providers.settings.SettingProto
	69,  // 315: android.providers.settings.GlobalSettingsProto.Location.background_throttle_interval_ms:type_name -> android.providers.settings.SettingProto
	69,  // 316: android.providers.settings.GlobalSettingsProto.Location.background_throttle_proximity_alert_interval_ms:type_name -> android.providers.settings.SettingProto
	69,  // 317: android.providers.settings.GlobalSettingsProto.Location.background_throttle_package_whitelist:type_name -> android.providers.settings.SettingProto
	69,  // 318: android.providers.settings.GlobalSettingsProto.Location.settings_link_to_permissions_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 319: android.providers.settings.GlobalSettingsProto.Location.global_kill_switch:type_name -> android.providers.settings.SettingProto
	69,  // 320: android.providers.settings.GlobalSettingsProto.Location.gnss_satellite_blocklist:type_name -> android.providers.settings.SettingProto
	69,  // 321: android.providers.settings.GlobalSettingsProto.Location.gnss_hal_location_request_duration_millis:type_name -> android.providers.settings.SettingProto
	69,  // 322: android.providers.settings.GlobalSettingsProto.Location.ignore_settings_package_whitelist:type_name -> android.providers.settings.SettingProto
	69,  // 323: android.providers.settings.GlobalSettingsProto.LowPowerMode.enabled:type_name -> android.providers.settings.SettingProto
	69,  // 324: android.providers.settings.GlobalSettingsProto.LowPowerMode.trigger_level:type_name -> android.providers.settings.SettingProto
	69,  // 325: android.providers.settings.GlobalSettingsProto.LowPowerMode.trigger_level_max:type_name -> android.providers.settings.SettingProto
	69,  // 326: android.providers.settings.GlobalSettingsProto.LowPowerMode.automatic_power_saver_mode:type_name -> android.providers.settings.SettingProto
	69,  // 327: android.providers.settings.GlobalSettingsProto.LowPowerMode.sticky_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 328: android.providers.settings.GlobalSettingsProto.LowPowerMode.sticky_auto_disable_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 329: android.providers.settings.GlobalSettingsProto.LowPowerMode.sticky_auto_disable_level:type_name -> android.providers.settings.SettingProto
	69,  // 330: android.providers.settings.GlobalSettingsProto.ManagedDeviceProvisioning.managed_provisioning_defer_provisioning_to_role_holder:type_name -> android.providers.settings.SettingProto
	69,  // 331: android.providers.settings.GlobalSettingsProto.Mhl.input_switching_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 332: android.providers.settings.GlobalSettingsProto.Mhl.power_charge_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 333: android.providers.settings.GlobalSettingsProto.MobileData.allowed:type_name -> android.providers.settings.SettingProto
	69,  // 334: android.providers.settings.GlobalSettingsProto.MobileData.always_on:type_name -> android.providers.settings.SettingProto
	69,  // 335: android.providers.settings.GlobalSettingsProto.MultiSim.voice_call_subscription:type_name -> android.providers.settings.SettingProto
	69,  // 336: android.providers.settings.GlobalSettingsProto.MultiSim.voice_prompt:type_name -> android.providers.settings.SettingProto
	69,  // 337: android.providers.settings.GlobalSettingsProto.MultiSim.data_call_subscription:type_name -> android.providers.settings.SettingProto
	69,  // 338: android.providers.settings.GlobalSettingsProto.MultiSim.sms_subscription:type_name -> android.providers.settings.SettingProto
	69,  // 339: android.providers.settings.GlobalSettingsProto.MultiSim.sms_prompt:type_name -> android.providers.settings.SettingProto
	69,  // 340: android.providers.settings.GlobalSettingsProto.Netstats.enabled:type_name -> android.providers.settings.SettingProto
	69,  // 341: android.providers.settings.GlobalSettingsProto.Netstats.poll_interval:type_name -> android.providers.settings.SettingProto
	69,  // 342: android.providers.settings.GlobalSettingsProto.Netstats.time_cache_max_age:type_name -> android.providers.settings.SettingProto
	69,  // 343: android.providers.settings.GlobalSettingsProto.Netstats.global_alert_bytes:type_name -> android.providers.settings.SettingProto
	69,  // 344: android.providers.settings.GlobalSettingsProto.Netstats.sample_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 345: android.providers.settings.GlobalSettingsProto.Netstats.augment_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 346: android.providers.settings.GlobalSettingsProto.Netstats.dev_bucket_duration:type_name -> android.providers.settings.SettingProto
	69,  // 347: android.providers.settings.GlobalSettingsProto.Netstats.dev_persist_bytes:type_name -> android.providers.settings.SettingProto
	69,  // 348: android.providers.settings.GlobalSettingsProto.Netstats.dev_rotate_age:type_name -> android.providers.settings.SettingProto
	69,  // 349: android.providers.settings.GlobalSettingsProto.Netstats.dev_delete_age:type_name -> android.providers.settings.SettingProto
	69,  // 350: android.providers.settings.GlobalSettingsProto.Netstats.uid_bucket_duration:type_name -> android.providers.settings.SettingProto
	69,  // 351: android.providers.settings.GlobalSettingsProto.Netstats.uid_persist_bytes:type_name -> android.providers.settings.SettingProto
	69,  // 352: android.providers.settings.GlobalSettingsProto.Netstats.uid_rotate_age:type_name -> android.providers.settings.SettingProto
	69,  // 353: android.providers.settings.GlobalSettingsProto.Netstats.uid_delete_age:type_name -> android.providers.settings.SettingProto
	69,  // 354: android.providers.settings.GlobalSettingsProto.Netstats.uid_tag_bucket_duration:type_name -> android.providers.settings.SettingProto
	69,  // 355: android.providers.settings.GlobalSettingsProto.Netstats.uid_tag_persist_bytes:type_name -> android.providers.settings.SettingProto
	69,  // 356: android.providers.settings.GlobalSettingsProto.Netstats.uid_tag_rotate_age:type_name -> android.providers.settings.SettingProto
	69,  // 357: android.providers.settings.GlobalSettingsProto.Netstats.uid_tag_delete_age:type_name -> android.providers.settings.SettingProto
	69,  // 358: android.providers.settings.GlobalSettingsProto.Network.preference:type_name -> android.providers.settings.SettingProto
	69,  // 359: android.providers.settings.GlobalSettingsProto.Network.preferred_network_mode:type_name -> android.providers.settings.SettingProto
	69,  // 360: android.providers.settings.GlobalSettingsProto.Network.scorer_app:type_name -> android.providers.settings.SettingProto
	69,  // 361: android.providers.settings.GlobalSettingsProto.Network.switch_notification_daily_limit:type_name -> android.providers.settings.SettingProto
	69,  // 362: android.providers.settings.GlobalSettingsProto.Network.switch_notification_rate_limit_millis:type_name -> android.providers.settings.SettingProto
	69,  // 363: android.providers.settings.GlobalSettingsProto.Network.avoid_bad_wifi:type_name -> android.providers.settings.SettingProto
	69,  // 364: android.providers.settings.GlobalSettingsProto.Network.metered_multipath_preference:type_name -> android.providers.settings.SettingProto
	69,  // 365: android.providers.settings.GlobalSettingsProto.Network.watchlist_last_report_time:type_name -> android.providers.settings.SettingProto
	69,  // 366: android.providers.settings.GlobalSettingsProto.Network.scoring_ui_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 367: android.providers.settings.GlobalSettingsProto.Network.recommendations_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 368: android.providers.settings.GlobalSettingsProto.Network.recommendations_package:type_name -> android.providers.settings.SettingProto
	69,  // 369: android.providers.settings.GlobalSettingsProto.Network.recommendation_request_timeout_ms:type_name -> android.providers.settings.SettingProto
	69,  // 370: android.providers.settings.GlobalSettingsProto.Network.watchlist_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 371: android.providers.settings.GlobalSettingsProto.Network.scoring_provisioned:type_name -> android.providers.settings.SettingProto
	69,  // 372: android.providers.settings.GlobalSettingsProto.Network.access_timeout_ms:type_name -> android.providers.settings.SettingProto
	69,  // 373: android.providers.settings.GlobalSettingsProto.Network.recommended_network_evaluator_cache_expiry_ms:type_name -> android.providers.settings.SettingProto
	69,  // 374: android.providers.settings.GlobalSettingsProto.Nitz.update_diff:type_name -> android.providers.settings.SettingProto
	69,  // 375: android.providers.settings.GlobalSettingsProto.Nitz.update_spacing:type_name -> android.providers.settings.SettingProto
	69,  // 376: android.providers.settings.GlobalSettingsProto.Nitz.network_disconnect_retention:type_name -> android.providers.settings.SettingProto
	69,  // 377: android.providers.settings.GlobalSettingsProto.Notification.max_notification_enqueue_rate:type_name -> android.providers.settings.SettingProto
	69,  // 378: android.providers.settings.GlobalSettingsProto.Notification.show_notification_channel_warnings:type_name -> android.providers.settings.SettingProto
	69,  // 379: android.providers.settings.GlobalSettingsProto.Notification.snooze_options:type_name -> android.providers.settings.SettingProto
	69,  // 380: android.providers.settings.GlobalSettingsProto.Notification.smart_replies_in_notifications_flags:type_name -> android.providers.settings.SettingProto
	69,  // 381: android.providers.settings.GlobalSettingsProto.Notification.smart_suggestions_in_notifications_flags:type_name -> android.providers.settings.SettingProto
	69,  // 382: android.providers.settings.GlobalSettingsProto.Notification.bubbles:type_name -> android.providers.settings.SettingProto
	69,  // 383: android.providers.settings.GlobalSettingsProto.Notification.disable_screen_share_protections_for_apps_and_notifications:type_name -> android.providers.settings.SettingProto
	69,  // 384: android.providers.settings.GlobalSettingsProto.Ntp.server:type_name -> android.providers.settings.SettingProto
	69,  // 385: android.providers.settings.GlobalSettingsProto.Ntp.timeout_ms:type_name -> android.providers.settings.SettingProto
	69,  // 386: android.providers.settings.GlobalSettingsProto.UserAbsentSmallBattery.radios_off_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 387: android.providers.settings.GlobalSettingsProto.UserAbsentSmallBattery.touch_off_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 388: android.providers.settings.GlobalSettingsProto.PackageVerifier.enabled:type_name -> android.providers.settings.SettingProto
	69,  // 389: android.providers.settings.GlobalSettingsProto.PackageVerifier.timeout:type_name -> android.providers.settings.SettingProto
	69,  // 390: android.providers.settings.GlobalSettingsProto.PackageVerifier.default_response:type_name -> android.providers.settings.SettingProto
	69,  // 391: android.providers.settings.GlobalSettingsProto.PackageVerifier.setting_visible:type_name -> android.providers.settings.SettingProto
	69,  // 392: android.providers.settings.GlobalSettingsProto.PackageVerifier.include_adb:type_name -> android.providers.settings.SettingProto
	69,  // 393: android.providers.settings.GlobalSettingsProto.PdpWatchdog.poll_interval_ms:type_name -> android.providers.settings.SettingProto
	69,  // 394: android.providers.settings.GlobalSettingsProto.PdpWatchdog.long_poll_interval_ms:type_name -> android.providers.settings.SettingProto
	69,  // 395: android.providers.settings.GlobalSettingsProto.PdpWatchdog.error_poll_interval_ms:type_name -> android.providers.settings.SettingProto
	69,  // 396: android.providers.settings.GlobalSettingsProto.PdpWatchdog.trigger_packet_count:type_name -> android.providers.settings.SettingProto
	69,  // 397: android.providers.settings.GlobalSettingsProto.PdpWatchdog.error_poll_count:type_name -> android.providers.settings.SettingProto
	69,  // 398: android.providers.settings.GlobalSettingsProto.PdpWatchdog.max_pdp_reset_fail_count:type_name -> android.providers.settings.SettingProto
	69,  // 399: android.providers.settings.GlobalSettingsProto.PrepaidSetup.data_service_url:type_name -> android.providers.settings.SettingProto
	69,  // 400: android.providers.settings.GlobalSettingsProto.PrepaidSetup.detection_target_url:type_name -> android.providers.settings.SettingProto
	69,  // 401: android.providers.settings.GlobalSettingsProto.PrepaidSetup.detection_redir_host:type_name -> android.providers.settings.SettingProto
	69,  // 402: android.providers.settings.GlobalSettingsProto.Private.dns_mode:type_name -> android.providers.settings.SettingProto
	69,  // 403: android.providers.settings.GlobalSettingsProto.Private.dns_specifier:type_name -> android.providers.settings.SettingProto
	69,  // 404: android.providers.settings.GlobalSettingsProto.Selinux.update_content_url:type_name -> android.providers.settings.SettingProto
	69,  // 405: android.providers.settings.GlobalSettingsProto.Selinux.update_metadata_url:type_name -> android.providers.settings.SettingProto
	69,  // 406: android.providers.settings.GlobalSettingsProto.Selinux.status:type_name -> android.providers.settings.SettingProto
	69,  // 407: android.providers.settings.GlobalSettingsProto.SmartSelection.update_content_url:type_name -> android.providers.settings.SettingProto
	69,  // 408: android.providers.settings.GlobalSettingsProto.SmartSelection.update_metadata_url:type_name -> android.providers.settings.SettingProto
	69,  // 409: android.providers.settings.GlobalSettingsProto.Sms.outgoing_check_interval_ms:type_name -> android.providers.settings.SettingProto
	69,  // 410: android.providers.settings.GlobalSettingsProto.Sms.outgoing_check_max_count:type_name -> android.providers.settings.SettingProto
	69,  // 411: android.providers.settings.GlobalSettingsProto.Sms.short_code_confirmation:type_name -> android.providers.settings.SettingProto
	69,  // 412: android.providers.settings.GlobalSettingsProto.Sms.short_code_rule:type_name -> android.providers.settings.SettingProto
	69,  // 413: android.providers.settings.GlobalSettingsProto.Sms.short_codes_update_content_url:type_name -> android.providers.settings.SettingProto
	69,  // 414: android.providers.settings.GlobalSettingsProto.Sms.short_codes_update_metadata_url:type_name -> android.providers.settings.SettingProto
	69,  // 415: android.providers.settings.GlobalSettingsProto.Sms.access_restriction_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 416: android.providers.settings.GlobalSettingsProto.Sounds.car_dock:type_name -> android.providers.settings.SettingProto
	69,  // 417: android.providers.settings.GlobalSettingsProto.Sounds.car_undock:type_name -> android.providers.settings.SettingProto
	69,  // 418: android.providers.settings.GlobalSettingsProto.Sounds.charging_started:type_name -> android.providers.settings.SettingProto
	69,  // 419: android.providers.settings.GlobalSettingsProto.Sounds.desk_dock:type_name -> android.providers.settings.SettingProto
	69,  // 420: android.providers.settings.GlobalSettingsProto.Sounds.desk_undock:type_name -> android.providers.settings.SettingProto
	69,  // 421: android.providers.settings.GlobalSettingsProto.Sounds.dock_sounds_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 422: android.providers.settings.GlobalSettingsProto.Sounds.dock_sounds_enabled_when_accessibility:type_name -> android.providers.settings.SettingProto
	69,  // 423: android.providers.settings.GlobalSettingsProto.Sounds.lock:type_name -> android.providers.settings.SettingProto
	69,  // 424: android.providers.settings.GlobalSettingsProto.Sounds.low_battery:type_name -> android.providers.settings.SettingProto
	69,  // 425: android.providers.settings.GlobalSettingsProto.Sounds.low_battery_sound_timeout:type_name -> android.providers.settings.SettingProto
	69,  // 426: android.providers.settings.GlobalSettingsProto.Sounds.low_battery_sounds_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 427: android.providers.settings.GlobalSettingsProto.Sounds.trusted:type_name -> android.providers.settings.SettingProto
	69,  // 428: android.providers.settings.GlobalSettingsProto.Sounds.unlock:type_name -> android.providers.settings.SettingProto
	69,  // 429: android.providers.settings.GlobalSettingsProto.Sounds.wireless_charging_started:type_name -> android.providers.settings.SettingProto
	69,  // 430: android.providers.settings.GlobalSettingsProto.SoundTrigger.max_sound_trigger_detection_service_ops_per_day:type_name -> android.providers.settings.SettingProto
	69,  // 431: android.providers.settings.GlobalSettingsProto.SoundTrigger.detection_service_op_timeout_ms:type_name -> android.providers.settings.SettingProto
	69,  // 432: android.providers.settings.GlobalSettingsProto.Storage.benchmark_interval:type_name -> android.providers.settings.SettingProto
	69,  // 433: android.providers.settings.GlobalSettingsProto.Storage.settings_clobber_threshold:type_name -> android.providers.settings.SettingProto
	69,  // 434: android.providers.settings.GlobalSettingsProto.Sync.max_retry_delay_in_seconds:type_name -> android.providers.settings.SettingProto
	69,  // 435: android.providers.settings.GlobalSettingsProto.Sync.manager_constants:type_name -> android.providers.settings.SettingProto
	69,  // 436: android.providers.settings.GlobalSettingsProto.Sys.free_storage_log_interval_mins:type_name -> android.providers.settings.SettingProto
	69,  // 437: android.providers.settings.GlobalSettingsProto.Sys.storage_threshold_percentage:type_name -> android.providers.settings.SettingProto
	69,  // 438: android.providers.settings.GlobalSettingsProto.Sys.storage_threshold_max_bytes:type_name -> android.providers.settings.SettingProto
	69,  // 439: android.providers.settings.GlobalSettingsProto.Sys.storage_full_threshold_bytes:type_name -> android.providers.settings.SettingProto
	69,  // 440: android.providers.settings.GlobalSettingsProto.Sys.storage_cache_percentage:type_name -> android.providers.settings.SettingProto
	69,  // 441: android.providers.settings.GlobalSettingsProto.Sys.storage_cache_max_bytes:type_name -> android.providers.settings.SettingProto
	69,  // 442: android.providers.settings.GlobalSettingsProto.Sys.uidcpupower:type_name -> android.providers.settings.SettingProto
	69,  // 443: android.providers.settings.GlobalSettingsProto.TemperatureWarning.show_temperature_warning:type_name -> android.providers.settings.SettingProto
	69,  // 444: android.providers.settings.GlobalSettingsProto.TemperatureWarning.warning_temperature_level:type_name -> android.providers.settings.SettingProto
	69,  // 445: android.providers.settings.GlobalSettingsProto.TemperatureWarning.show_usb_temperature_alarm:type_name -> android.providers.settings.SettingProto
	69,  // 446: android.providers.settings.GlobalSettingsProto.Tether.supported:type_name -> android.providers.settings.SettingProto
	69,  // 447: android.providers.settings.GlobalSettingsProto.Tether.dun_required:type_name -> android.providers.settings.SettingProto
	69,  // 448: android.providers.settings.GlobalSettingsProto.Tether.dun_apn:type_name -> android.providers.settings.SettingProto
	69,  // 449: android.providers.settings.GlobalSettingsProto.Tether.offload_disabled:type_name -> android.providers.settings.SettingProto
	69,  // 450: android.providers.settings.GlobalSettingsProto.Tether.timeout_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 451: android.providers.settings.GlobalSettingsProto.Tzinfo.update_content_url:type_name -> android.providers.settings.SettingProto
	69,  // 452: android.providers.settings.GlobalSettingsProto.Tzinfo.update_metadata_url:type_name -> android.providers.settings.SettingProto
	69,  // 453: android.providers.settings.GlobalSettingsProto.Webview.data_reduction_proxy_key:type_name -> android.providers.settings.SettingProto
	69,  // 454: android.providers.settings.GlobalSettingsProto.Webview.fallback_logic_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 455: android.providers.settings.GlobalSettingsProto.Webview.provider:type_name -> android.providers.settings.SettingProto
	69,  // 456: android.providers.settings.GlobalSettingsProto.Webview.multiprocess:type_name -> android.providers.settings.SettingProto
	69,  // 457: android.providers.settings.GlobalSettingsProto.Wfc.ims_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 458: android.providers.settings.GlobalSettingsProto.Wfc.ims_mode:type_name -> android.providers.settings.SettingProto
	69,  // 459: android.providers.settings.GlobalSettingsProto.Wfc.ims_roaming_mode:type_name -> android.providers.settings.SettingProto
	69,  // 460: android.providers.settings.GlobalSettingsProto.Wfc.ims_roaming_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 461: android.providers.settings.GlobalSettingsProto.Wifi.sleep_policy:type_name -> android.providers.settings.SettingProto
	69,  // 462: android.providers.settings.GlobalSettingsProto.Wifi.badging_thresholds:type_name -> android.providers.settings.SettingProto
	69,  // 463: android.providers.settings.GlobalSettingsProto.Wifi.display_on:type_name -> android.providers.settings.SettingProto
	69,  // 464: android.providers.settings.GlobalSettingsProto.Wifi.display_certification_on:type_name -> android.providers.settings.SettingProto
	69,  // 465: android.providers.settings.GlobalSettingsProto.Wifi.display_wps_config:type_name -> android.providers.settings.SettingProto
	69,  // 466: android.providers.settings.GlobalSettingsProto.Wifi.networks_available_notification_on:type_name -> android.providers.settings.SettingProto
	69,  // 467: android.providers.settings.GlobalSettingsProto.Wifi.networks_available_repeat_delay:type_name -> android.providers.settings.SettingProto
	69,  // 468: android.providers.settings.GlobalSettingsProto.Wifi.country_code:type_name -> android.providers.settings.SettingProto
	69,  // 469: android.providers.settings.GlobalSettingsProto.Wifi.framework_scan_interval_ms:type_name -> android.providers.settings.SettingProto
	69,  // 470: android.providers.settings.GlobalSettingsProto.Wifi.idle_ms:type_name -> android.providers.settings.SettingProto
	69,  // 471: android.providers.settings.GlobalSettingsProto.Wifi.num_open_networks_kept:type_name -> android.providers.settings.SettingProto
	69,  // 472: android.providers.settings.GlobalSettingsProto.Wifi.on:type_name -> android.providers.settings.SettingProto
	69,  // 473: android.providers.settings.GlobalSettingsProto.Wifi.scan_always_available:type_name -> android.providers.settings.SettingProto
	69,  // 474: android.providers.settings.GlobalSettingsProto.Wifi.wakeup_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 475: android.providers.settings.GlobalSettingsProto.Wifi.saved_state:type_name -> android.providers.settings.SettingProto
	69,  // 476: android.providers.settings.GlobalSettingsProto.Wifi.supplicant_scan_interval_ms:type_name -> android.providers.settings.SettingProto
	69,  // 477: android.providers.settings.GlobalSettingsProto.Wifi.enhanced_auto_join:type_name -> android.providers.settings.SettingProto
	69,  // 478: android.providers.settings.GlobalSettingsProto.Wifi.network_show_rssi:type_name -> android.providers.settings.SettingProto
	69,  // 479: android.providers.settings.GlobalSettingsProto.Wifi.scan_interval_when_p2p_connected_ms:type_name -> android.providers.settings.SettingProto
	69,  // 480: android.providers.settings.GlobalSettingsProto.Wifi.watchdog_on:type_name -> android.providers.settings.SettingProto
	69,  // 481: android.providers.settings.GlobalSettingsProto.Wifi.watchdog_poor_network_test_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 482: android.providers.settings.GlobalSettingsProto.Wifi.suspend_optimizations_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 483: android.providers.settings.GlobalSettingsProto.Wifi.verbose_logging_enabled:type_name -> android.providers.settings.SettingProto
	69,  // 484: android.providers.settings.GlobalSettingsProto.Wifi.max_dhcp_retry_count:type_name -> android.providers.settings.SettingProto
	69,  // 485: android.providers.settings.GlobalSettingsProto.Wifi.mobile_data_transition_wakelock_timeout_ms:type_name -> android.providers.settings.SettingProto
	69,  // 486: android.providers.settings.GlobalSettingsProto.Wifi.device_owner_configs_lockdown:type_name -> android.providers.settings.SettingProto
	69,  // 487: android.providers.settings.GlobalSettingsProto.Wifi.frequency_band:type_name -> android.providers.settings.SettingProto
	69,  // 488: android.providers.settings.GlobalSettingsProto.Wifi.p2p_device_name:type_name -> android.providers.settings.SettingProto
	69,  // 489: android.providers.settings.GlobalSettingsProto.Wifi.ephemeral_out_of_range_timeout_ms:type_name -> android.providers.settings.SettingProto
	69,  // 490: android.providers.settings.GlobalSettingsProto.Wifi.on_when_proxy_disconnected:type_name -> android.providers.settings.SettingProto
	69,  // 491: android.providers.settings.GlobalSettingsProto.Wifi.bounce_delay_override_ms:type_name -> android.providers.settings.SettingProto
	69,  // 492: android.providers.settings.GlobalSettingsProto.Zen.mode:type_name -> android.providers.settings.SettingProto
	69,  // 493: android.providers.settings.GlobalSettingsProto.Zen.mode_ringer_level:type_name -> android.providers.settings.SettingProto
	69,  // 494: android.providers.settings.GlobalSettingsProto.Zen.mode_config_etag:type_name -> android.providers.settings.SettingProto
	495, // [495:495] is the sub-list for method output_type
	495, // [495:495] is the sub-list for method input_type
	495, // [495:495] is the sub-list for extension type_name
	495, // [495:495] is the sub-list for extension extendee
	0,   // [0:495] is the sub-list for field type_name
}

func init() { file_frameworks_base_core_proto_android_providers_settings_global_proto_init() }
func file_frameworks_base_core_proto_android_providers_settings_global_proto_init() {
	if File_frameworks_base_core_proto_android_providers_settings_global_proto != nil {
		return
	}
	file_frameworks_base_core_proto_android_providers_settings_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_AirplaneMode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_Anomaly); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_ApnDb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_App); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_Autofill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_Backup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_Battery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_BleScan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_Bluetooth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_CaptivePortal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_Carrier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_Cdma); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_CertPin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_Connectivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_Database); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_DateTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_Debug); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_Default); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_Development); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_Display); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_DnsResolver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_Download); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_Dropbox); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_DynamicPowerSavings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_Emergency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_Enable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_Euicc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_GlobalHttpProxy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_Gpu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_Hdmi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_InetCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_InstantApp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_IntentFirewall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_LangId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_LowPowerMode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_ManagedDeviceProvisioning); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_Mhl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_MobileData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_MultiSim); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_Netstats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_Network); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_Nitz); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_Notification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_Ntp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[48].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_UserAbsentSmallBattery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[49].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_PackageVerifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[50].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_PdpWatchdog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[51].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_PrepaidSetup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[52].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_Private); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[53].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_Selinux); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[54].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_SmartSelection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[55].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_Sms); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[56].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_Sounds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[57].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_SoundTrigger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[58].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_Storage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[59].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_Sync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[60].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_Sys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[61].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_TemperatureWarning); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[62].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_Tether); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[63].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_Tzinfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[64].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_Webview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[65].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_Wfc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[66].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_Wifi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes[67].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalSettingsProto_Zen); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   68,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_frameworks_base_core_proto_android_providers_settings_global_proto_goTypes,
		DependencyIndexes: file_frameworks_base_core_proto_android_providers_settings_global_proto_depIdxs,
		MessageInfos:      file_frameworks_base_core_proto_android_providers_settings_global_proto_msgTypes,
	}.Build()
	File_frameworks_base_core_proto_android_providers_settings_global_proto = out.File
	file_frameworks_base_core_proto_android_providers_settings_global_proto_rawDesc = nil
	file_frameworks_base_core_proto_android_providers_settings_global_proto_goTypes = nil
	file_frameworks_base_core_proto_android_providers_settings_global_proto_depIdxs = nil
}
