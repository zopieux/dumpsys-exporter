//
// Copyright (C) 2017 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.25.4
// source: frameworks/base/core/proto/android/os/powermanager.proto

package os

import (
	_ "github.com/zopieux/dumpsys-exporter/proto/android/frameworks/base/core/proto/android"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// User activity events in PowerManager.java.
type PowerManagerProto_UserActivityEvent int32

const (
	// Unspecified event type.
	PowerManagerProto_USER_ACTIVITY_EVENT_OTHER PowerManagerProto_UserActivityEvent = 0
	// Button or key pressed or released.
	PowerManagerProto_USER_ACTIVITY_EVENT_BUTTON PowerManagerProto_UserActivityEvent = 1
	// Touch down, move or up.
	PowerManagerProto_USER_ACTIVITY_EVENT_TOUCH PowerManagerProto_UserActivityEvent = 2
	// Accessibility taking action on behalf of user.
	PowerManagerProto_USER_ACTIVITY_EVENT_ACCESSIBILITY PowerManagerProto_UserActivityEvent = 3
)

// Enum value maps for PowerManagerProto_UserActivityEvent.
var (
	PowerManagerProto_UserActivityEvent_name = map[int32]string{
		0: "USER_ACTIVITY_EVENT_OTHER",
		1: "USER_ACTIVITY_EVENT_BUTTON",
		2: "USER_ACTIVITY_EVENT_TOUCH",
		3: "USER_ACTIVITY_EVENT_ACCESSIBILITY",
	}
	PowerManagerProto_UserActivityEvent_value = map[string]int32{
		"USER_ACTIVITY_EVENT_OTHER":         0,
		"USER_ACTIVITY_EVENT_BUTTON":        1,
		"USER_ACTIVITY_EVENT_TOUCH":         2,
		"USER_ACTIVITY_EVENT_ACCESSIBILITY": 3,
	}
)

func (x PowerManagerProto_UserActivityEvent) Enum() *PowerManagerProto_UserActivityEvent {
	p := new(PowerManagerProto_UserActivityEvent)
	*p = x
	return p
}

func (x PowerManagerProto_UserActivityEvent) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PowerManagerProto_UserActivityEvent) Descriptor() protoreflect.EnumDescriptor {
	return file_frameworks_base_core_proto_android_os_powermanager_proto_enumTypes[0].Descriptor()
}

func (PowerManagerProto_UserActivityEvent) Type() protoreflect.EnumType {
	return &file_frameworks_base_core_proto_android_os_powermanager_proto_enumTypes[0]
}

func (x PowerManagerProto_UserActivityEvent) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *PowerManagerProto_UserActivityEvent) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = PowerManagerProto_UserActivityEvent(num)
	return nil
}

// Deprecated: Use PowerManagerProto_UserActivityEvent.Descriptor instead.
func (PowerManagerProto_UserActivityEvent) EnumDescriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_os_powermanager_proto_rawDescGZIP(), []int{0, 0}
}

// Enum values gotten from PowerManagerInternal.java
type PowerManagerInternalProto_Wakefulness int32

const (
	// The device is asleep. It can only be awoken by a call to wakeUp().
	// The screen should be off or in the process of being turned off by the
	// display controller. The device typically passes through the dozing
	// state first.
	PowerManagerInternalProto_WAKEFULNESS_ASLEEP PowerManagerInternalProto_Wakefulness = 0
	// The device is fully awake. It can be put to sleep by a call to
	// goToSleep(). When the user activity timeout expires, the device may
	// start dreaming or go to sleep.
	PowerManagerInternalProto_WAKEFULNESS_AWAKE PowerManagerInternalProto_Wakefulness = 1
	// The device is dreaming. It can be awoken by a call to wakeUp(), which
	// ends the dream. The device goes to sleep when goToSleep() is called,
	// when the dream ends, or when unplugged. User activity may brighten
	// the screen but does not end the dream.
	PowerManagerInternalProto_WAKEFULNESS_DREAMING PowerManagerInternalProto_Wakefulness = 2
	// The device is dozing. It is almost asleep but is allowing a special
	// low-power "doze" dream to run which keeps the display on but lets the
	// application processor suspend. It can be awoken by a call to wakeUp()
	// which ends the dream. The device fully goes to sleep if the dream
	// cannot be started or ends on its own.
	PowerManagerInternalProto_WAKEFULNESS_DOZING PowerManagerInternalProto_Wakefulness = 3
)

// Enum value maps for PowerManagerInternalProto_Wakefulness.
var (
	PowerManagerInternalProto_Wakefulness_name = map[int32]string{
		0: "WAKEFULNESS_ASLEEP",
		1: "WAKEFULNESS_AWAKE",
		2: "WAKEFULNESS_DREAMING",
		3: "WAKEFULNESS_DOZING",
	}
	PowerManagerInternalProto_Wakefulness_value = map[string]int32{
		"WAKEFULNESS_ASLEEP":   0,
		"WAKEFULNESS_AWAKE":    1,
		"WAKEFULNESS_DREAMING": 2,
		"WAKEFULNESS_DOZING":   3,
	}
)

func (x PowerManagerInternalProto_Wakefulness) Enum() *PowerManagerInternalProto_Wakefulness {
	p := new(PowerManagerInternalProto_Wakefulness)
	*p = x
	return p
}

func (x PowerManagerInternalProto_Wakefulness) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PowerManagerInternalProto_Wakefulness) Descriptor() protoreflect.EnumDescriptor {
	return file_frameworks_base_core_proto_android_os_powermanager_proto_enumTypes[1].Descriptor()
}

func (PowerManagerInternalProto_Wakefulness) Type() protoreflect.EnumType {
	return &file_frameworks_base_core_proto_android_os_powermanager_proto_enumTypes[1]
}

func (x PowerManagerInternalProto_Wakefulness) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *PowerManagerInternalProto_Wakefulness) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = PowerManagerInternalProto_Wakefulness(num)
	return nil
}

// Deprecated: Use PowerManagerInternalProto_Wakefulness.Descriptor instead.
func (PowerManagerInternalProto_Wakefulness) EnumDescriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_os_powermanager_proto_rawDescGZIP(), []int{1, 0}
}

type PowerManagerProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PowerManagerProto) Reset() {
	*x = PowerManagerProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_os_powermanager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PowerManagerProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PowerManagerProto) ProtoMessage() {}

func (x *PowerManagerProto) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_os_powermanager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PowerManagerProto.ProtoReflect.Descriptor instead.
func (*PowerManagerProto) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_os_powermanager_proto_rawDescGZIP(), []int{0}
}

type PowerManagerInternalProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PowerManagerInternalProto) Reset() {
	*x = PowerManagerInternalProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_os_powermanager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PowerManagerInternalProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PowerManagerInternalProto) ProtoMessage() {}

func (x *PowerManagerInternalProto) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_os_powermanager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PowerManagerInternalProto.ProtoReflect.Descriptor instead.
func (*PowerManagerInternalProto) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_os_powermanager_proto_rawDescGZIP(), []int{1}
}

// WakeLock class in android.os.PowerManager, it is the one used by sdk
type PowerManagerProto_WakeLock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag           *string          `protobuf:"bytes,1,opt,name=tag" json:"tag,omitempty"`
	PackageName   *string          `protobuf:"bytes,2,opt,name=package_name,json=packageName" json:"package_name,omitempty"`
	Held          *bool            `protobuf:"varint,3,opt,name=held" json:"held,omitempty"`
	InternalCount *int32           `protobuf:"varint,4,opt,name=internal_count,json=internalCount" json:"internal_count,omitempty"`
	WorkSource    *WorkSourceProto `protobuf:"bytes,5,opt,name=work_source,json=workSource" json:"work_source,omitempty"`
}

func (x *PowerManagerProto_WakeLock) Reset() {
	*x = PowerManagerProto_WakeLock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frameworks_base_core_proto_android_os_powermanager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PowerManagerProto_WakeLock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PowerManagerProto_WakeLock) ProtoMessage() {}

func (x *PowerManagerProto_WakeLock) ProtoReflect() protoreflect.Message {
	mi := &file_frameworks_base_core_proto_android_os_powermanager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PowerManagerProto_WakeLock.ProtoReflect.Descriptor instead.
func (*PowerManagerProto_WakeLock) Descriptor() ([]byte, []int) {
	return file_frameworks_base_core_proto_android_os_powermanager_proto_rawDescGZIP(), []int{0, 0}
}

func (x *PowerManagerProto_WakeLock) GetTag() string {
	if x != nil && x.Tag != nil {
		return *x.Tag
	}
	return ""
}

func (x *PowerManagerProto_WakeLock) GetPackageName() string {
	if x != nil && x.PackageName != nil {
		return *x.PackageName
	}
	return ""
}

func (x *PowerManagerProto_WakeLock) GetHeld() bool {
	if x != nil && x.Held != nil {
		return *x.Held
	}
	return false
}

func (x *PowerManagerProto_WakeLock) GetInternalCount() int32 {
	if x != nil && x.InternalCount != nil {
		return *x.InternalCount
	}
	return 0
}

func (x *PowerManagerProto_WakeLock) GetWorkSource() *WorkSourceProto {
	if x != nil {
		return x.WorkSource
	}
	return nil
}

var File_frameworks_base_core_proto_android_os_powermanager_proto protoreflect.FileDescriptor

var file_frameworks_base_core_proto_android_os_powermanager_proto_rawDesc = []byte{
	0x0a, 0x38, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x2f, 0x62, 0x61, 0x73,
	0x65, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2f, 0x6f, 0x73, 0x2f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x61, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x2e, 0x6f, 0x73, 0x1a, 0x36, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2f, 0x6f, 0x73, 0x2f, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x30,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f,
	0x63, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xf4, 0x02, 0x0a, 0x11, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0xc3, 0x01, 0x0a, 0x08, 0x57, 0x61, 0x6b, 0x65, 0x4c,
	0x6f, 0x63, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x65, 0x6c, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x68, 0x65, 0x6c, 0x64, 0x12, 0x25, 0x0a, 0x0e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x2e, 0x6f, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x3a, 0x09, 0x9a, 0x9f, 0xd5, 0x87, 0x03, 0x03, 0x08, 0xc8, 0x01, 0x22, 0x98, 0x01, 0x0a,
	0x11, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x19, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56,
	0x49, 0x54, 0x59, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10,
	0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49,
	0x54, 0x59, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x42, 0x55, 0x54, 0x54, 0x4f, 0x4e, 0x10,
	0x01, 0x12, 0x1d, 0x0a, 0x19, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49,
	0x54, 0x59, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x4f, 0x55, 0x43, 0x48, 0x10, 0x02,
	0x12, 0x25, 0x0a, 0x21, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54,
	0x59, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x49, 0x42,
	0x49, 0x4c, 0x49, 0x54, 0x59, 0x10, 0x03, 0x22, 0x8b, 0x01, 0x0a, 0x19, 0x50, 0x6f, 0x77, 0x65,
	0x72, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6e, 0x0a, 0x0b, 0x57, 0x61, 0x6b, 0x65, 0x66, 0x75, 0x6c,
	0x6e, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x57, 0x41, 0x4b, 0x45, 0x46, 0x55, 0x4c, 0x4e,
	0x45, 0x53, 0x53, 0x5f, 0x41, 0x53, 0x4c, 0x45, 0x45, 0x50, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11,
	0x57, 0x41, 0x4b, 0x45, 0x46, 0x55, 0x4c, 0x4e, 0x45, 0x53, 0x53, 0x5f, 0x41, 0x57, 0x41, 0x4b,
	0x45, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x57, 0x41, 0x4b, 0x45, 0x46, 0x55, 0x4c, 0x4e, 0x45,
	0x53, 0x53, 0x5f, 0x44, 0x52, 0x45, 0x41, 0x4d, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x16, 0x0a,
	0x12, 0x57, 0x41, 0x4b, 0x45, 0x46, 0x55, 0x4c, 0x4e, 0x45, 0x53, 0x53, 0x5f, 0x44, 0x4f, 0x5a,
	0x49, 0x4e, 0x47, 0x10, 0x03, 0x42, 0x02, 0x50, 0x01,
}

var (
	file_frameworks_base_core_proto_android_os_powermanager_proto_rawDescOnce sync.Once
	file_frameworks_base_core_proto_android_os_powermanager_proto_rawDescData = file_frameworks_base_core_proto_android_os_powermanager_proto_rawDesc
)

func file_frameworks_base_core_proto_android_os_powermanager_proto_rawDescGZIP() []byte {
	file_frameworks_base_core_proto_android_os_powermanager_proto_rawDescOnce.Do(func() {
		file_frameworks_base_core_proto_android_os_powermanager_proto_rawDescData = protoimpl.X.CompressGZIP(file_frameworks_base_core_proto_android_os_powermanager_proto_rawDescData)
	})
	return file_frameworks_base_core_proto_android_os_powermanager_proto_rawDescData
}

var file_frameworks_base_core_proto_android_os_powermanager_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_frameworks_base_core_proto_android_os_powermanager_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_frameworks_base_core_proto_android_os_powermanager_proto_goTypes = []any{
	(PowerManagerProto_UserActivityEvent)(0),   // 0: android.os.PowerManagerProto.UserActivityEvent
	(PowerManagerInternalProto_Wakefulness)(0), // 1: android.os.PowerManagerInternalProto.Wakefulness
	(*PowerManagerProto)(nil),                  // 2: android.os.PowerManagerProto
	(*PowerManagerInternalProto)(nil),          // 3: android.os.PowerManagerInternalProto
	(*PowerManagerProto_WakeLock)(nil),         // 4: android.os.PowerManagerProto.WakeLock
	(*WorkSourceProto)(nil),                    // 5: android.os.WorkSourceProto
}
var file_frameworks_base_core_proto_android_os_powermanager_proto_depIdxs = []int32{
	5, // 0: android.os.PowerManagerProto.WakeLock.work_source:type_name -> android.os.WorkSourceProto
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_frameworks_base_core_proto_android_os_powermanager_proto_init() }
func file_frameworks_base_core_proto_android_os_powermanager_proto_init() {
	if File_frameworks_base_core_proto_android_os_powermanager_proto != nil {
		return
	}
	file_frameworks_base_core_proto_android_os_worksource_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_frameworks_base_core_proto_android_os_powermanager_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*PowerManagerProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_os_powermanager_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*PowerManagerInternalProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frameworks_base_core_proto_android_os_powermanager_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*PowerManagerProto_WakeLock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_frameworks_base_core_proto_android_os_powermanager_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_frameworks_base_core_proto_android_os_powermanager_proto_goTypes,
		DependencyIndexes: file_frameworks_base_core_proto_android_os_powermanager_proto_depIdxs,
		EnumInfos:         file_frameworks_base_core_proto_android_os_powermanager_proto_enumTypes,
		MessageInfos:      file_frameworks_base_core_proto_android_os_powermanager_proto_msgTypes,
	}.Build()
	File_frameworks_base_core_proto_android_os_powermanager_proto = out.File
	file_frameworks_base_core_proto_android_os_powermanager_proto_rawDesc = nil
	file_frameworks_base_core_proto_android_os_powermanager_proto_goTypes = nil
	file_frameworks_base_core_proto_android_os_powermanager_proto_depIdxs = nil
}
