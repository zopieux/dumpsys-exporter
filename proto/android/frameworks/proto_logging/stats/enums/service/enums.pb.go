//
// Copyright (C) 2021 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.25.4
// source: frameworks/proto_logging/stats/enums/service/enums.proto

package service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UsbEndPointType int32

const (
	UsbEndPointType_USB_ENDPOINT_TYPE_XFER_CONTROL UsbEndPointType = 0
	UsbEndPointType_USB_ENDPOINT_TYPE_XFER_ISOC    UsbEndPointType = 1
	UsbEndPointType_USB_ENDPOINT_TYPE_XFER_BULK    UsbEndPointType = 2
	UsbEndPointType_USB_ENDPOINT_TYPE_XFER_INT     UsbEndPointType = 3
)

// Enum value maps for UsbEndPointType.
var (
	UsbEndPointType_name = map[int32]string{
		0: "USB_ENDPOINT_TYPE_XFER_CONTROL",
		1: "USB_ENDPOINT_TYPE_XFER_ISOC",
		2: "USB_ENDPOINT_TYPE_XFER_BULK",
		3: "USB_ENDPOINT_TYPE_XFER_INT",
	}
	UsbEndPointType_value = map[string]int32{
		"USB_ENDPOINT_TYPE_XFER_CONTROL": 0,
		"USB_ENDPOINT_TYPE_XFER_ISOC":    1,
		"USB_ENDPOINT_TYPE_XFER_BULK":    2,
		"USB_ENDPOINT_TYPE_XFER_INT":     3,
	}
)

func (x UsbEndPointType) Enum() *UsbEndPointType {
	p := new(UsbEndPointType)
	*p = x
	return p
}

func (x UsbEndPointType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UsbEndPointType) Descriptor() protoreflect.EnumDescriptor {
	return file_frameworks_proto_logging_stats_enums_service_enums_proto_enumTypes[0].Descriptor()
}

func (UsbEndPointType) Type() protoreflect.EnumType {
	return &file_frameworks_proto_logging_stats_enums_service_enums_proto_enumTypes[0]
}

func (x UsbEndPointType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *UsbEndPointType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = UsbEndPointType(num)
	return nil
}

// Deprecated: Use UsbEndPointType.Descriptor instead.
func (UsbEndPointType) EnumDescriptor() ([]byte, []int) {
	return file_frameworks_proto_logging_stats_enums_service_enums_proto_rawDescGZIP(), []int{0}
}

type UsbEndPointDirection int32

const (
	UsbEndPointDirection_USB_ENDPOINT_DIR_OUT UsbEndPointDirection = 0
	UsbEndPointDirection_USB_ENDPOINT_DIR_IN  UsbEndPointDirection = 128
)

// Enum value maps for UsbEndPointDirection.
var (
	UsbEndPointDirection_name = map[int32]string{
		0:   "USB_ENDPOINT_DIR_OUT",
		128: "USB_ENDPOINT_DIR_IN",
	}
	UsbEndPointDirection_value = map[string]int32{
		"USB_ENDPOINT_DIR_OUT": 0,
		"USB_ENDPOINT_DIR_IN":  128,
	}
)

func (x UsbEndPointDirection) Enum() *UsbEndPointDirection {
	p := new(UsbEndPointDirection)
	*p = x
	return p
}

func (x UsbEndPointDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UsbEndPointDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_frameworks_proto_logging_stats_enums_service_enums_proto_enumTypes[1].Descriptor()
}

func (UsbEndPointDirection) Type() protoreflect.EnumType {
	return &file_frameworks_proto_logging_stats_enums_service_enums_proto_enumTypes[1]
}

func (x UsbEndPointDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *UsbEndPointDirection) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = UsbEndPointDirection(num)
	return nil
}

// Deprecated: Use UsbEndPointDirection.Descriptor instead.
func (UsbEndPointDirection) EnumDescriptor() ([]byte, []int) {
	return file_frameworks_proto_logging_stats_enums_service_enums_proto_rawDescGZIP(), []int{1}
}

type UsbConnectionRecordMode int32

const (
	UsbConnectionRecordMode_USB_CONNECTION_RECORD_MODE_CONNECT           UsbConnectionRecordMode = 0
	UsbConnectionRecordMode_USB_CONNECTION_RECORD_MODE_CONNECT_BADPARSE  UsbConnectionRecordMode = 1
	UsbConnectionRecordMode_USB_CONNECTION_RECORD_MODE_CONNECT_BADDEVICE UsbConnectionRecordMode = 2
	UsbConnectionRecordMode_USB_CONNECTION_RECORD_MODE_DISCONNECT        UsbConnectionRecordMode = -1
)

// Enum value maps for UsbConnectionRecordMode.
var (
	UsbConnectionRecordMode_name = map[int32]string{
		0:  "USB_CONNECTION_RECORD_MODE_CONNECT",
		1:  "USB_CONNECTION_RECORD_MODE_CONNECT_BADPARSE",
		2:  "USB_CONNECTION_RECORD_MODE_CONNECT_BADDEVICE",
		-1: "USB_CONNECTION_RECORD_MODE_DISCONNECT",
	}
	UsbConnectionRecordMode_value = map[string]int32{
		"USB_CONNECTION_RECORD_MODE_CONNECT":           0,
		"USB_CONNECTION_RECORD_MODE_CONNECT_BADPARSE":  1,
		"USB_CONNECTION_RECORD_MODE_CONNECT_BADDEVICE": 2,
		"USB_CONNECTION_RECORD_MODE_DISCONNECT":        -1,
	}
)

func (x UsbConnectionRecordMode) Enum() *UsbConnectionRecordMode {
	p := new(UsbConnectionRecordMode)
	*p = x
	return p
}

func (x UsbConnectionRecordMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UsbConnectionRecordMode) Descriptor() protoreflect.EnumDescriptor {
	return file_frameworks_proto_logging_stats_enums_service_enums_proto_enumTypes[2].Descriptor()
}

func (UsbConnectionRecordMode) Type() protoreflect.EnumType {
	return &file_frameworks_proto_logging_stats_enums_service_enums_proto_enumTypes[2]
}

func (x UsbConnectionRecordMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *UsbConnectionRecordMode) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = UsbConnectionRecordMode(num)
	return nil
}

// Deprecated: Use UsbConnectionRecordMode.Descriptor instead.
func (UsbConnectionRecordMode) EnumDescriptor() ([]byte, []int) {
	return file_frameworks_proto_logging_stats_enums_service_enums_proto_rawDescGZIP(), []int{2}
}

// Same as android.hardware.usb.V1_2.Constants.ContaminantPresenceStatus
type ContaminantPresenceStatus int32

const (
	ContaminantPresenceStatus_CONTAMINANT_STATUS_UNKNOWN       ContaminantPresenceStatus = 0
	ContaminantPresenceStatus_CONTAMINANT_STATUS_NOT_SUPPORTED ContaminantPresenceStatus = 1
	ContaminantPresenceStatus_CONTAMINANT_STATUS_DISABLED      ContaminantPresenceStatus = 2
	ContaminantPresenceStatus_CONTAMINANT_STATUS_NOT_DETECTED  ContaminantPresenceStatus = 3
	ContaminantPresenceStatus_CONTAMINANT_STATUS_DETECTED      ContaminantPresenceStatus = 4
)

// Enum value maps for ContaminantPresenceStatus.
var (
	ContaminantPresenceStatus_name = map[int32]string{
		0: "CONTAMINANT_STATUS_UNKNOWN",
		1: "CONTAMINANT_STATUS_NOT_SUPPORTED",
		2: "CONTAMINANT_STATUS_DISABLED",
		3: "CONTAMINANT_STATUS_NOT_DETECTED",
		4: "CONTAMINANT_STATUS_DETECTED",
	}
	ContaminantPresenceStatus_value = map[string]int32{
		"CONTAMINANT_STATUS_UNKNOWN":       0,
		"CONTAMINANT_STATUS_NOT_SUPPORTED": 1,
		"CONTAMINANT_STATUS_DISABLED":      2,
		"CONTAMINANT_STATUS_NOT_DETECTED":  3,
		"CONTAMINANT_STATUS_DETECTED":      4,
	}
)

func (x ContaminantPresenceStatus) Enum() *ContaminantPresenceStatus {
	p := new(ContaminantPresenceStatus)
	*p = x
	return p
}

func (x ContaminantPresenceStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContaminantPresenceStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_frameworks_proto_logging_stats_enums_service_enums_proto_enumTypes[3].Descriptor()
}

func (ContaminantPresenceStatus) Type() protoreflect.EnumType {
	return &file_frameworks_proto_logging_stats_enums_service_enums_proto_enumTypes[3]
}

func (x ContaminantPresenceStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ContaminantPresenceStatus) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ContaminantPresenceStatus(num)
	return nil
}

// Deprecated: Use ContaminantPresenceStatus.Descriptor instead.
func (ContaminantPresenceStatus) EnumDescriptor() ([]byte, []int) {
	return file_frameworks_proto_logging_stats_enums_service_enums_proto_rawDescGZIP(), []int{3}
}

type ComplianceWarning int32

const (
	ComplianceWarning_COMPLIANCE_WARNING_UNSPECIFIED         ComplianceWarning = 0
	ComplianceWarning_COMPLIANCE_WARNING_DEBUG_ACCESSORY     ComplianceWarning = 1
	ComplianceWarning_COMPLIANCE_WARNING_BC_1_2              ComplianceWarning = 2
	ComplianceWarning_COMPLIANCE_WARNING_MISSING_RP          ComplianceWarning = 3
	ComplianceWarning_COMPLIANCE_WARNING_OTHER               ComplianceWarning = 4
	ComplianceWarning_COMPLIANCE_WARNING_INPUT_POWER_LIMITED ComplianceWarning = 5
	ComplianceWarning_COMPLIANCE_WARNING_MISSING_DATA_LINES  ComplianceWarning = 6
	ComplianceWarning_COMPLIANCE_WARNING_ENUMERATION_FAIL    ComplianceWarning = 7
	ComplianceWarning_COMPLIANCE_WARNING_FLAKY_CONNECTION    ComplianceWarning = 8
	ComplianceWarning_COMPLIANCE_WARNING_UNRELIABLE_IO       ComplianceWarning = 9
)

// Enum value maps for ComplianceWarning.
var (
	ComplianceWarning_name = map[int32]string{
		0: "COMPLIANCE_WARNING_UNSPECIFIED",
		1: "COMPLIANCE_WARNING_DEBUG_ACCESSORY",
		2: "COMPLIANCE_WARNING_BC_1_2",
		3: "COMPLIANCE_WARNING_MISSING_RP",
		4: "COMPLIANCE_WARNING_OTHER",
		5: "COMPLIANCE_WARNING_INPUT_POWER_LIMITED",
		6: "COMPLIANCE_WARNING_MISSING_DATA_LINES",
		7: "COMPLIANCE_WARNING_ENUMERATION_FAIL",
		8: "COMPLIANCE_WARNING_FLAKY_CONNECTION",
		9: "COMPLIANCE_WARNING_UNRELIABLE_IO",
	}
	ComplianceWarning_value = map[string]int32{
		"COMPLIANCE_WARNING_UNSPECIFIED":         0,
		"COMPLIANCE_WARNING_DEBUG_ACCESSORY":     1,
		"COMPLIANCE_WARNING_BC_1_2":              2,
		"COMPLIANCE_WARNING_MISSING_RP":          3,
		"COMPLIANCE_WARNING_OTHER":               4,
		"COMPLIANCE_WARNING_INPUT_POWER_LIMITED": 5,
		"COMPLIANCE_WARNING_MISSING_DATA_LINES":  6,
		"COMPLIANCE_WARNING_ENUMERATION_FAIL":    7,
		"COMPLIANCE_WARNING_FLAKY_CONNECTION":    8,
		"COMPLIANCE_WARNING_UNRELIABLE_IO":       9,
	}
)

func (x ComplianceWarning) Enum() *ComplianceWarning {
	p := new(ComplianceWarning)
	*p = x
	return p
}

func (x ComplianceWarning) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComplianceWarning) Descriptor() protoreflect.EnumDescriptor {
	return file_frameworks_proto_logging_stats_enums_service_enums_proto_enumTypes[4].Descriptor()
}

func (ComplianceWarning) Type() protoreflect.EnumType {
	return &file_frameworks_proto_logging_stats_enums_service_enums_proto_enumTypes[4]
}

func (x ComplianceWarning) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ComplianceWarning) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ComplianceWarning(num)
	return nil
}

// Deprecated: Use ComplianceWarning.Descriptor instead.
func (ComplianceWarning) EnumDescriptor() ([]byte, []int) {
	return file_frameworks_proto_logging_stats_enums_service_enums_proto_rawDescGZIP(), []int{4}
}

var File_frameworks_proto_logging_stats_enums_service_enums_proto protoreflect.FileDescriptor

var file_frameworks_proto_logging_stats_enums_service_enums_proto_rawDesc = []byte{
	0x0a, 0x38, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x65,
	0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x61, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2a, 0x97, 0x01, 0x0a, 0x0f,
	0x55, 0x73, 0x62, 0x45, 0x6e, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x22, 0x0a, 0x1e, 0x55, 0x53, 0x42, 0x5f, 0x45, 0x4e, 0x44, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x58, 0x46, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f,
	0x4c, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x55, 0x53, 0x42, 0x5f, 0x45, 0x4e, 0x44, 0x50, 0x4f,
	0x49, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x58, 0x46, 0x45, 0x52, 0x5f, 0x49, 0x53,
	0x4f, 0x43, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x55, 0x53, 0x42, 0x5f, 0x45, 0x4e, 0x44, 0x50,
	0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x58, 0x46, 0x45, 0x52, 0x5f, 0x42,
	0x55, 0x4c, 0x4b, 0x10, 0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x55, 0x53, 0x42, 0x5f, 0x45, 0x4e, 0x44,
	0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x58, 0x46, 0x45, 0x52, 0x5f,
	0x49, 0x4e, 0x54, 0x10, 0x03, 0x2a, 0x4a, 0x0a, 0x14, 0x55, 0x73, 0x62, 0x45, 0x6e, 0x64, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x14, 0x55, 0x53, 0x42, 0x5f, 0x45, 0x4e, 0x44, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x44, 0x49,
	0x52, 0x5f, 0x4f, 0x55, 0x54, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x13, 0x55, 0x53, 0x42, 0x5f, 0x45,
	0x4e, 0x44, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x44, 0x49, 0x52, 0x5f, 0x49, 0x4e, 0x10, 0x80,
	0x01, 0x2a, 0xd8, 0x01, 0x0a, 0x17, 0x55, 0x73, 0x62, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a,
	0x22, 0x55, 0x53, 0x42, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x4e,
	0x45, 0x43, 0x54, 0x10, 0x00, 0x12, 0x2f, 0x0a, 0x2b, 0x55, 0x53, 0x42, 0x5f, 0x43, 0x4f, 0x4e,
	0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x5f, 0x4d,
	0x4f, 0x44, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x5f, 0x42, 0x41, 0x44, 0x50,
	0x41, 0x52, 0x53, 0x45, 0x10, 0x01, 0x12, 0x30, 0x0a, 0x2c, 0x55, 0x53, 0x42, 0x5f, 0x43, 0x4f,
	0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x5f,
	0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x5f, 0x42, 0x41, 0x44,
	0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x10, 0x02, 0x12, 0x32, 0x0a, 0x25, 0x55, 0x53, 0x42, 0x5f,
	0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x52,
	0x44, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43,
	0x54, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x2a, 0xc8, 0x01, 0x0a,
	0x19, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x65, 0x73,
	0x65, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x4f,
	0x4e, 0x54, 0x41, 0x4d, 0x49, 0x4e, 0x41, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x24, 0x0a, 0x20, 0x43, 0x4f,
	0x4e, 0x54, 0x41, 0x4d, 0x49, 0x4e, 0x41, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x01,
	0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x4d, 0x49, 0x4e, 0x41, 0x4e, 0x54, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10,
	0x02, 0x12, 0x23, 0x0a, 0x1f, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x4d, 0x49, 0x4e, 0x41, 0x4e, 0x54,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x44, 0x45, 0x54, 0x45,
	0x43, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x4d,
	0x49, 0x4e, 0x41, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x45, 0x54,
	0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x04, 0x2a, 0x8e, 0x03, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x22, 0x0a,
	0x1e, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x49, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x57, 0x41, 0x52, 0x4e,
	0x49, 0x4e, 0x47, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x26, 0x0a, 0x22, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x49, 0x41, 0x4e, 0x43, 0x45, 0x5f,
	0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x44, 0x45, 0x42, 0x55, 0x47, 0x5f, 0x41, 0x43,
	0x43, 0x45, 0x53, 0x53, 0x4f, 0x52, 0x59, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x43, 0x4f, 0x4d,
	0x50, 0x4c, 0x49, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x5f,
	0x42, 0x43, 0x5f, 0x31, 0x5f, 0x32, 0x10, 0x02, 0x12, 0x21, 0x0a, 0x1d, 0x43, 0x4f, 0x4d, 0x50,
	0x4c, 0x49, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x4d,
	0x49, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x5f, 0x52, 0x50, 0x10, 0x03, 0x12, 0x1c, 0x0a, 0x18, 0x43,
	0x4f, 0x4d, 0x50, 0x4c, 0x49, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e,
	0x47, 0x5f, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x04, 0x12, 0x2a, 0x0a, 0x26, 0x43, 0x4f, 0x4d,
	0x50, 0x4c, 0x49, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x5f,
	0x49, 0x4e, 0x50, 0x55, 0x54, 0x5f, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x5f, 0x4c, 0x49, 0x4d, 0x49,
	0x54, 0x45, 0x44, 0x10, 0x05, 0x12, 0x29, 0x0a, 0x25, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x49, 0x41,
	0x4e, 0x43, 0x45, 0x5f, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x4d, 0x49, 0x53, 0x53,
	0x49, 0x4e, 0x47, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4c, 0x49, 0x4e, 0x45, 0x53, 0x10, 0x06,
	0x12, 0x27, 0x0a, 0x23, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x49, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x57,
	0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x45, 0x4e, 0x55, 0x4d, 0x45, 0x52, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x07, 0x12, 0x27, 0x0a, 0x23, 0x43, 0x4f, 0x4d,
	0x50, 0x4c, 0x49, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x5f,
	0x46, 0x4c, 0x41, 0x4b, 0x59, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x08, 0x12, 0x24, 0x0a, 0x20, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x49, 0x41, 0x4e, 0x43, 0x45,
	0x5f, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x55, 0x4e, 0x52, 0x45, 0x4c, 0x49, 0x41,
	0x42, 0x4c, 0x45, 0x5f, 0x49, 0x4f, 0x10, 0x09, 0x42, 0x15, 0x42, 0x11, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x45, 0x6e, 0x75, 0x6d, 0x73, 0x50, 0x01,
}

var (
	file_frameworks_proto_logging_stats_enums_service_enums_proto_rawDescOnce sync.Once
	file_frameworks_proto_logging_stats_enums_service_enums_proto_rawDescData = file_frameworks_proto_logging_stats_enums_service_enums_proto_rawDesc
)

func file_frameworks_proto_logging_stats_enums_service_enums_proto_rawDescGZIP() []byte {
	file_frameworks_proto_logging_stats_enums_service_enums_proto_rawDescOnce.Do(func() {
		file_frameworks_proto_logging_stats_enums_service_enums_proto_rawDescData = protoimpl.X.CompressGZIP(file_frameworks_proto_logging_stats_enums_service_enums_proto_rawDescData)
	})
	return file_frameworks_proto_logging_stats_enums_service_enums_proto_rawDescData
}

var file_frameworks_proto_logging_stats_enums_service_enums_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_frameworks_proto_logging_stats_enums_service_enums_proto_goTypes = []any{
	(UsbEndPointType)(0),           // 0: android.service.UsbEndPointType
	(UsbEndPointDirection)(0),      // 1: android.service.UsbEndPointDirection
	(UsbConnectionRecordMode)(0),   // 2: android.service.UsbConnectionRecordMode
	(ContaminantPresenceStatus)(0), // 3: android.service.ContaminantPresenceStatus
	(ComplianceWarning)(0),         // 4: android.service.ComplianceWarning
}
var file_frameworks_proto_logging_stats_enums_service_enums_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_frameworks_proto_logging_stats_enums_service_enums_proto_init() }
func file_frameworks_proto_logging_stats_enums_service_enums_proto_init() {
	if File_frameworks_proto_logging_stats_enums_service_enums_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_frameworks_proto_logging_stats_enums_service_enums_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_frameworks_proto_logging_stats_enums_service_enums_proto_goTypes,
		DependencyIndexes: file_frameworks_proto_logging_stats_enums_service_enums_proto_depIdxs,
		EnumInfos:         file_frameworks_proto_logging_stats_enums_service_enums_proto_enumTypes,
	}.Build()
	File_frameworks_proto_logging_stats_enums_service_enums_proto = out.File
	file_frameworks_proto_logging_stats_enums_service_enums_proto_rawDesc = nil
	file_frameworks_proto_logging_stats_enums_service_enums_proto_goTypes = nil
	file_frameworks_proto_logging_stats_enums_service_enums_proto_depIdxs = nil
}
