/*
 * Copyright (C) 2023 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto2";

package android.os.statsd.kernel;

import "frameworks/proto_logging/stats/atoms.proto";
import "frameworks/proto_logging/stats/atom_field_options.proto";

option java_package = "com.android.os.kernel";
option java_multiple_files = true;

extend Atom {
    optional KernelOomKillOccurred kernel_oom_kill_occurred = 754
        [(module) = "framework"];
}

/**
 * Logs each time the kernel's out-of-memory (OOM) killer claims a victim.
 * Logged from:
 *  frameworks/base/core/java/android/os/OomKillRecord.java
 */
message KernelOomKillOccurred {
    // The uid if available. -1 means not available.
    optional int32 uid = 1 [(is_uid) = true];

    // The pid if available. -1 means not available.
    optional int32 pid = 2;

    // Recorded oom score when getting killed.
    optional int32 oom_score_adj = 3;

    // Millisecond uptime timestamp of when the kill was detected by the memevents bpf-program.
    optional int64 timestamp_millis = 4;

    // Name of the killed process.
    optional string process_name = 5;

    // OOM victim's virtual memory, which was freed up after the process' death.
    optional int64 total_vm_kb = 6;

    // OOM victim's anonymous RSS memory, which was freed up after the process' death.
    optional int64 anon_rss_kb = 7;

    // OOM victim's file-backed RSS memory, which was freed up after the process' death.
    optional int64 file_rss_kb = 8;

    // OOM victim's shared RSS memory, which was freed up after the process' death.
    optional int64 shmem_rss_kb = 9;

    // OOM victim's page tables, which was freed after the process' death
    optional int64 pgtables_kb = 10;
}
